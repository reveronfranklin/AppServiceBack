
using AppService.Core.EntitiesMooreve;
using Microsoft.EntityFrameworkCore;
using System;


namespace AppService.Infrastructure.DataMooreve
{
    public partial class MooreveContext : DbContext
    {
        public MooreveContext()
        {
        }

        public MooreveContext(DbContextOptions<MooreveContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Activos> Activos { get; set; }
        public virtual DbSet<AjustesPorPagoFueraPeriodo> AjustesPorPagoFueraPeriodo { get; set; }
        public virtual DbSet<AppBacklogInicial> AppBacklogInicial { get; set; }
        public virtual DbSet<AppEmbarques> AppEmbarques { get; set; }
        public virtual DbSet<AppLlegadaOrdenesDiarias> AppLlegadaOrdenesDiarias { get; set; }
        public virtual DbSet<AppLlegadaOrdenesDiariasOficina> AppLlegadaOrdenesDiariasOficina { get; set; }
        public virtual DbSet<AppMesChar> AppMesChar { get; set; }
        public virtual DbSet<AppNotificacionEmail> AppNotificacionEmail { get; set; }
        public virtual DbSet<AppOrdenesGrabadasProducto> AppOrdenesGrabadasProducto { get; set; }
        public virtual DbSet<AppStatusOrden> AppStatusOrden { get; set; }
        public virtual DbSet<AppUsuarioPages> AppUsuarioPages { get; set; }
        public virtual DbSet<Ascii> Ascii { get; set; }
        public virtual DbSet<Audit> Audit { get; set; }
        public virtual DbSet<Auxiliarcuota> Auxiliarcuota { get; set; }
        public virtual DbSet<Auxiliarcuota02222027> Auxiliarcuota02222027 { get; set; }
        public virtual DbSet<BacklogDirecciones> BacklogDirecciones { get; set; }
        public virtual DbSet<BacklogDireccionesR> BacklogDireccionesR { get; set; }
        public virtual DbSet<BacklogNoFacturar> BacklogNoFacturar { get; set; }
        public virtual DbSet<BacklogPorFacturar> BacklogPorFacturar { get; set; }
        public virtual DbSet<BacklogPorFacturar05> BacklogPorFacturar05 { get; set; }
        public virtual DbSet<BacklogPorFacturar05a> BacklogPorFacturar05a { get; set; }
        public virtual DbSet<BacklogPrelistasDespacho> BacklogPrelistasDespacho { get; set; }
        public virtual DbSet<CedulasErradasCne> CedulasErradasCne { get; set; }
        public virtual DbSet<CedulasErradasCne2> CedulasErradasCne2 { get; set; }
        public virtual DbSet<Cev001> Cev001 { get; set; }
        public virtual DbSet<Cev002> Cev002 { get; set; }
        public virtual DbSet<Cev003> Cev003 { get; set; }
        public virtual DbSet<Civy004> Civy004 { get; set; }
        public virtual DbSet<Civy006> Civy006 { get; set; }
        public virtual DbSet<Civy008> Civy008 { get; set; }
        public virtual DbSet<Civy010> Civy010 { get; set; }
        public virtual DbSet<Civy023> Civy023 { get; set; }
        public virtual DbSet<ClientesPorFacturar> ClientesPorFacturar { get; set; }
        public virtual DbSet<CneCentroVotacionCapacitacion> CneCentroVotacionCapacitacion { get; set; }
        public virtual DbSet<CneCredenciales> CneCredenciales { get; set; }
        public virtual DbSet<CneEstados> CneEstados { get; set; }
        public virtual DbSet<CneMaestroCentroCapacitacion> CneMaestroCentroCapacitacion { get; set; }
        public virtual DbSet<CneMunicipios> CneMunicipios { get; set; }
        public virtual DbSet<CneParroquias> CneParroquias { get; set; }
        public virtual DbSet<Codigosbarra> Codigosbarra { get; set; }
        public virtual DbSet<Complemento> Complemento { get; set; }
        public virtual DbSet<ConsolidadoOrdenes> ConsolidadoOrdenes { get; set; }
        public virtual DbSet<CotizacionesModificada> CotizacionesModificada { get; set; }
        public virtual DbSet<Cpry114> Cpry114 { get; set; }
        public virtual DbSet<Cpry114copia> Cpry114copia { get; set; }
        public virtual DbSet<Cpry115> Cpry115 { get; set; }
        public virtual DbSet<Cpry180> Cpry180 { get; set; }
        public virtual DbSet<Cpry251> Cpry251 { get; set; }
        public virtual DbSet<Cpry252> Cpry252 { get; set; }
        public virtual DbSet<Cpry253> Cpry253 { get; set; }
        public virtual DbSet<Cpry254> Cpry254 { get; set; }
        public virtual DbSet<Cpry255> Cpry255 { get; set; }
        public virtual DbSet<Cpry256> Cpry256 { get; set; }
        public virtual DbSet<Cpry257> Cpry257 { get; set; }
        public virtual DbSet<Cpry258> Cpry258 { get; set; }
        public virtual DbSet<CreActualizaClienteCotizacion> CreActualizaClienteCotizacion { get; set; }
        public virtual DbSet<CreEjecutaAprobarCredito> CreEjecutaAprobarCredito { get; set; }
        public virtual DbSet<CreOficinasAcontrolar> CreOficinasAcontrolar { get; set; }
        public virtual DbSet<CrmTicketEncuesta> CrmTicketEncuesta { get; set; }
        public virtual DbSet<Csmy011> Csmy011 { get; set; }
        public virtual DbSet<Csmy036> Csmy036 { get; set; }
        public virtual DbSet<Csmy037> Csmy037 { get; set; }
        public virtual DbSet<Cuota2010> Cuota2010 { get; set; }
        public virtual DbSet<DataCenter> DataCenter { get; set; }
        public virtual DbSet<DatosCliente> DatosCliente { get; set; }
        public virtual DbSet<Depofacil> Depofacil { get; set; }
        public virtual DbSet<Detalle> Detalle { get; set; }
        public virtual DbSet<DetalleComidas> DetalleComidas { get; set; }
        public virtual DbSet<DirectorioActivo> DirectorioActivo { get; set; }
        public virtual DbSet<EjeucionProceso> EjeucionProceso { get; set; }
        public virtual DbSet<EjeucionProcesoVariacionInventario> EjeucionProcesoVariacionInventario { get; set; }
        public virtual DbSet<Email> Email { get; set; }
        public virtual DbSet<EmbarquesVentas> EmbarquesVentas { get; set; }
        public virtual DbSet<Estacion> Estacion { get; set; }
        public virtual DbSet<EstadoMunucipio> EstadoMunucipio { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<EstatusDominio> EstatusDominio { get; set; }
        public virtual DbSet<EtiquetasSerpapro> EtiquetasSerpapro { get; set; }
        public virtual DbSet<EtiquetasStock> EtiquetasStock { get; set; }
        public virtual DbSet<EvalCreditoFact> EvalCreditoFact { get; set; }
        public virtual DbSet<ExcepcionCambioPrecio> ExcepcionCambioPrecio { get; set; }
        public virtual DbSet<Excepciones> Excepciones { get; set; }
        public virtual DbSet<ExcepcionesFifo> ExcepcionesFifo { get; set; }
        public virtual DbSet<F1201z1Activosjde> F1201z1Activosjde { get; set; }
        public virtual DbSet<F554111eioF> F554111eioF { get; set; }
        public virtual DbSet<F554111eioFhistorico> F554111eioFhistorico { get; set; }
        public virtual DbSet<F554111eioFo> F554111eioFo { get; set; }
        public virtual DbSet<F55fjulian> F55fjulian { get; set; }
        public virtual DbSet<F55obsolescencia> F55obsolescencia { get; set; }
        public virtual DbSet<F76v4581> F76v4581 { get; set; }
        public virtual DbSet<FechaCobroOrden> FechaCobroOrden { get; set; }
        public virtual DbSet<FlatComision> FlatComision { get; set; }
        public virtual DbSet<Fuente> Fuente { get; set; }
        public virtual DbSet<General> General { get; set; }
        public virtual DbSet<Hoja1> Hoja1 { get; set; }
        public virtual DbSet<InventarioTablas> InventarioTablas { get; set; }
        public virtual DbSet<MaestroObjetos> MaestroObjetos { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Menufa> Menufa { get; set; }
        public virtual DbSet<MtrNotificacionEmail> MtrNotificacionEmail { get; set; }
        public virtual DbSet<Municipios> Municipios { get; set; }
        public virtual DbSet<NetworkId> NetworkId { get; set; }
        public virtual DbSet<Nmt004> Nmt004 { get; set; }
        public virtual DbSet<NoPendienteAprobacioCredito> NoPendienteAprobacioCredito { get; set; }
        public virtual DbSet<NotificacionPlantaActiva> NotificacionPlantaActiva { get; set; }
        public virtual DbSet<Num> Num { get; set; }
        public virtual DbSet<OrdenesReportadasSeniat> OrdenesReportadasSeniat { get; set; }
        public virtual DbSet<Pagado> Pagado { get; set; }
        public virtual DbSet<Parroquias> Parroquias { get; set; }
        public virtual DbSet<Pcascii> Pcascii { get; set; }
        public virtual DbSet<PcañoMesOrden> PcañoMesOrden { get; set; }
        public virtual DbSet<Pccliente> Pccliente { get; set; }
        public virtual DbSet<PccomisionesTemporal> PccomisionesTemporal { get; set; }
        public virtual DbSet<PccuotaVentas> PccuotaVentas { get; set; }
        public virtual DbSet<PccuotaVentasGerente> PccuotaVentasGerente { get; set; }
        public virtual DbSet<PcflatComision> PcflatComision { get; set; }
        public virtual DbSet<PcflatComisionGerente> PcflatComisionGerente { get; set; }
        public virtual DbSet<Pchistorico> Pchistorico { get; set; }
        public virtual DbSet<Pcoficina> Pcoficina { get; set; }
        public virtual DbSet<PcordenesPignoradas> PcordenesPignoradas { get; set; }
        public virtual DbSet<PcporcCantidadCategoriasCubiertas> PcporcCantidadCategoriasCubiertas { get; set; }
        public virtual DbSet<Pcproceso> Pcproceso { get; set; }
        public virtual DbSet<Pcproducto> Pcproducto { get; set; }
        public virtual DbSet<PcproductoCuota> PcproductoCuota { get; set; }
        public virtual DbSet<PcrangoCumplimientoCuotaGeneral> PcrangoCumplimientoCuotaGeneral { get; set; }
        public virtual DbSet<PcrangoCumplimientoCuotaGeneralAñoMesVendedor> PcrangoCumplimientoCuotaGeneralAñoMesVendedor { get; set; }
        public virtual DbSet<PcresumenComisionHistorico> PcresumenComisionHistorico { get; set; }
        public virtual DbSet<PcresumenComisionTemporal> PcresumenComisionTemporal { get; set; }
        public virtual DbSet<PcresumenOficinaHistorico> PcresumenOficinaHistorico { get; set; }
        public virtual DbSet<PcresumenOficinaTemporal> PcresumenOficinaTemporal { get; set; }
        public virtual DbSet<Pcsysfile> Pcsysfile { get; set; }
        public virtual DbSet<PctasaAñoMes> PctasaAñoMes { get; set; }
        public virtual DbSet<Pctemporal> Pctemporal { get; set; }
        public virtual DbSet<PctemporalCoberturaCategoria> PctemporalCoberturaCategoria { get; set; }
        public virtual DbSet<PctemporalEstatusCoberturaGeneral> PctemporalEstatusCoberturaGeneral { get; set; }
        public virtual DbSet<PctemporalReporteCuota> PctemporalReporteCuota { get; set; }
        public virtual DbSet<PctipoPago> PctipoPago { get; set; }
        public virtual DbSet<Pcvendedor> Pcvendedor { get; set; }
        public virtual DbSet<PendienteCalculoMc> PendienteCalculoMc { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Planificacion> Planificacion { get; set; }
        public virtual DbSet<PreciosStockEstadoMunicipio> PreciosStockEstadoMunicipio { get; set; }
        public virtual DbSet<PreciosStockEstadoMunicipios> PreciosStockEstadoMunicipios { get; set; }
        public virtual DbSet<ProductosInventario> ProductosInventario { get; set; }
        public virtual DbSet<ProductosMcCorrectos> ProductosMcCorrectos { get; set; }
        public virtual DbSet<Pruebasms> Pruebasms { get; set; }
        public virtual DbSet<Pvt> Pvt { get; set; }
        public virtual DbSet<Qpollosc> Qpollosc { get; set; }
        public virtual DbSet<Query> Query { get; set; }
        public virtual DbSet<QueryWsmy36436501> QueryWsmy36436501 { get; set; }
        public virtual DbSet<QueryWsmy36437502> QueryWsmy36437502 { get; set; }
        public virtual DbSet<QueryWsmy36437503> QueryWsmy36437503 { get; set; }
        public virtual DbSet<RangosMillares> RangosMillares { get; set; }
        public virtual DbSet<Rcl001> Rcl001 { get; set; }
        public virtual DbSet<Rcl002> Rcl002 { get; set; }
        public virtual DbSet<Rcl003> Rcl003 { get; set; }
        public virtual DbSet<Rcl004> Rcl004 { get; set; }
        public virtual DbSet<Rcl005> Rcl005 { get; set; }
        public virtual DbSet<Rcl006> Rcl006 { get; set; }
        public virtual DbSet<Rcl007> Rcl007 { get; set; }
        public virtual DbSet<Rcl008> Rcl008 { get; set; }
        public virtual DbSet<Rcl009> Rcl009 { get; set; }
        public virtual DbSet<Rcl010> Rcl010 { get; set; }
        public virtual DbSet<Rcl011> Rcl011 { get; set; }
        public virtual DbSet<Rcl012> Rcl012 { get; set; }
        public virtual DbSet<Rcl013> Rcl013 { get; set; }
        public virtual DbSet<Recepciones2008> Recepciones2008 { get; set; }
        public virtual DbSet<Relacionfacturas> Relacionfacturas { get; set; }
        public virtual DbSet<ReporteOrion01> ReporteOrion01 { get; set; }
        public virtual DbSet<Req001> Req001 { get; set; }
        public virtual DbSet<Req002> Req002 { get; set; }
        public virtual DbSet<Req003> Req003 { get; set; }
        public virtual DbSet<Req004> Req004 { get; set; }
        public virtual DbSet<Req005> Req005 { get; set; }
        public virtual DbSet<Req006> Req006 { get; set; }
        public virtual DbSet<Req007> Req007 { get; set; }
        public virtual DbSet<Req008> Req008 { get; set; }
        public virtual DbSet<Req009> Req009 { get; set; }
        public virtual DbSet<Req010> Req010 { get; set; }
        public virtual DbSet<Req011> Req011 { get; set; }
        public virtual DbSet<Req012> Req012 { get; set; }
        public virtual DbSet<Req013> Req013 { get; set; }
        public virtual DbSet<Req014> Req014 { get; set; }
        public virtual DbSet<Req015> Req015 { get; set; }
        public virtual DbSet<Req016> Req016 { get; set; }
        public virtual DbSet<Req017> Req017 { get; set; }
        public virtual DbSet<Req018> Req018 { get; set; }
        public virtual DbSet<Req019> Req019 { get; set; }
        public virtual DbSet<Req020> Req020 { get; set; }
        public virtual DbSet<Req021> Req021 { get; set; }
        public virtual DbSet<Req022> Req022 { get; set; }
        public virtual DbSet<Req023> Req023 { get; set; }
        public virtual DbSet<Req024> Req024 { get; set; }
        public virtual DbSet<Req025> Req025 { get; set; }
        public virtual DbSet<Req026> Req026 { get; set; }
        public virtual DbSet<Req027> Req027 { get; set; }
        public virtual DbSet<Req029> Req029 { get; set; }
        public virtual DbSet<Req030> Req030 { get; set; }
        public virtual DbSet<Requisicion> Requisicion { get; set; }
        public virtual DbSet<RetenerProductoPrecio> RetenerProductoPrecio { get; set; }
        public virtual DbSet<Retislr> Retislr { get; set; }
        public virtual DbSet<RutaPredeterminada> RutaPredeterminada { get; set; }
        public virtual DbSet<Secuencia> Secuencia { get; set; }
        public virtual DbSet<SegModulo> SegModulo { get; set; }
        public virtual DbSet<SegPrograma> SegPrograma { get; set; }
        public virtual DbSet<SegRol> SegRol { get; set; }
        public virtual DbSet<SegRolModulo> SegRolModulo { get; set; }
        public virtual DbSet<SegTicket> SegTicket { get; set; }
        public virtual DbSet<SegUsuario> SegUsuario { get; set; }
        public virtual DbSet<SegUsuarioNew> SegUsuarioNew { get; set; }
        public virtual DbSet<SegUsuarioRol> SegUsuarioRol { get; set; }
        public virtual DbSet<SmsCorporativo> SmsCorporativo { get; set; }
        public virtual DbSet<SmsGenerico> SmsGenerico { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<StatusDetalle> StatusDetalle { get; set; }
        public virtual DbSet<SubCategoriaEmbarquesVentas> SubCategoriaEmbarquesVentas { get; set; }
        public virtual DbSet<Sysfile> Sysfile { get; set; }
        public virtual DbSet<TabulaDespEtq> TabulaDespEtq { get; set; }
        public virtual DbSet<TabulaDespMc> TabulaDespMc { get; set; }
        public virtual DbSet<Tareas> Tareas { get; set; }
        public virtual DbSet<TbEbtc01> TbEbtc01 { get; set; }
        public virtual DbSet<TbEbtc02> TbEbtc02 { get; set; }
        public virtual DbSet<TbEbte01> TbEbte01 { get; set; }
        public virtual DbSet<TbEbti01> TbEbti01 { get; set; }
        public virtual DbSet<TbEbti02> TbEbti02 { get; set; }
        public virtual DbSet<TbEbti03> TbEbti03 { get; set; }
        public virtual DbSet<TbEbtp01> TbEbtp01 { get; set; }
        public virtual DbSet<TbExcStkJt> TbExcStkJt { get; set; }
        public virtual DbSet<TbFleteOrdenes> TbFleteOrdenes { get; set; }
        public virtual DbSet<TbMcalto> TbMcalto { get; set; }
        public virtual DbSet<TbParMccr> TbParMccr { get; set; }
        public virtual DbSet<TbParMcet> TbParMcet { get; set; }
        public virtual DbSet<TbParMcgen> TbParMcgen { get; set; }
        public virtual DbSet<TbParMcim> TbParMcim { get; set; }
        public virtual DbSet<TbParMcw> TbParMcw { get; set; }
        public virtual DbSet<TbRptstk01> TbRptstk01 { get; set; }
        public virtual DbSet<TbRptstk01web> TbRptstk01web { get; set; }
        public virtual DbSet<TbRptstk02> TbRptstk02 { get; set; }
        public virtual DbSet<TblPruebaR1> TblPruebaR1 { get; set; }
        public virtual DbSet<TblPruebaR1dos> TblPruebaR1dos { get; set; }
        public virtual DbSet<TblPruebaR1uno> TblPruebaR1uno { get; set; }
        public virtual DbSet<TblR1> TblR1 { get; set; }
        public virtual DbSet<TempDepurar> TempDepurar { get; set; }
        public virtual DbSet<TemporalTexto> TemporalTexto { get; set; }
        public virtual DbSet<TemporalTextoGl> TemporalTextoGl { get; set; }
        public virtual DbSet<UsuarioActivos> UsuarioActivos { get; set; }
        public virtual DbSet<UsuarioMigracionActiveDirectory> UsuarioMigracionActiveDirectory { get; set; }
        public virtual DbSet<UsuariosMigrar> UsuariosMigrar { get; set; }
        public virtual DbSet<UsuariosdeDominio> UsuariosdeDominio { get; set; }
        public virtual DbSet<Usuariosenviar> Usuariosenviar { get; set; }
        public virtual DbSet<VBacklogPlanta> VBacklogPlanta { get; set; }
        public virtual DbSet<VBacklogWtmy091> VBacklogWtmy091 { get; set; }
        public virtual DbSet<VCalendarioEntrega> VCalendarioEntrega { get; set; }
        public virtual DbSet<VCalendarioEntregaVigente> VCalendarioEntregaVigente { get; set; }
        public virtual DbSet<VClientes> VClientes { get; set; }
        public virtual DbSet<VClientesVsUltimaCompra> VClientesVsUltimaCompra { get; set; }
        public virtual DbSet<VCneCredenciales> VCneCredenciales { get; set; }
        public virtual DbSet<VCneSeparadores> VCneSeparadores { get; set; }
        public virtual DbSet<VCompradores> VCompradores { get; set; }
        public virtual DbSet<VConsultaExistencia> VConsultaExistencia { get; set; }
        public virtual DbSet<VConsultaGeneralOrdenes> VConsultaGeneralOrdenes { get; set; }
        public virtual DbSet<VConsultaJob> VConsultaJob { get; set; }
        public virtual DbSet<VControl> VControl { get; set; }
        public virtual DbSet<VCotizacionDetalleAñoMesVendedorEstatus> VCotizacionDetalleAñoMesVendedorEstatus { get; set; }
        public virtual DbSet<VCotizaciones> VCotizaciones { get; set; }
        public virtual DbSet<VCotizacionesGanadasAñoMesVendedor> VCotizacionesGanadasAñoMesVendedor { get; set; }
        public virtual DbSet<VCotizacionesPendientesDeAprobacionDeCredito> VCotizacionesPendientesDeAprobacionDeCredito { get; set; }
        public virtual DbSet<VCotizadoEnEspera> VCotizadoEnEspera { get; set; }
        public virtual DbSet<VCuotaVentas> VCuotaVentas { get; set; }
        public virtual DbSet<VDetalleCompras> VDetalleCompras { get; set; }
        public virtual DbSet<VDiasCriticoPorEstacion> VDiasCriticoPorEstacion { get; set; }
        public virtual DbSet<VDiccionariodedatosmooreve> VDiccionariodedatosmooreve { get; set; }
        public virtual DbSet<VDiccionariomooreve> VDiccionariomooreve { get; set; }
        public virtual DbSet<VEmbarque> VEmbarque { get; set; }
        public virtual DbSet<VEmbarquesEnLinea> VEmbarquesEnLinea { get; set; }
        public virtual DbSet<VEmbarquesOnLine> VEmbarquesOnLine { get; set; }
        public virtual DbSet<VEntradasSalidasMes> VEntradasSalidasMes { get; set; }
        public virtual DbSet<VF0911> VF0911 { get; set; }
        public virtual DbSet<VFromLogCotizador> VFromLogCotizador { get; set; }
        public virtual DbSet<VInformacionConsultas> VInformacionConsultas { get; set; }
        public virtual DbSet<VInventarioEnTransito> VInventarioEnTransito { get; set; }
        public virtual DbSet<VInventarioInicialBodegaProducto> VInventarioInicialBodegaProducto { get; set; }
        public virtual DbSet<VInvetarioReconversion> VInvetarioReconversion { get; set; }
        public virtual DbSet<VKardex> VKardex { get; set; }
        public virtual DbSet<VKardexBodegaProductoFecha> VKardexBodegaProductoFecha { get; set; }
        public virtual DbSet<VKardexS> VKardexS { get; set; }
        public virtual DbSet<VKilosRodados> VKilosRodados { get; set; }
        public virtual DbSet<VMovimientoMes> VMovimientoMes { get; set; }
        public virtual DbSet<VNotaEntrega> VNotaEntrega { get; set; }
        public virtual DbSet<VNuevoPlanCompensacion> VNuevoPlanCompensacion { get; set; }
        public virtual DbSet<VOrdenesInternasCpo> VOrdenesInternasCpo { get; set; }
        public virtual DbSet<VOrion00001> VOrion00001 { get; set; }
        public virtual DbSet<VOrion00002> VOrion00002 { get; set; }
        public virtual DbSet<VOrion00003> VOrion00003 { get; set; }
        public virtual DbSet<VOrion00004> VOrion00004 { get; set; }
        public virtual DbSet<VOrion00005> VOrion00005 { get; set; }
        public virtual DbSet<VOrion00006> VOrion00006 { get; set; }
        public virtual DbSet<VOrion00007> VOrion00007 { get; set; }
        public virtual DbSet<VOrion00008> VOrion00008 { get; set; }
        public virtual DbSet<VOrion00009> VOrion00009 { get; set; }
        public virtual DbSet<VOrion00010> VOrion00010 { get; set; }
        public virtual DbSet<VOrion00012> VOrion00012 { get; set; }
        public virtual DbSet<VOrion00013> VOrion00013 { get; set; }
        public virtual DbSet<VOrion00014> VOrion00014 { get; set; }
        public virtual DbSet<VOrion00015> VOrion00015 { get; set; }
        public virtual DbSet<VOrion00020> VOrion00020 { get; set; }
        public virtual DbSet<VProducto> VProducto { get; set; }
        public virtual DbSet<VProductos> VProductos { get; set; }
        public virtual DbSet<VProgramaUsuarios> VProgramaUsuarios { get; set; }
        public virtual DbSet<VRecalculo> VRecalculo { get; set; }
        public virtual DbSet<VRecalculoPlanta> VRecalculoPlanta { get; set; }
        public virtual DbSet<VResumenBatchFancnd> VResumenBatchFancnd { get; set; }
        public virtual DbSet<VRncAñoMesVendedor> VRncAñoMesVendedor { get; set; }
        public virtual DbSet<VSaldoBodegaProducto> VSaldoBodegaProducto { get; set; }
        public virtual DbSet<VSeguimientoRnc> VSeguimientoRnc { get; set; }
        public virtual DbSet<VTransito> VTransito { get; set; }
        public virtual DbSet<VUltimoMes> VUltimoMes { get; set; }
        public virtual DbSet<VUsuarioProgramaRol> VUsuarioProgramaRol { get; set; }
        public virtual DbSet<VUsuariosActiveDirectory> VUsuariosActiveDirectory { get; set; }
        public virtual DbSet<VVendedoresMarketing> VVendedoresMarketing { get; set; }
        public virtual DbSet<ValoradoInv> ValoradoInv { get; set; }
        public virtual DbSet<Vestados> Vestados { get; set; }
        public virtual DbSet<ViewComisionesTempNpc> ViewComisionesTempNpc { get; set; }
        public virtual DbSet<ViewPchistorico> ViewPchistorico { get; set; }
        public virtual DbSet<Vmunicipios> Vmunicipios { get; set; }
        public virtual DbSet<VzlaAccounts> VzlaAccounts { get; set; }
        public virtual DbSet<Waiy001> Waiy001 { get; set; }
        public virtual DbSet<Waiy002> Waiy002 { get; set; }
        public virtual DbSet<Waiy003> Waiy003 { get; set; }
        public virtual DbSet<Waiy004> Waiy004 { get; set; }
        public virtual DbSet<Waiy005> Waiy005 { get; set; }
        public virtual DbSet<Waiy006> Waiy006 { get; set; }
        public virtual DbSet<Waiy007> Waiy007 { get; set; }
        public virtual DbSet<Waiy008> Waiy008 { get; set; }
        public virtual DbSet<Waiy009> Waiy009 { get; set; }
        public virtual DbSet<Waiy010> Waiy010 { get; set; }
        public virtual DbSet<Waiy011> Waiy011 { get; set; }
        public virtual DbSet<Waiy012> Waiy012 { get; set; }
        public virtual DbSet<Waiy013> Waiy013 { get; set; }
        public virtual DbSet<Waiy014> Waiy014 { get; set; }
        public virtual DbSet<Waiy015> Waiy015 { get; set; }
        public virtual DbSet<Waiy016> Waiy016 { get; set; }
        public virtual DbSet<Waiy017> Waiy017 { get; set; }
        public virtual DbSet<Waiy018> Waiy018 { get; set; }
        public virtual DbSet<Waiy019> Waiy019 { get; set; }
        public virtual DbSet<Wapy200> Wapy200 { get; set; }
        public virtual DbSet<Wapy201> Wapy201 { get; set; }
        public virtual DbSet<Wary246Eliminados> Wary246Eliminados { get; set; }
        public virtual DbSet<Wary249> Wary249 { get; set; }
        public virtual DbSet<Wary250> Wary250 { get; set; }
        public virtual DbSet<Wary251> Wary251 { get; set; }
        public virtual DbSet<Wary252> Wary252 { get; set; }
        public virtual DbSet<Wary253> Wary253 { get; set; }
        public virtual DbSet<Wary254> Wary254 { get; set; }
        public virtual DbSet<Wary255> Wary255 { get; set; }
        public virtual DbSet<Wimy030> Wimy030 { get; set; }
        public virtual DbSet<Winy244> Winy244 { get; set; }
        public virtual DbSet<Winy245> Winy245 { get; set; }
        public virtual DbSet<Winy246> Winy246 { get; set; }
        public virtual DbSet<Winy247> Winy247 { get; set; }
        public virtual DbSet<Winy248> Winy248 { get; set; }
        public virtual DbSet<Winy249> Winy249 { get; set; }
        public virtual DbSet<Winy250> Winy250 { get; set; }
        public virtual DbSet<Winy251> Winy251 { get; set; }
        public virtual DbSet<Winy252> Winy252 { get; set; }
        public virtual DbSet<Winy253> Winy253 { get; set; }
        public virtual DbSet<Winy254> Winy254 { get; set; }
        public virtual DbSet<Winy255> Winy255 { get; set; }
        public virtual DbSet<Winy256> Winy256 { get; set; }
        public virtual DbSet<Winy257> Winy257 { get; set; }
        public virtual DbSet<Winy260> Winy260 { get; set; }
        public virtual DbSet<Winy261> Winy261 { get; set; }
        public virtual DbSet<Wity017> Wity017 { get; set; }
        public virtual DbSet<Wity018> Wity018 { get; set; }
        public virtual DbSet<Wity019> Wity019 { get; set; }
        public virtual DbSet<Wity020> Wity020 { get; set; }
        public virtual DbSet<Wity021> Wity021 { get; set; }
        public virtual DbSet<Wity021activos> Wity021activos { get; set; }
        public virtual DbSet<Wity022> Wity022 { get; set; }
        public virtual DbSet<Wity023> Wity023 { get; set; }
        public virtual DbSet<Wity024> Wity024 { get; set; }
        public virtual DbSet<Wity02425ene2018> Wity02425ene2018 { get; set; }
        public virtual DbSet<Wity025> Wity025 { get; set; }
        public virtual DbSet<Wity026> Wity026 { get; set; }
        public virtual DbSet<Wity027> Wity027 { get; set; }
        public virtual DbSet<Wity028> Wity028 { get; set; }
        public virtual DbSet<Wity029> Wity029 { get; set; }
        public virtual DbSet<Wity030> Wity030 { get; set; }
        public virtual DbSet<Wity031> Wity031 { get; set; }
        public virtual DbSet<Wity032> Wity032 { get; set; }
        public virtual DbSet<Wivy191> Wivy191 { get; set; }
        public virtual DbSet<Wivy192> Wivy192 { get; set; }
        public virtual DbSet<Wivy193> Wivy193 { get; set; }
        public virtual DbSet<Wivy194> Wivy194 { get; set; }
        public virtual DbSet<Wivy195> Wivy195 { get; set; }
        public virtual DbSet<Wivy196> Wivy196 { get; set; }
        public virtual DbSet<Wpey222> Wpey222 { get; set; }
        public virtual DbSet<Wpey223> Wpey223 { get; set; }
        public virtual DbSet<Wpry216> Wpry216 { get; set; }
        public virtual DbSet<Wpry217> Wpry217 { get; set; }
        public virtual DbSet<Wpry218> Wpry218 { get; set; }
        public virtual DbSet<Wpry219> Wpry219 { get; set; }
        public virtual DbSet<Wpry220> Wpry220 { get; set; }
        public virtual DbSet<Wpry221> Wpry221 { get; set; }
        public virtual DbSet<Wpry222> Wpry222 { get; set; }
        public virtual DbSet<Wpry223> Wpry223 { get; set; }
        public virtual DbSet<Wpry224> Wpry224 { get; set; }
        public virtual DbSet<Wpry225> Wpry225 { get; set; }
        public virtual DbSet<Wpry226> Wpry226 { get; set; }
        public virtual DbSet<Wpry227> Wpry227 { get; set; }
        public virtual DbSet<Wpry228> Wpry228 { get; set; }
        public virtual DbSet<Wpry229> Wpry229 { get; set; }
        public virtual DbSet<Wpry229log> Wpry229log { get; set; }
        public virtual DbSet<Wpry230> Wpry230 { get; set; }
        public virtual DbSet<Wpry231> Wpry231 { get; set; }
        public virtual DbSet<Wpry232> Wpry232 { get; set; }
        public virtual DbSet<Wpry232log> Wpry232log { get; set; }
        public virtual DbSet<Wpry233> Wpry233 { get; set; }
        public virtual DbSet<Wpry234> Wpry234 { get; set; }
        public virtual DbSet<Wpry235> Wpry235 { get; set; }
        public virtual DbSet<Wpry236> Wpry236 { get; set; }
        public virtual DbSet<Wpry237> Wpry237 { get; set; }
        public virtual DbSet<Wpry238> Wpry238 { get; set; }
        public virtual DbSet<Wpry239> Wpry239 { get; set; }
        public virtual DbSet<Wpry240> Wpry240 { get; set; }
        public virtual DbSet<Wpry240log> Wpry240log { get; set; }
        public virtual DbSet<Wpry240logCantidad> Wpry240logCantidad { get; set; }
        public virtual DbSet<Wpry241> Wpry241 { get; set; }
        public virtual DbSet<Wpry241log> Wpry241log { get; set; }
        public virtual DbSet<Wpry242> Wpry242 { get; set; }
        public virtual DbSet<Wpry243> Wpry243 { get; set; }
        public virtual DbSet<Wpry244> Wpry244 { get; set; }
        public virtual DbSet<Wpry245> Wpry245 { get; set; }
        public virtual DbSet<Wpry246> Wpry246 { get; set; }
        public virtual DbSet<Wpry247> Wpry247 { get; set; }
        public virtual DbSet<Wpry248> Wpry248 { get; set; }
        public virtual DbSet<Wpry249> Wpry249 { get; set; }
        public virtual DbSet<Wpry250> Wpry250 { get; set; }
        public virtual DbSet<Wpry251> Wpry251 { get; set; }
        public virtual DbSet<Wpry251log> Wpry251log { get; set; }
        public virtual DbSet<Wpry252> Wpry252 { get; set; }
        public virtual DbSet<Wpry253> Wpry253 { get; set; }
        public virtual DbSet<Wpry254> Wpry254 { get; set; }
        public virtual DbSet<Wpry255> Wpry255 { get; set; }
        public virtual DbSet<Wpry256> Wpry256 { get; set; }
        public virtual DbSet<Wpry257> Wpry257 { get; set; }
        public virtual DbSet<Wsmy106> Wsmy106 { get; set; }
        public virtual DbSet<Wsmy107> Wsmy107 { get; set; }
        public virtual DbSet<Wsmy108> Wsmy108 { get; set; }
        public virtual DbSet<Wsmy109> Wsmy109 { get; set; }
        public virtual DbSet<Wsmy110> Wsmy110 { get; set; }
        public virtual DbSet<Wsmy124> Wsmy124 { get; set; }
        public virtual DbSet<Wsmy125> Wsmy125 { get; set; }
        public virtual DbSet<Wsmy168> Wsmy168 { get; set; }
        public virtual DbSet<Wsmy169> Wsmy169 { get; set; }
        public virtual DbSet<Wsmy170> Wsmy170 { get; set; }
        public virtual DbSet<Wsmy171> Wsmy171 { get; set; }
        public virtual DbSet<Wsmy172> Wsmy172 { get; set; }
        public virtual DbSet<Wsmy173> Wsmy173 { get; set; }
        public virtual DbSet<Wsmy174> Wsmy174 { get; set; }
        public virtual DbSet<Wsmy175> Wsmy175 { get; set; }
        public virtual DbSet<Wsmy260> Wsmy260 { get; set; }
        public virtual DbSet<Wsmy261> Wsmy261 { get; set; }
        public virtual DbSet<Wsmy262> Wsmy262 { get; set; }
        public virtual DbSet<Wsmy263> Wsmy263 { get; set; }
        public virtual DbSet<Wsmy281> Wsmy281 { get; set; }
        public virtual DbSet<Wsmy283> Wsmy283 { get; set; }
        public virtual DbSet<Wsmy284> Wsmy284 { get; set; }
        public virtual DbSet<Wsmy285> Wsmy285 { get; set; }
        public virtual DbSet<Wsmy286> Wsmy286 { get; set; }
        public virtual DbSet<Wsmy287> Wsmy287 { get; set; }
        public virtual DbSet<Wsmy288> Wsmy288 { get; set; }
        public virtual DbSet<Wsmy289> Wsmy289 { get; set; }
        public virtual DbSet<Wsmy290> Wsmy290 { get; set; }
        public virtual DbSet<Wsmy291> Wsmy291 { get; set; }
        public virtual DbSet<Wsmy292> Wsmy292 { get; set; }
        public virtual DbSet<Wsmy293> Wsmy293 { get; set; }
        public virtual DbSet<Wsmy294> Wsmy294 { get; set; }
        public virtual DbSet<Wsmy295> Wsmy295 { get; set; }
        public virtual DbSet<Wsmy296> Wsmy296 { get; set; }
        public virtual DbSet<Wsmy297> Wsmy297 { get; set; }
        public virtual DbSet<Wsmy320> Wsmy320 { get; set; }
        public virtual DbSet<Wsmy321> Wsmy321 { get; set; }
        public virtual DbSet<Wsmy322> Wsmy322 { get; set; }
        public virtual DbSet<Wsmy323> Wsmy323 { get; set; }
        public virtual DbSet<Wsmy324> Wsmy324 { get; set; }
        public virtual DbSet<Wsmy325> Wsmy325 { get; set; }
        public virtual DbSet<Wsmy326> Wsmy326 { get; set; }
        public virtual DbSet<Wsmy327> Wsmy327 { get; set; }
        public virtual DbSet<Wsmy328> Wsmy328 { get; set; }
        public virtual DbSet<Wsmy329> Wsmy329 { get; set; }
        public virtual DbSet<Wsmy330> Wsmy330 { get; set; }
        public virtual DbSet<Wsmy332> Wsmy332 { get; set; }
        public virtual DbSet<Wsmy333> Wsmy333 { get; set; }
        public virtual DbSet<Wsmy334> Wsmy334 { get; set; }
        public virtual DbSet<Wsmy335> Wsmy335 { get; set; }
        public virtual DbSet<Wsmy336> Wsmy336 { get; set; }
        public virtual DbSet<Wsmy337> Wsmy337 { get; set; }
        public virtual DbSet<Wsmy338> Wsmy338 { get; set; }
        public virtual DbSet<Wsmy339> Wsmy339 { get; set; }
        public virtual DbSet<Wsmy340> Wsmy340 { get; set; }
        public virtual DbSet<Wsmy341> Wsmy341 { get; set; }
        public virtual DbSet<Wsmy342> Wsmy342 { get; set; }
        public virtual DbSet<Wsmy343> Wsmy343 { get; set; }
        public virtual DbSet<Wsmy344> Wsmy344 { get; set; }
        public virtual DbSet<Wsmy345> Wsmy345 { get; set; }
        public virtual DbSet<Wsmy346> Wsmy346 { get; set; }
        public virtual DbSet<Wsmy347> Wsmy347 { get; set; }
        public virtual DbSet<Wsmy348> Wsmy348 { get; set; }
        public virtual DbSet<Wsmy349> Wsmy349 { get; set; }
        public virtual DbSet<Wsmy350> Wsmy350 { get; set; }
        public virtual DbSet<Wsmy351> Wsmy351 { get; set; }
        public virtual DbSet<Wsmy352> Wsmy352 { get; set; }
        public virtual DbSet<Wsmy353> Wsmy353 { get; set; }
        public virtual DbSet<Wsmy354> Wsmy354 { get; set; }
        public virtual DbSet<Wsmy355> Wsmy355 { get; set; }
        public virtual DbSet<Wsmy356> Wsmy356 { get; set; }
        public virtual DbSet<Wsmy357> Wsmy357 { get; set; }
        public virtual DbSet<Wsmy358> Wsmy358 { get; set; }
        public virtual DbSet<Wsmy359> Wsmy359 { get; set; }
        public virtual DbSet<Wsmy360> Wsmy360 { get; set; }
        public virtual DbSet<Wsmy361> Wsmy361 { get; set; }
        public virtual DbSet<Wsmy364> Wsmy364 { get; set; }
        public virtual DbSet<Wsmy365> Wsmy365 { get; set; }
        public virtual DbSet<Wsmy366> Wsmy366 { get; set; }
        public virtual DbSet<Wsmy368> Wsmy368 { get; set; }
        public virtual DbSet<Wsmy369> Wsmy369 { get; set; }
        public virtual DbSet<Wsmy370> Wsmy370 { get; set; }
        public virtual DbSet<Wsmy371> Wsmy371 { get; set; }
        public virtual DbSet<Wsmy372> Wsmy372 { get; set; }
        public virtual DbSet<Wsmy373> Wsmy373 { get; set; }
        public virtual DbSet<Wsmy374> Wsmy374 { get; set; }
        public virtual DbSet<Wsmy374Temp> Wsmy374Temp { get; set; }
        public virtual DbSet<Wsmy375> Wsmy375 { get; set; }
        public virtual DbSet<Wsmy376> Wsmy376 { get; set; }
        public virtual DbSet<Wsmy377> Wsmy377 { get; set; }
        public virtual DbSet<Wsmy378> Wsmy378 { get; set; }
        public virtual DbSet<Wsmy379> Wsmy379 { get; set; }
        public virtual DbSet<Wsmy380> Wsmy380 { get; set; }
        public virtual DbSet<Wsmy381> Wsmy381 { get; set; }
        public virtual DbSet<Wsmy382> Wsmy382 { get; set; }
        public virtual DbSet<Wsmy383> Wsmy383 { get; set; }
        public virtual DbSet<Wsmy384> Wsmy384 { get; set; }
        public virtual DbSet<Wsmy386> Wsmy386 { get; set; }
        public virtual DbSet<Wsmy387> Wsmy387 { get; set; }
        public virtual DbSet<Wsmy388> Wsmy388 { get; set; }
        public virtual DbSet<Wsmy389> Wsmy389 { get; set; }
        public virtual DbSet<Wsmy390> Wsmy390 { get; set; }
        public virtual DbSet<Wsmy391> Wsmy391 { get; set; }
        public virtual DbSet<Wsmy392> Wsmy392 { get; set; }
        public virtual DbSet<Wsmy393> Wsmy393 { get; set; }
        public virtual DbSet<Wsmy395> Wsmy395 { get; set; }
        public virtual DbSet<Wsmy396> Wsmy396 { get; set; }
        public virtual DbSet<Wsmy397> Wsmy397 { get; set; }
        public virtual DbSet<Wsmy398> Wsmy398 { get; set; }
        public virtual DbSet<Wsmy399> Wsmy399 { get; set; }
        public virtual DbSet<Wsmy400> Wsmy400 { get; set; }
        public virtual DbSet<Wsmy401> Wsmy401 { get; set; }
        public virtual DbSet<Wsmy402> Wsmy402 { get; set; }
        public virtual DbSet<Wsmy403> Wsmy403 { get; set; }
        public virtual DbSet<Wsmy404> Wsmy404 { get; set; }
        public virtual DbSet<Wsmy405> Wsmy405 { get; set; }
        public virtual DbSet<Wsmy406> Wsmy406 { get; set; }
        public virtual DbSet<Wsmy407> Wsmy407 { get; set; }
        public virtual DbSet<Wsmy408> Wsmy408 { get; set; }
        public virtual DbSet<Wsmy409> Wsmy409 { get; set; }
        public virtual DbSet<Wsmy410> Wsmy410 { get; set; }
        public virtual DbSet<Wsmy411> Wsmy411 { get; set; }
        public virtual DbSet<Wsmy412> Wsmy412 { get; set; }
        public virtual DbSet<Wsmy413> Wsmy413 { get; set; }
        public virtual DbSet<Wsmy414> Wsmy414 { get; set; }
        public virtual DbSet<Wsmy415> Wsmy415 { get; set; }
        public virtual DbSet<Wsmy416> Wsmy416 { get; set; }
        public virtual DbSet<Wsmy417> Wsmy417 { get; set; }
        public virtual DbSet<Wsmy418> Wsmy418 { get; set; }
        public virtual DbSet<Wsmy419> Wsmy419 { get; set; }
        public virtual DbSet<Wsmy420> Wsmy420 { get; set; }
        public virtual DbSet<Wsmy421> Wsmy421 { get; set; }
        public virtual DbSet<Wsmy422> Wsmy422 { get; set; }
        public virtual DbSet<Wsmy423> Wsmy423 { get; set; }
        public virtual DbSet<Wsmy424> Wsmy424 { get; set; }
        public virtual DbSet<Wsmy425> Wsmy425 { get; set; }
        public virtual DbSet<Wsmy426> Wsmy426 { get; set; }
        public virtual DbSet<Wsmy428> Wsmy428 { get; set; }
        public virtual DbSet<Wsmy429> Wsmy429 { get; set; }
        public virtual DbSet<Wsmy430> Wsmy430 { get; set; }
        public virtual DbSet<Wsmy431> Wsmy431 { get; set; }
        public virtual DbSet<Wsmy432> Wsmy432 { get; set; }
        public virtual DbSet<Wsmy433> Wsmy433 { get; set; }
        public virtual DbSet<Wsmy434> Wsmy434 { get; set; }
        public virtual DbSet<Wsmy435> Wsmy435 { get; set; }
        public virtual DbSet<Wsmy436> Wsmy436 { get; set; }
        public virtual DbSet<Wsmy437> Wsmy437 { get; set; }
        public virtual DbSet<Wsmy43702222017> Wsmy43702222017 { get; set; }
        public virtual DbSet<Wsmy438> Wsmy438 { get; set; }
        public virtual DbSet<Wsmy43802222017> Wsmy43802222017 { get; set; }
        public virtual DbSet<Wsmy439> Wsmy439 { get; set; }
        public virtual DbSet<Wsmy440> Wsmy440 { get; set; }
        public virtual DbSet<Wsmy441> Wsmy441 { get; set; }
        public virtual DbSet<Wsmy442> Wsmy442 { get; set; }
        public virtual DbSet<Wsmy443> Wsmy443 { get; set; }
        public virtual DbSet<Wsmy444> Wsmy444 { get; set; }
        public virtual DbSet<Wsmy445> Wsmy445 { get; set; }
        public virtual DbSet<Wsmy446> Wsmy446 { get; set; }
        public virtual DbSet<Wsmy447> Wsmy447 { get; set; }
        public virtual DbSet<Wsmy448> Wsmy448 { get; set; }
        public virtual DbSet<Wsmy449> Wsmy449 { get; set; }
        public virtual DbSet<Wsmy450> Wsmy450 { get; set; }
        public virtual DbSet<Wsmy451> Wsmy451 { get; set; }
        public virtual DbSet<Wsmy452> Wsmy452 { get; set; }
        public virtual DbSet<Wsmy453> Wsmy453 { get; set; }
        public virtual DbSet<Wsmy454> Wsmy454 { get; set; }
        public virtual DbSet<Wsmy455> Wsmy455 { get; set; }
        public virtual DbSet<Wsmy456> Wsmy456 { get; set; }
        public virtual DbSet<Wsmy457> Wsmy457 { get; set; }
        public virtual DbSet<Wsmy458> Wsmy458 { get; set; }
        public virtual DbSet<Wsmy459> Wsmy459 { get; set; }
        public virtual DbSet<Wsmy460> Wsmy460 { get; set; }
        public virtual DbSet<Wsmy461> Wsmy461 { get; set; }
        public virtual DbSet<Wsmy462> Wsmy462 { get; set; }
        public virtual DbSet<Wsmy463> Wsmy463 { get; set; }
        public virtual DbSet<Wsmy464> Wsmy464 { get; set; }
        public virtual DbSet<Wsmy465> Wsmy465 { get; set; }
        public virtual DbSet<Wsmy466> Wsmy466 { get; set; }
        public virtual DbSet<Wsmy467> Wsmy467 { get; set; }
        public virtual DbSet<Wsmy468> Wsmy468 { get; set; }
        public virtual DbSet<Wsmy469> Wsmy469 { get; set; }
        public virtual DbSet<Wsmy469bk> Wsmy469bk { get; set; }
        public virtual DbSet<Wsmy470> Wsmy470 { get; set; }
        public virtual DbSet<Wsmy471> Wsmy471 { get; set; }
        public virtual DbSet<Wsmy471temp> Wsmy471temp { get; set; }
        public virtual DbSet<Wsmy472> Wsmy472 { get; set; }
        public virtual DbSet<Wsmy473> Wsmy473 { get; set; }
        public virtual DbSet<Wsmy474> Wsmy474 { get; set; }
        public virtual DbSet<Wsmy475> Wsmy475 { get; set; }
        public virtual DbSet<Wsmy476> Wsmy476 { get; set; }
        public virtual DbSet<Wsmy477> Wsmy477 { get; set; }
        public virtual DbSet<Wsmy482> Wsmy482 { get; set; }
        public virtual DbSet<Wsmy483> Wsmy483 { get; set; }
        public virtual DbSet<Wsmy484> Wsmy484 { get; set; }
        public virtual DbSet<Wsmy485> Wsmy485 { get; set; }
        public virtual DbSet<Wsmy486> Wsmy486 { get; set; }
        public virtual DbSet<Wsmy489> Wsmy489 { get; set; }
        public virtual DbSet<Wsmy490> Wsmy490 { get; set; }
        public virtual DbSet<Wsmy491> Wsmy491 { get; set; }
        public virtual DbSet<Wsmy492> Wsmy492 { get; set; }
        public virtual DbSet<Wsmy494> Wsmy494 { get; set; }
        public virtual DbSet<Wsmy495> Wsmy495 { get; set; }
        public virtual DbSet<Wsmy496> Wsmy496 { get; set; }
        public virtual DbSet<Wsmy497> Wsmy497 { get; set; }
        public virtual DbSet<Wsmy498> Wsmy498 { get; set; }
        public virtual DbSet<Wsmy499> Wsmy499 { get; set; }
        public virtual DbSet<Wsmy500> Wsmy500 { get; set; }
        public virtual DbSet<Wsmy501> Wsmy501 { get; set; }
        public virtual DbSet<Wsmy501log> Wsmy501log { get; set; }
        public virtual DbSet<Wsmy502> Wsmy502 { get; set; }
        public virtual DbSet<Wsmy502log> Wsmy502log { get; set; }
        public virtual DbSet<Wsmy503> Wsmy503 { get; set; }
        public virtual DbSet<Wsmy504> Wsmy504 { get; set; }
        public virtual DbSet<Wsmy505> Wsmy505 { get; set; }
        public virtual DbSet<Wsmy506> Wsmy506 { get; set; }
        public virtual DbSet<Wsmy507> Wsmy507 { get; set; }
        public virtual DbSet<Wsmy508> Wsmy508 { get; set; }
        public virtual DbSet<Wsmy509> Wsmy509 { get; set; }
        public virtual DbSet<Wsmy510> Wsmy510 { get; set; }
        public virtual DbSet<Wsmy511> Wsmy511 { get; set; }
        public virtual DbSet<Wsmy512> Wsmy512 { get; set; }
        public virtual DbSet<Wsmy515> Wsmy515 { get; set; }
        public virtual DbSet<Wsmy515log> Wsmy515log { get; set; }
        public virtual DbSet<Wsmy516> Wsmy516 { get; set; }
        public virtual DbSet<Wsmy517> Wsmy517 { get; set; }
        public virtual DbSet<Wsmy518> Wsmy518 { get; set; }
        public virtual DbSet<Wsmy519> Wsmy519 { get; set; }
        public virtual DbSet<Wsmy520> Wsmy520 { get; set; }
        public virtual DbSet<Wsmy521> Wsmy521 { get; set; }
        public virtual DbSet<Wsmy522> Wsmy522 { get; set; }
        public virtual DbSet<Wsmy523> Wsmy523 { get; set; }
        public virtual DbSet<Wsmy524> Wsmy524 { get; set; }
        public virtual DbSet<Wsmy525> Wsmy525 { get; set; }
        public virtual DbSet<Wsmy526> Wsmy526 { get; set; }
        public virtual DbSet<Wsmy527> Wsmy527 { get; set; }
        public virtual DbSet<Wsmy528> Wsmy528 { get; set; }
        public virtual DbSet<Wsmy529> Wsmy529 { get; set; }
        public virtual DbSet<Wsmy530> Wsmy530 { get; set; }
        public virtual DbSet<Wsmy531> Wsmy531 { get; set; }
        public virtual DbSet<Wsmy532> Wsmy532 { get; set; }
        public virtual DbSet<Wsmy533> Wsmy533 { get; set; }
        public virtual DbSet<Wsmy534> Wsmy534 { get; set; }
        public virtual DbSet<Wsmy535> Wsmy535 { get; set; }
        public virtual DbSet<Wsmy536> Wsmy536 { get; set; }
        public virtual DbSet<Wsmy537> Wsmy537 { get; set; }
        public virtual DbSet<Wsmy538> Wsmy538 { get; set; }
        public virtual DbSet<Wsmy539> Wsmy539 { get; set; }
        public virtual DbSet<Wsmy540> Wsmy540 { get; set; }
        public virtual DbSet<Wsmy541> Wsmy541 { get; set; }
        public virtual DbSet<Wsmy542> Wsmy542 { get; set; }
        public virtual DbSet<Wsmy543> Wsmy543 { get; set; }
        public virtual DbSet<Wsmy544> Wsmy544 { get; set; }
        public virtual DbSet<Wsmy545> Wsmy545 { get; set; }
        public virtual DbSet<Wsmy546> Wsmy546 { get; set; }
        public virtual DbSet<Wsmy547> Wsmy547 { get; set; }
        public virtual DbSet<Wsmy548> Wsmy548 { get; set; }
        public virtual DbSet<Wsmy549> Wsmy549 { get; set; }
        public virtual DbSet<Wsmy550> Wsmy550 { get; set; }
        public virtual DbSet<Wsmy551> Wsmy551 { get; set; }
        public virtual DbSet<Wsmy552> Wsmy552 { get; set; }
        public virtual DbSet<Wsmy553> Wsmy553 { get; set; }
        public virtual DbSet<Wsmy555> Wsmy555 { get; set; }
        public virtual DbSet<Wsmy556> Wsmy556 { get; set; }
        public virtual DbSet<Wsmy557> Wsmy557 { get; set; }
        public virtual DbSet<Wsmy558> Wsmy558 { get; set; }
        public virtual DbSet<Wsmy559> Wsmy559 { get; set; }
        public virtual DbSet<Wsmy560> Wsmy560 { get; set; }
        public virtual DbSet<Wsmy561> Wsmy561 { get; set; }
        public virtual DbSet<Wsmy570> Wsmy570 { get; set; }
        public virtual DbSet<Wsmy571> Wsmy571 { get; set; }
        public virtual DbSet<Wsmy572> Wsmy572 { get; set; }
        public virtual DbSet<Wsmy573> Wsmy573 { get; set; }
        public virtual DbSet<Wsmy574> Wsmy574 { get; set; }
        public virtual DbSet<Wsmy575> Wsmy575 { get; set; }
        public virtual DbSet<Wsmy576> Wsmy576 { get; set; }
        public virtual DbSet<Wsmy577> Wsmy577 { get; set; }
        public virtual DbSet<Wsmy578> Wsmy578 { get; set; }
        public virtual DbSet<Wsmy579> Wsmy579 { get; set; }
        public virtual DbSet<Wsmy580> Wsmy580 { get; set; }
        public virtual DbSet<Wsmy581> Wsmy581 { get; set; }
        public virtual DbSet<Wsmy582> Wsmy582 { get; set; }
        public virtual DbSet<Wsmy583> Wsmy583 { get; set; }
        public virtual DbSet<Wsmy584> Wsmy584 { get; set; }
        public virtual DbSet<Wsmy585> Wsmy585 { get; set; }
        public virtual DbSet<Wsmy586> Wsmy586 { get; set; }
        public virtual DbSet<Wsmy587> Wsmy587 { get; set; }
        public virtual DbSet<Wsmy588> Wsmy588 { get; set; }
        public virtual DbSet<Wsmy593> Wsmy593 { get; set; }
        public virtual DbSet<Wsmy594> Wsmy594 { get; set; }
        public virtual DbSet<Wsmy595> Wsmy595 { get; set; }
        public virtual DbSet<Wsmy596> Wsmy596 { get; set; }
        public virtual DbSet<Wsmy597> Wsmy597 { get; set; }
        public virtual DbSet<Wsmy598> Wsmy598 { get; set; }
        public virtual DbSet<Wsmy599> Wsmy599 { get; set; }
        public virtual DbSet<Wsmy600> Wsmy600 { get; set; }
        public virtual DbSet<Wsmy601> Wsmy601 { get; set; }
        public virtual DbSet<Wsmy602> Wsmy602 { get; set; }
        public virtual DbSet<Wsmy603> Wsmy603 { get; set; }
        public virtual DbSet<Wsmy604> Wsmy604 { get; set; }
        public virtual DbSet<Wsmy605> Wsmy605 { get; set; }
        public virtual DbSet<Wsmy605refacturacion> Wsmy605refacturacion { get; set; }
        public virtual DbSet<Wsmy606> Wsmy606 { get; set; }
        public virtual DbSet<Wsmy610> Wsmy610 { get; set; }
        public virtual DbSet<Wsmy611> Wsmy611 { get; set; }
        public virtual DbSet<Wsmy612> Wsmy612 { get; set; }
        public virtual DbSet<Wsmy613> Wsmy613 { get; set; }
        public virtual DbSet<Wsmy613log> Wsmy613log { get; set; }
        public virtual DbSet<Wsmy614> Wsmy614 { get; set; }
        public virtual DbSet<Wsmy616> Wsmy616 { get; set; }
        public virtual DbSet<Wsmy617> Wsmy617 { get; set; }
        public virtual DbSet<Wsmy618> Wsmy618 { get; set; }
        public virtual DbSet<Wsmy619> Wsmy619 { get; set; }
        public virtual DbSet<Wsmy620> Wsmy620 { get; set; }
        public virtual DbSet<Wsmy621> Wsmy621 { get; set; }
        public virtual DbSet<Wsmy622> Wsmy622 { get; set; }
        public virtual DbSet<Wsmy623> Wsmy623 { get; set; }
        public virtual DbSet<Wsmy624> Wsmy624 { get; set; }
        public virtual DbSet<Wsmy625> Wsmy625 { get; set; }
        public virtual DbSet<Wsmy626> Wsmy626 { get; set; }
        public virtual DbSet<Wsmy627> Wsmy627 { get; set; }
        public virtual DbSet<Wsmy628> Wsmy628 { get; set; }
        public virtual DbSet<Wsmy629> Wsmy629 { get; set; }
        public virtual DbSet<Wsmy630> Wsmy630 { get; set; }
        public virtual DbSet<Wsmy631> Wsmy631 { get; set; }
        public virtual DbSet<Wsmy632> Wsmy632 { get; set; }
        public virtual DbSet<Wsmy633> Wsmy633 { get; set; }
        public virtual DbSet<Wsmy634> Wsmy634 { get; set; }
        public virtual DbSet<Wsmy635> Wsmy635 { get; set; }
        public virtual DbSet<Wsmy636> Wsmy636 { get; set; }
        public virtual DbSet<Wsmy637> Wsmy637 { get; set; }
        public virtual DbSet<Wsmy638> Wsmy638 { get; set; }
        public virtual DbSet<Wsmy639> Wsmy639 { get; set; }
        public virtual DbSet<Wsmy640> Wsmy640 { get; set; }
        public virtual DbSet<Wsmy641> Wsmy641 { get; set; }
        public virtual DbSet<Wsmy642> Wsmy642 { get; set; }
        public virtual DbSet<Wsmy643> Wsmy643 { get; set; }
        public virtual DbSet<Wsmy644> Wsmy644 { get; set; }
        public virtual DbSet<Wsmy645> Wsmy645 { get; set; }
        public virtual DbSet<Wsmy646> Wsmy646 { get; set; }
        public virtual DbSet<Wsmy647> Wsmy647 { get; set; }
        public virtual DbSet<Wsmy649> Wsmy649 { get; set; }
        public virtual DbSet<Wsmy649old> Wsmy649old { get; set; }
        public virtual DbSet<Wsmy650> Wsmy650 { get; set; }
        public virtual DbSet<Wsmy651> Wsmy651 { get; set; }
        public virtual DbSet<Wsmy652> Wsmy652 { get; set; }
        public virtual DbSet<Wsmy653> Wsmy653 { get; set; }
        public virtual DbSet<Wsmy654> Wsmy654 { get; set; }
        public virtual DbSet<Wsmy655> Wsmy655 { get; set; }
        public virtual DbSet<Wsmy655log> Wsmy655log { get; set; }
        public virtual DbSet<Wsmy656> Wsmy656 { get; set; }
        public virtual DbSet<Wsmy657> Wsmy657 { get; set; }
        public virtual DbSet<Wsmy658> Wsmy658 { get; set; }
        public virtual DbSet<Wsmy659> Wsmy659 { get; set; }
        public virtual DbSet<Wsmy660> Wsmy660 { get; set; }
        public virtual DbSet<Wsmy661> Wsmy661 { get; set; }
        public virtual DbSet<Wsmy661Log> Wsmy661Log { get; set; }
        public virtual DbSet<Wsmy662> Wsmy662 { get; set; }
        public virtual DbSet<Wsmy663> Wsmy663 { get; set; }
        public virtual DbSet<Wsmy664> Wsmy664 { get; set; }
        public virtual DbSet<Wsmy666> Wsmy666 { get; set; }
        public virtual DbSet<Wsmy667> Wsmy667 { get; set; }
        public virtual DbSet<Wsmy668> Wsmy668 { get; set; }
        public virtual DbSet<Wsmy669> Wsmy669 { get; set; }
        public virtual DbSet<Wsmy670> Wsmy670 { get; set; }
        public virtual DbSet<Wsmy67002222017> Wsmy67002222017 { get; set; }
        public virtual DbSet<Wsmy670Log> Wsmy670Log { get; set; }
        public virtual DbSet<Wsmy671> Wsmy671 { get; set; }
        public virtual DbSet<Wsmy671Log> Wsmy671Log { get; set; }
        public virtual DbSet<Wsmy672> Wsmy672 { get; set; }
        public virtual DbSet<Wsmy67202222017> Wsmy67202222017 { get; set; }
        public virtual DbSet<Wsmy672Log> Wsmy672Log { get; set; }
        public virtual DbSet<Wsmy673> Wsmy673 { get; set; }
        public virtual DbSet<Wsmy674> Wsmy674 { get; set; }
        public virtual DbSet<Wsmy675> Wsmy675 { get; set; }
        public virtual DbSet<Wsmy675h> Wsmy675h { get; set; }
        public virtual DbSet<Wsmy675h08082019> Wsmy675h08082019 { get; set; }
        public virtual DbSet<Wsmy676> Wsmy676 { get; set; }
        public virtual DbSet<Wsmy677> Wsmy677 { get; set; }
        public virtual DbSet<Wsmy677Log> Wsmy677Log { get; set; }
        public virtual DbSet<Wsmy678> Wsmy678 { get; set; }
        public virtual DbSet<Wsmy67802222027> Wsmy67802222027 { get; set; }
        public virtual DbSet<Wsmy678Log> Wsmy678Log { get; set; }
        public virtual DbSet<Wsmy679> Wsmy679 { get; set; }
        public virtual DbSet<Wsmy680> Wsmy680 { get; set; }
        public virtual DbSet<Wsmy680Log> Wsmy680Log { get; set; }
        public virtual DbSet<Wsmy681> Wsmy681 { get; set; }
        public virtual DbSet<Wsmy682> Wsmy682 { get; set; }
        public virtual DbSet<Wsmy682al02072018> Wsmy682al02072018 { get; set; }
        public virtual DbSet<Wsmy683> Wsmy683 { get; set; }
        public virtual DbSet<Wsmy684> Wsmy684 { get; set; }
        public virtual DbSet<Wsmy685> Wsmy685 { get; set; }
        public virtual DbSet<Wsmy685Log> Wsmy685Log { get; set; }
        public virtual DbSet<Wsmy686> Wsmy686 { get; set; }
        public virtual DbSet<Wsmy687> Wsmy687 { get; set; }
        public virtual DbSet<Wsmy688> Wsmy688 { get; set; }
        public virtual DbSet<Wsmy689> Wsmy689 { get; set; }
        public virtual DbSet<Wsmy690> Wsmy690 { get; set; }
        public virtual DbSet<Wsmy691> Wsmy691 { get; set; }
        public virtual DbSet<Wsmy692> Wsmy692 { get; set; }
        public virtual DbSet<Wsmy69202222017> Wsmy69202222017 { get; set; }
        public virtual DbSet<Wsmy692resp> Wsmy692resp { get; set; }
        public virtual DbSet<Wsmy693> Wsmy693 { get; set; }
        public virtual DbSet<Wsmy694> Wsmy694 { get; set; }
        public virtual DbSet<Wsmy695> Wsmy695 { get; set; }
        public virtual DbSet<Wsmy696> Wsmy696 { get; set; }
        public virtual DbSet<Wsmy697> Wsmy697 { get; set; }
        public virtual DbSet<Wsmy698> Wsmy698 { get; set; }
        public virtual DbSet<Wsmy699> Wsmy699 { get; set; }
        public virtual DbSet<Wsmy700> Wsmy700 { get; set; }
        public virtual DbSet<Wsmy701> Wsmy701 { get; set; }
        public virtual DbSet<Wsmy702> Wsmy702 { get; set; }
        public virtual DbSet<Wtmy093> Wtmy093 { get; set; }
        public virtual DbSet<XlsCuotas> XlsCuotas { get; set; }
        public virtual DbSet<XmlSeniat> XmlSeniat { get; set; }

//        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//        {
//            if (!optionsBuilder.IsConfigured)
//            {
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
//                optionsBuilder.UseSqlServer("Server=172.28.107.19\\FSVEMCYN03D;Database=Mooreve;User Id=userweb;Password=userweb2003;MultipleActiveResultSets=true");
//            }
//        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Activos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("activos");

                entity.HasComment("Tabla de Activos");

                entity.Property(e => e.ActivosId)
                    .HasColumnName("ActivosID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Cantidad)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CentroCostoId)
                    .HasColumnName("CentroCostoID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ClasifactivosId)
                    .HasColumnName("ClasifactivosID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Costo)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CostoUnitario)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaComApi)
                    .HasColumnName("FechaComAPI")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCompra)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDepApi)
                    .HasColumnName("FechaDepAPI")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDepreciacion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.MetodoDepreciacion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ObrasId)
                    .HasColumnName("ObrasID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ProveedorId)
                    .HasColumnName("ProveedorID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.UbicacionId)
                    .HasColumnName("UbicacionID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ValorRescate)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.VidaUtil)
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AjustesPorPagoFueraPeriodo>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.FechaOrden).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaPago).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTasaActual).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTasaNueva).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ImpStock)
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1);

                entity.Property(e => e.Oficina).HasMaxLength(30);

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.TasaActual).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TasaNueva).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalBsActual).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalBsNuevo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalUsdActual).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotalUsdNuevo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UnitarioBsActual).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UnitarioBsNuevo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UnitarioUsdActual).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UnitarioUsdNuevo).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<AppBacklogInicial>(entity =>
            {
                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_AppBacklogInicial");

                entity.Property(e => e.BsBacklogInicial).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UsdbacklogInicial)
                    .HasColumnName("USDBacklogInicial")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<AppEmbarques>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("App_Embarques");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NombreCategoria).HasMaxLength(100);

                entity.Property(e => e.NombreSubCategoria).HasMaxLength(100);

                entity.Property(e => e.TotalVenta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<AppLlegadaOrdenesDiarias>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_AppLlegadaOrdenesDiarias");

                entity.Property(e => e.BsOrdenes).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Dia).HasColumnType("datetime");

                entity.Property(e => e.DiaChar).HasMaxLength(20);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<AppLlegadaOrdenesDiariasOficina>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BsOrdenes).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Oficina).HasMaxLength(20);
            });

            modelBuilder.Entity<AppMesChar>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.MesLetra).HasMaxLength(50);
            });

            modelBuilder.Entity<AppNotificacionEmail>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Email).HasMaxLength(400);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<AppOrdenesGrabadasProducto>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BsCustomPrint).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsCustomPrintChar).HasMaxLength(50);

                entity.Property(e => e.BsEtiquetas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsEtiquetasChar).HasMaxLength(50);

                entity.Property(e => e.BsFormas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsFormasChar).HasMaxLength(50);

                entity.Property(e => e.BsIcpp)
                    .HasColumnName("BsICPP")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsIcppchar)
                    .HasColumnName("BsICPPChar")
                    .HasMaxLength(50);

                entity.Property(e => e.BsOfficeProduct).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsOfficeProductChar).HasMaxLength(50);

                entity.Property(e => e.BsTotal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsTotalChar).HasMaxLength(50);

                entity.Property(e => e.CantIcpp).HasColumnName("CantICPP");

                entity.Property(e => e.Dia).HasColumnType("datetime");

                entity.Property(e => e.DiaChar).HasMaxLength(20);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.VentaDolar).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaDolarChar).HasMaxLength(50);
            });

            modelBuilder.Entity<AppStatusOrden>(entity =>
            {
                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_AppStatusOrden");

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.Orden).HasMaxLength(20);
            });

            modelBuilder.Entity<AppUsuarioPages>(entity =>
            {
                entity.HasIndex(e => e.Usuario)
                    .HasName("IX_AppUsuarioPage");

                entity.Property(e => e.Icon).HasMaxLength(100);

                entity.Property(e => e.Page).HasMaxLength(100);

                entity.Property(e => e.Title).HasMaxLength(100);

                entity.Property(e => e.Usuario).HasMaxLength(40);
            });

            modelBuilder.Entity<Ascii>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ascii");

                entity.Property(e => e.ClaveNomina)
                    .HasColumnName("CLAVE_NOMINA")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("FECHA_HASTA")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Ficha)
                    .HasColumnName("FICHA")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Neto)
                    .HasColumnName("NETO")
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Audit>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.FieldName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.NewValue)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.OldValue)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Pk)
                    .HasColumnName("PK")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.TableName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UserName)
                    .HasMaxLength(128)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Auxiliarcuota>(entity =>
            {
                entity.HasKey(e => new { e.CodigoOficina, e.Idcategoria, e.Idsubcategoria });

                entity.ToTable("auxiliarcuota");

                entity.Property(e => e.CodigoOficina).HasColumnName("codigo_oficina");

                entity.Property(e => e.Idcategoria).HasColumnName("idcategoria");

                entity.Property(e => e.Idsubcategoria).HasColumnName("idsubcategoria");

                entity.Property(e => e.Idproductocuota).HasColumnName("idproductocuota");

                entity.Property(e => e.Porcentaje)
                    .HasColumnName("porcentaje")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdcategoriaNavigation)
                    .WithMany(p => p.Auxiliarcuota)
                    .HasForeignKey(d => d.Idcategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_auxiliarcuota_WSMY436");

                entity.HasOne(d => d.IdproductocuotaNavigation)
                    .WithMany(p => p.Auxiliarcuota)
                    .HasForeignKey(d => d.Idproductocuota)
                    .HasConstraintName("FK_auxiliarcuota_WSMY438");

                entity.HasOne(d => d.IdsubcategoriaNavigation)
                    .WithMany(p => p.Auxiliarcuota)
                    .HasForeignKey(d => d.Idsubcategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_auxiliarcuota_WSMY437");
            });

            modelBuilder.Entity<Auxiliarcuota02222027>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("auxiliarcuota02222027");

                entity.Property(e => e.CodigoOficina).HasColumnName("codigo_oficina");

                entity.Property(e => e.Idcategoria).HasColumnName("idcategoria");

                entity.Property(e => e.Idproductocuota).HasColumnName("idproductocuota");

                entity.Property(e => e.Idsubcategoria).HasColumnName("idsubcategoria");

                entity.Property(e => e.Porcentaje)
                    .HasColumnName("porcentaje")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<BacklogDirecciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_DIRECCIONES");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CteEntregar)
                    .HasColumnName("CTE_ENTREGAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CteFacturar)
                    .HasColumnName("CTE_FACTURAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar)
                    .HasColumnName("DIREC_ENTREGAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar2)
                    .HasColumnName("DIREC_ENTREGAR2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar3)
                    .HasColumnName("DIREC_ENTREGAR3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar)
                    .HasColumnName("DIREC_FACTURAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar2)
                    .HasColumnName("DIREC_FACTURAR2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar3)
                    .HasColumnName("DIREC_FACTURAR3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccEntrega1v19)
                    .HasColumnName("DIRECC_ENTREGA1V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntrega2v19)
                    .HasColumnName("DIRECC_ENTREGA2V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntregarv19)
                    .HasColumnName("DIRECC_ENTREGARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura1v19)
                    .HasColumnName("DIRECC_FACTURA1V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura2v19)
                    .HasColumnName("DIRECC_FACTURA2V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFacturarv19)
                    .HasColumnName("DIRECC_FACTURARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Iddirentregar)
                    .HasColumnName("iddirentregar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirentregarv19)
                    .HasColumnName("iddirentregarv19")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirfacturar)
                    .HasColumnName("iddirfacturar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirfacturarv19)
                    .HasColumnName("iddirfacturarv19")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombEntregarv19)
                    .HasColumnName("NOMB_ENTREGARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombFacturarv19)
                    .HasColumnName("NOMB_FACTURARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifEntregar)
                    .HasColumnName("RIF_ENTREGAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifEntregarv19)
                    .HasColumnName("RIF_ENTREGARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturarv19)
                    .HasColumnName("RIF_FACTURARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BacklogDireccionesR>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_DIRECCIONES_R");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CteEntregar)
                    .HasColumnName("CTE_ENTREGAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CteFacturar)
                    .HasColumnName("CTE_FACTURAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar)
                    .HasColumnName("DIREC_ENTREGAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar2)
                    .HasColumnName("DIREC_ENTREGAR2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecEntregar3)
                    .HasColumnName("DIREC_ENTREGAR3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar)
                    .HasColumnName("DIREC_FACTURAR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar2)
                    .HasColumnName("DIREC_FACTURAR2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFacturar3)
                    .HasColumnName("DIREC_FACTURAR3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccEntrega1v19)
                    .HasColumnName("DIRECC_ENTREGA1V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntrega2v19)
                    .HasColumnName("DIRECC_ENTREGA2V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntregarv19)
                    .HasColumnName("DIRECC_ENTREGARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura1v19)
                    .HasColumnName("DIRECC_FACTURA1V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura2v19)
                    .HasColumnName("DIRECC_FACTURA2V19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFacturarv19)
                    .HasColumnName("DIRECC_FACTURARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Iddirentregar)
                    .HasColumnName("iddirentregar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirentregarv19)
                    .HasColumnName("iddirentregarv19")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirfacturar)
                    .HasColumnName("iddirfacturar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Iddirfacturarv19)
                    .HasColumnName("iddirfacturarv19")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombEntregarv19)
                    .HasColumnName("NOMB_ENTREGARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombFacturarv19)
                    .HasColumnName("NOMB_FACTURARV19")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifEntregar)
                    .HasColumnName("RIF_ENTREGAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifEntregarv19)
                    .HasColumnName("RIF_ENTREGARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturarv19)
                    .HasColumnName("RIF_FACTURARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BacklogNoFacturar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_NO_FACTURAR");

                entity.Property(e => e.CodProducto)
                    .IsRequired()
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnName("PORC_MC_FINAN")
                    .HasColumnType("decimal(6, 2)");
            });

            modelBuilder.Entity<BacklogPorFacturar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_POR_FACTURAR");

                entity.Property(e => e.CantEmbarque).HasColumnName("CANT_EMBARQUE");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(17, 2)");

                entity.Property(e => e.CantEntregarv19)
                    .HasColumnName("CANT_ENTREGARV19")
                    .HasColumnType("decimal(24, 4)");

                entity.Property(e => e.CantFactura)
                    .HasColumnName("CANT_FACTURA")
                    .HasColumnType("decimal(21, 2)");

                entity.Property(e => e.CantFacturar)
                    .HasColumnName("CANT_FACTURAR")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantFacturarv19).HasColumnName("CANT_FACTURARV19");

                entity.Property(e => e.CantMillFactv19).HasColumnName("CANT_MILL_FACTV19");

                entity.Property(e => e.CantProgramada).HasColumnName("CANT_PROGRAMADA");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtdEntregada)
                    .HasColumnName("CTD_ENTREGADA")
                    .HasColumnType("decimal(21, 2)");

                entity.Property(e => e.CtdFacturadav19).HasColumnName("CTD_FACTURADAV19");

                entity.Property(e => e.DescProducto)
                    .HasColumnName("DESC_PRODUCTO")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturarv19)
                    .HasColumnName("RIF_FACTURARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BacklogPorFacturar05>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_POR_FACTURAR_05");

                entity.Property(e => e.CantEmbarque).HasColumnName("CANT_EMBARQUE");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(17, 2)");

                entity.Property(e => e.CantEntregarv19)
                    .HasColumnName("CANT_ENTREGARV19")
                    .HasColumnType("decimal(24, 4)");

                entity.Property(e => e.CantFactAdelan)
                    .HasColumnName("CANT_FACT_ADELAN")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantFactura)
                    .HasColumnName("CANT_FACTURA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CantFacturar)
                    .HasColumnName("CANT_FACTURAR")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantFacturarv19).HasColumnName("CANT_FACTURARV19");

                entity.Property(e => e.CantMillFactv19).HasColumnName("CANT_MILL_FACTV19");

                entity.Property(e => e.CantProgramada).HasColumnName("CANT_PROGRAMADA");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtdEntregada)
                    .HasColumnName("CTD_ENTREGADA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CtdFacturadav19).HasColumnName("CTD_FACTURADAV19");

                entity.Property(e => e.DescProducto)
                    .HasColumnName("DESC_PRODUCTO")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaProg)
                    .HasColumnName("FECHA_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrdenCompra)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturarv19)
                    .HasColumnName("RIF_FACTURARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BacklogPorFacturar05a>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BACKLOG_POR_FACTURAR_05A");

                entity.Property(e => e.CantEmbarque).HasColumnName("CANT_EMBARQUE");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(17, 2)");

                entity.Property(e => e.CantEntregarv19)
                    .HasColumnName("CANT_ENTREGARV19")
                    .HasColumnType("decimal(24, 4)");

                entity.Property(e => e.CantFactAdelan)
                    .HasColumnName("CANT_FACT_ADELAN")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantFactura)
                    .HasColumnName("CANT_FACTURA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CantFacturar)
                    .HasColumnName("CANT_FACTURAR")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantFacturarv19).HasColumnName("CANT_FACTURARV19");

                entity.Property(e => e.CantMillFactv19).HasColumnName("CANT_MILL_FACTV19");

                entity.Property(e => e.CantProgramada).HasColumnName("CANT_PROGRAMADA");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtdEntregada)
                    .HasColumnName("CTD_ENTREGADA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CtdFacturadav19).HasColumnName("CTD_FACTURADAV19");

                entity.Property(e => e.DescProducto)
                    .HasColumnName("DESC_PRODUCTO")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaProg)
                    .HasColumnName("FECHA_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrdenCompra)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecioVenta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFacturarv19)
                    .HasColumnName("RIF_FACTURARV19")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BacklogPrelistasDespacho>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("BacklogPrelistasDespacho");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantEntregarv19)
                    .HasColumnName("CANT_ENTREGARV19")
                    .HasColumnType("decimal(24, 4)");

                entity.Property(e => e.CantFactAdelan)
                    .HasColumnName("CANT_FACT_ADELAN")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantFactura)
                    .HasColumnName("CANT_FACTURA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CantFacturar)
                    .HasColumnName("CANT_FACTURAR")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantFacturarv19)
                    .HasColumnName("CANT_FACTURARV19")
                    .HasColumnType("decimal(22, 2)");

                entity.Property(e => e.CantMillFactv19)
                    .HasColumnName("CANT_MILL_FACTV19")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantProgramada).HasColumnName("CANT_PROGRAMADA");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.CtdEntregada)
                    .HasColumnName("CTD_ENTREGADA")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.CtdFacturadav19).HasColumnName("CTD_FACTURADAV19");

                entity.Property(e => e.DescProducto)
                    .HasColumnName("DESC_PRODUCTO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.FechaProg)
                    .HasColumnName("FECHA_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.JobId)
                    .HasColumnName("JOB_ID")
                    .HasColumnType("numeric(19, 0)");

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumerCopya)
                    .HasColumnName("NUMER_COPYA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ZonaDespacho)
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CedulasErradasCne>(entity =>
            {
                entity.HasKey(e => e.CedulaErrada);

                entity.ToTable("CedulasErradasCNE");

                entity.Property(e => e.CedulaErrada).ValueGeneratedNever();
            });

            modelBuilder.Entity<CedulasErradasCne2>(entity =>
            {
                entity.HasKey(e => e.CedulaErrada)
                    .HasName("PK_CedulasErradasCNE_2");

                entity.ToTable("CedulasErradasCNE2");

                entity.Property(e => e.CedulaErrada).ValueGeneratedNever();
            });

            modelBuilder.Entity<Cev001>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.Oficina, e.Vendedor });

                entity.ToTable("CEV001");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CantidadRetencionesIva).HasColumnName("CantidadRetencionesIVA");

                entity.Property(e => e.CrecimientoVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CumplimientoCuotasVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EquipoInsert)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EquipoUpdate).HasMaxLength(50);

                entity.Property(e => e.FechaInsert).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IndiceRnc)
                    .HasColumnName("IndiceRNC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMc)
                    .HasColumnName("PorcentajeMC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosCantidadRetencionesIvaislr)
                    .HasColumnName("PuntosCantidadRetencionesIVAISLR")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosClientesNuevos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosDiasCalle).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosIndiceRnc)
                    .HasColumnName("PuntosIndiceRNC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosMesesCobertura).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosNumeroOrdenesImpresas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosPorcentajeMc)
                    .HasColumnName("PuntosPorcentajeMC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenAdicional).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenCpo)
                    .HasColumnName("PuntosVolumenCPO")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenCutSheets).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenEtiquetas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenIc)
                    .HasColumnName("PuntosVolumenIC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenImpresos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenOfficeProduct).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TotalPuntos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioInsert)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioUpdate).HasMaxLength(40);

                entity.Property(e => e.VolumenCpo)
                    .HasColumnName("VolumenCPO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenCutSheets).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenEtiquetas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenIc)
                    .HasColumnName("VolumenIC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenImpresos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenOfficeProduct).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Cev002>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.MesAcumulado, e.Oficina, e.Vendedor });

                entity.ToTable("CEV002");

                entity.HasComment("Cantidad de Ordenes Impresas");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CantidadRetencionesIva).HasColumnName("CantidadRetencionesIVA");

                entity.Property(e => e.CrecimientoVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CumplimientoCuotasVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EquipoInsert)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EquipoUpdate).HasMaxLength(50);

                entity.Property(e => e.FechaInsert).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IndiceRnc)
                    .HasColumnName("IndiceRNC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMc)
                    .HasColumnName("PorcentajeMC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosCantidadRetencionesIvaislr)
                    .HasColumnName("PuntosCantidadRetencionesIVAISLR")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosClientesNuevos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosDiasCalle).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosIndiceRnc)
                    .HasColumnName("PuntosIndiceRNC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosMesesCobertura).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosNumeroOrdenesImpresas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosPorcentajeMc)
                    .HasColumnName("PuntosPorcentajeMC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenAdicional).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenCpo)
                    .HasColumnName("PuntosVolumenCPO")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenCutSheets).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenEtiquetas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenIc)
                    .HasColumnName("PuntosVolumenIC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenImpresos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PuntosVolumenOfficeProduct).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TotalPuntos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioInsert)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioUpdate).HasMaxLength(40);

                entity.Property(e => e.VolumenCpo)
                    .HasColumnName("VolumenCPO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenCutSheets).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenEtiquetas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenIc)
                    .HasColumnName("VolumenIC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenImpresos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenOfficeProduct).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Cev003>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CEV003");

                entity.Property(e => e.CantidadRetencionesIvaislr)
                    .HasColumnName("CantidadRetencionesIVAISLR")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.ClientesNuevos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.DiasCalle).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.EquipoRegistro)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IndiceRnc)
                    .HasColumnName("IndiceRNC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.MesesCobertura).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.NumeroOrdenesImpresas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMc)
                    .HasColumnName("PorcentajeMC")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.VolumenAdicional).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenCpo)
                    .HasColumnName("VolumenCPO")
                    .HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenCutSheets).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenEtiquetas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenImpresionComercial).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenImpresos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.VolumenOfficeProduct).HasColumnType("decimal(7, 2)");
            });

            modelBuilder.Entity<Civy004>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CIVY004");

                entity.Property(e => e.CantidadXCaja).HasColumnName("CANTIDAD_X_CAJA");

                entity.Property(e => e.Comprometido).HasColumnName("COMPROMETIDO");

                entity.Property(e => e.CosPromActual)
                    .HasColumnName("COS_PROM_ACTUAL")
                    .HasColumnType("decimal(12, 4)");

                entity.Property(e => e.CostPromDolar)
                    .HasColumnName("COST_PROM_DOLAR")
                    .HasColumnType("decimal(12, 4)");

                entity.Property(e => e.CostoPromFin)
                    .HasColumnName("COSTO_PROM_FIN")
                    .HasColumnType("decimal(12, 4)");

                entity.Property(e => e.CostoPromIni)
                    .HasColumnName("COSTO_PROM_INI")
                    .HasColumnType("decimal(12, 4)");

                entity.Property(e => e.CostoPromReva)
                    .HasColumnName("COSTO_PROM_REVA")
                    .HasColumnType("decimal(12, 4)");

                entity.Property(e => e.CtdMaximaVta).HasColumnName("CTD_MAXIMA_VTA");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Eliminado)
                    .IsRequired()
                    .HasColumnName("ELIMINADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ExiInicioMes).HasColumnName("EXI_INICIO_MES");

                entity.Property(e => e.ExisDiaAnter).HasColumnName("EXIS_DIA_ANTER");

                entity.Property(e => e.ExisFinMes).HasColumnName("EXIS_FIN_MES");

                entity.Property(e => e.ExistActual).HasColumnName("EXIST_ACTUAL");

                entity.Property(e => e.ExistMaxima).HasColumnName("EXIST_MAXIMA");

                entity.Property(e => e.ExistMinima).HasColumnName("EXIST_MINIMA");

                entity.Property(e => e.FamiliaProduct)
                    .IsRequired()
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltCompr)
                    .HasColumnName("FECHA_ULT_COMPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaUltFact)
                    .HasColumnName("FECHA_ULT_FACT")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagObsoleto)
                    .IsRequired()
                    .HasColumnName("FLAG_OBSOLETO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ImpPorConsumo)
                    .IsRequired()
                    .HasColumnName("IMP_POR_CONSUMO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.KilosPorEmpaq).HasColumnName("KILOS_POR_EMPAQ");

                entity.Property(e => e.LineaProducto)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ListFinMes)
                    .HasColumnName("LIST_FIN_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ListInicioMes)
                    .HasColumnName("LIST_INICIO_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Medida)
                    .IsRequired()
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MetodoPrecio)
                    .IsRequired()
                    .HasColumnName("METODO_PRECIO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OrigenProducto)
                    .IsRequired()
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OtroFactor).HasColumnName("OTRO_FACTOR");

                entity.Property(e => e.Partes).HasColumnName("PARTES");

                entity.Property(e => e.PorcCosto)
                    .HasColumnName("PORC_COSTO")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcMarkup)
                    .HasColumnName("PORC_MARKUP")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PreListActual)
                    .HasColumnName("PRE_LIST_ACTUAL")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecioSugerido)
                    .IsRequired()
                    .HasColumnName("PRECIO_SUGERIDO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Proveedor).HasColumnName("PROVEEDOR");

                entity.Property(e => e.PtoReorden).HasColumnName("PTO_REORDEN");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SalidaPendien).HasColumnName("SALIDA_PENDIEN");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UnidadCosteo).HasColumnName("UNIDAD_COSTEO");

                entity.Property(e => e.Unidadesxbulto)
                    .HasColumnName("UNIDADESXBULTO")
                    .HasColumnType("decimal(14, 0)");

                entity.Property(e => e.ValExisActual)
                    .HasColumnName("VAL_EXIS_ACTUAL")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ValFinMes)
                    .HasColumnName("VAL_FIN_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ValInicioMes)
                    .HasColumnName("VAL_INICIO_MES")
                    .HasColumnType("decimal(12, 2)");
            });

            modelBuilder.Entity<Civy006>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("civy006");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ajustado)
                    .HasColumnName("ajustado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AlmacenEmisor).HasColumnName("ALMACEN_EMISOR");

                entity.Property(e => e.AlmacenReceptor).HasColumnName("ALMACEN_RECEPTOR");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoConfirma).HasColumnName("ANO_CONFIRMA");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadRecibida).HasColumnName("CANTIDAD_RECIBIDA");

                entity.Property(e => e.CantidadXCaja).HasColumnName("CANTIDAD_X_CAJA");

                entity.Property(e => e.CentroGastos).HasColumnName("CENTRO_GASTOS");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.ComprobanteOri).HasColumnName("comprobante_ori");

                entity.Property(e => e.Factura)
                    .HasColumnName("factura")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Factura56).HasColumnName("FACTURA56");

                entity.Property(e => e.Facturare).HasColumnName("FACTURARE");

                entity.Property(e => e.FamiliaProduct)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaComprb)
                    .HasColumnName("FECHA_COMPRB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnName("FECHA_REGISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.LineaProducto)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Medida)
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MesConfirma).HasColumnName("MES_CONFIRMA");

                entity.Property(e => e.NoAfectaProm)
                    .HasColumnName("NO_AFECTA_PROM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NoOrden).HasColumnName("NO_ORDEN");

                entity.Property(e => e.NoPedido).HasColumnName("NO_PEDIDO");

                entity.Property(e => e.NombreAlmacen)
                    .HasColumnName("NOMBRE_ALMACEN")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasColumnName("NOMBRE_PRODUCTO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreTransaccion)
                    .HasColumnName("NOMBRE_TRANSACCION")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumLote)
                    .HasColumnName("NUM_LOTE")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.NumeroOrdenfa).HasColumnName("NUMERO_ORDENFA");

                entity.Property(e => e.NumeroOrdenre).HasColumnName("NUMERO_ORDENRE");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("text");

                entity.Property(e => e.OrdProduccion).HasColumnName("ORD_PRODUCCION");

                entity.Property(e => e.OrdenCalculo)
                    .HasColumnName("ORDEN_CALCULO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OrdenCompra).HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.OrigenProducto)
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PreDespacho)
                    .HasColumnName("PRE_DESPACHO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.Remision).HasColumnName("REMISION");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Transmision)
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ValorCosto)
                    .HasColumnName("VALOR_COSTO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Civy008>(entity =>
            {
                entity.HasKey(e => e.Operacion)
                    .HasName("CIVY008_INDEX01");

                entity.ToTable("CIVY008");

                entity.HasIndex(e => e.Recnum)
                    .HasName("CIVY008_INDEX00")
                    .IsUnique();

                entity.Property(e => e.Operacion)
                    .HasColumnName("OPERACION")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Codigo de transaccion de inventario");

                entity.Property(e => e.AfectaConsumo)
                    .HasColumnName("AFECTA_CONSUMO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('S')");

                entity.Property(e => e.Alias)
                    .HasColumnName("ALIAS")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Descripcion representativa de la transaccion");

                entity.Property(e => e.Autorizacion)
                    .HasColumnName("AUTORIZACION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CentroCosto)
                    .HasColumnName("CENTRO_COSTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Es)
                    .HasColumnName("ES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("Tipo de Transancion Entrada o Salisda");

                entity.Property(e => e.InventarioInicial)
                    .HasColumnName("INVENTARIO_INICIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Define si es una transaccion de Inicializacion de Inventario (X)");

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("Descripcion de la transaccion de Inventario");

                entity.Property(e => e.Prueba)
                    .HasColumnName("prueba")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .HasComment("Numero de Registro")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RequiereDocumento)
                    .HasColumnName("REQUIERE_DOCUMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Signo)
                    .HasColumnName("SIGNO")
                    .HasComment("Define si la transaccion en positiva o Negativa (1 o -1)");

                entity.Property(e => e.TransaccionGenera)
                    .HasColumnName("TRANSACCION_GENERA")
                    .HasComment("Transaccion que genera");
            });

            modelBuilder.Entity<Civy010>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("civy010");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Comprometido).HasColumnName("COMPROMETIDO");

                entity.Property(e => e.CostFinMes)
                    .HasColumnName("COST_FIN_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CostIniMes)
                    .HasColumnName("COST_INI_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.EntradasMes).HasColumnName("ENTRADAS_MES");

                entity.Property(e => e.ExisFinMes).HasColumnName("EXIS_FIN_MES");

                entity.Property(e => e.ExisIniMes).HasColumnName("EXIS_INI_MES");

                entity.Property(e => e.ExistActual).HasColumnName("EXIST_ACTUAL");

                entity.Property(e => e.ExistAnterior).HasColumnName("EXIST_ANTERIOR");

                entity.Property(e => e.ExistMaxima).HasColumnName("EXIST_MAXIMA");

                entity.Property(e => e.ExistMinima).HasColumnName("EXIST_MINIMA");

                entity.Property(e => e.FamiliaProduct)
                    .IsRequired()
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaUltEntra)
                    .HasColumnName("FECHA_ULT_ENTRA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaUltSalid)
                    .HasColumnName("FECHA_ULT_SALID")
                    .HasColumnType("datetime");

                entity.Property(e => e.LineaProducto)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ListaFinMes)
                    .HasColumnName("LISTA_FIN_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.ListaIniMes)
                    .HasColumnName("LISTA_INI_MES")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.OrigenProducto)
                    .IsRequired()
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PtoReorden).HasColumnName("PTO_REORDEN");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SalidaPendien).HasColumnName("SALIDA_PENDIEN");

                entity.Property(e => e.SalidasMes).HasColumnName("SALIDAS_MES");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicacion1)
                    .IsRequired()
                    .HasColumnName("UBICACION_1")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicacion2)
                    .IsRequired()
                    .HasColumnName("UBICACION_2")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicacion3)
                    .IsRequired()
                    .HasColumnName("UBICACION_3")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicacion4)
                    .IsRequired()
                    .HasColumnName("UBICACION_4")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicacion5)
                    .IsRequired()
                    .HasColumnName("UBICACION_5")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Civy023>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CIVY023");

                entity.Property(e => e.Cant).HasColumnName("CANT");

                entity.Property(e => e.Cant1).HasColumnName("CANT1");

                entity.Property(e => e.Cant2).HasColumnName("CANT2");

                entity.Property(e => e.Cant3).HasColumnName("CANT3");

                entity.Property(e => e.Cant4).HasColumnName("CANT4");

                entity.Property(e => e.Cant5).HasColumnName("CANT5");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.FechaVigencia)
                    .HasColumnName("FECHA_VIGENCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PrecLista)
                    .HasColumnName("PREC_LISTA")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista1)
                    .HasColumnName("PREC_LISTA_$")
                    .HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PrecLista11)
                    .HasColumnName("PREC_LISTA1")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista1d)
                    .HasColumnName("PREC_LISTA1D")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista2)
                    .HasColumnName("PREC_LISTA2")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista2d)
                    .HasColumnName("PREC_LISTA2D")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista3)
                    .HasColumnName("PREC_LISTA3")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista3d)
                    .HasColumnName("PREC_LISTA3D")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista4)
                    .HasColumnName("PREC_LISTA4")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista4d)
                    .HasColumnName("PREC_LISTA4D")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista5)
                    .HasColumnName("PREC_LISTA5")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PrecLista5d)
                    .HasColumnName("PREC_LISTA5D")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<ClientesPorFacturar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Clientes_por_facturar");

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("Razon_Social")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Rif)
                    .HasColumnName("rif")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CneCentroVotacionCapacitacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CNE_CentroVotacionCapacitacion");

                entity.HasIndex(e => new { e.EdoCapa, e.CtroCapacitacion })
                    .HasName("IX_CNE_CentroVotacionCapacitacion");

                entity.Property(e => e.CtroCapacitacion).HasColumnName("Ctro_capacitacion");

                entity.Property(e => e.Direccion).HasMaxLength(255);

                entity.Property(e => e.DireccionNucleo)
                    .HasColumnName("Direccion_Nucleo")
                    .HasMaxLength(255);

                entity.Property(e => e.EdoCapa).HasColumnName("Edo_Capa");

                entity.Property(e => e.EstadoCv).HasColumnName("Estado_Cv");

                entity.Property(e => e.MunCapa).HasColumnName("Mun_Capa");

                entity.Property(e => e.MunicipioCv).HasColumnName("Municipio_Cv");

                entity.Property(e => e.NombreNucleo)
                    .HasColumnName("Nombre_Nucleo")
                    .HasMaxLength(255);

                entity.Property(e => e.Nombres).HasMaxLength(255);

                entity.Property(e => e.PaqCapa).HasColumnName("Paq_Capa");

                entity.Property(e => e.ParroquiaCv).HasColumnName("Parroquia_CV");
            });

            modelBuilder.Entity<CneCredenciales>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CNE_Credenciales");

                entity.HasIndex(e => e.RecNum)
                    .HasName("IX_CNE_Credenciales_1");

                entity.HasIndex(e => new { e.Edo, e.Mun, e.Paq, e.CentrosCapa })
                    .HasName("IX_CNE_Credenciales");

                entity.Property(e => e.ApellNomb)
                    .HasColumnName("Apell_Nomb")
                    .HasMaxLength(210);

                entity.Property(e => e.Cargo).HasColumnName("cargo");

                entity.Property(e => e.CedulaTexto).HasMaxLength(50);

                entity.Property(e => e.Centro).HasColumnName("centro");

                entity.Property(e => e.CentroNuevo).HasColumnName("centro_nuevo");

                entity.Property(e => e.CentrosCapa).HasColumnName("centros_capa");

                entity.Property(e => e.DescripSort)
                    .HasColumnName("descrip_sort")
                    .HasMaxLength(50);

                entity.Property(e => e.Edo).HasColumnName("edo");

                entity.Property(e => e.Ensamble).HasColumnName("ensamble");

                entity.Property(e => e.EstadosNombre)
                    .HasColumnName("estados_NOMBRE")
                    .HasMaxLength(80);

                entity.Property(e => e.FlagUltimoCaja).HasMaxLength(1);

                entity.Property(e => e.IdOrg).HasColumnName("id_org");

                entity.Property(e => e.IdentificadorHoja).HasMaxLength(100);

                entity.Property(e => e.MensajeCentroCapa).HasMaxLength(100);

                entity.Property(e => e.Mesa).HasColumnName("mesa");

                entity.Property(e => e.Mun).HasColumnName("mun");

                entity.Property(e => e.Nac).HasMaxLength(3);

                entity.Property(e => e.NombreMun)
                    .HasColumnName("Nombre_Mun")
                    .HasMaxLength(80);

                entity.Property(e => e.Paq).HasColumnName("paq");

                entity.Property(e => e.ParroquiasNombre)
                    .HasColumnName("parroquias_NOMBRE")
                    .HasMaxLength(25);

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();

                entity.Property(e => e.Ruta).HasColumnName("ruta");

                entity.Property(e => e.Sorteo).HasColumnName("sorteo");
            });

            modelBuilder.Entity<CneEstados>(entity =>
            {
                entity.HasKey(e => e.IdEstado);

                entity.ToTable("CNE_Estados");

                entity.Property(e => e.IdEstado).ValueGeneratedNever();

                entity.Property(e => e.Estado).HasMaxLength(255);
            });

            modelBuilder.Entity<CneMaestroCentroCapacitacion>(entity =>
            {
                entity.HasKey(e => e.IdCentroCapa);

                entity.ToTable("CNE_MaestroCentroCapacitacion");

                entity.HasIndex(e => e.IdEstadoCentroCapa)
                    .HasName("IX_CNE_MaestroCentroCapacitacion");

                entity.Property(e => e.IdCentroCapa).ValueGeneratedNever();

                entity.Property(e => e.DireccionCentroCapa).HasMaxLength(255);

                entity.Property(e => e.FlagImpreso)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCentroCapa).HasMaxLength(255);
            });

            modelBuilder.Entity<CneMunicipios>(entity =>
            {
                entity.HasKey(e => new { e.IdEstado, e.IdMunicipio });

                entity.ToTable("CNE_Municipios");

                entity.Property(e => e.Municipio).HasMaxLength(255);
            });

            modelBuilder.Entity<CneParroquias>(entity =>
            {
                entity.HasKey(e => new { e.IdEstado, e.IdMunicipio, e.IdParroquia });

                entity.ToTable("CNE_Parroquias");

                entity.Property(e => e.Parroquia).HasMaxLength(255);
            });

            modelBuilder.Entity<Codigosbarra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CODIGOSBARRA");

                entity.Property(e => e.Codigos3d9)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Complemento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("complemento");

                entity.Property(e => e.F100).HasMaxLength(255);

                entity.Property(e => e.F101).HasMaxLength(255);

                entity.Property(e => e.F102).HasMaxLength(255);

                entity.Property(e => e.F103).HasMaxLength(255);

                entity.Property(e => e.F104).HasMaxLength(255);

                entity.Property(e => e.F105).HasMaxLength(255);

                entity.Property(e => e.F106).HasMaxLength(255);

                entity.Property(e => e.F107).HasMaxLength(255);

                entity.Property(e => e.F108).HasMaxLength(255);

                entity.Property(e => e.F109).HasMaxLength(255);

                entity.Property(e => e.F110).HasMaxLength(255);

                entity.Property(e => e.F111).HasMaxLength(255);

                entity.Property(e => e.F112).HasMaxLength(255);

                entity.Property(e => e.F113).HasMaxLength(255);

                entity.Property(e => e.F114).HasMaxLength(255);

                entity.Property(e => e.F115).HasMaxLength(255);

                entity.Property(e => e.F116).HasMaxLength(255);

                entity.Property(e => e.F117).HasMaxLength(255);

                entity.Property(e => e.F118).HasMaxLength(255);

                entity.Property(e => e.F119).HasMaxLength(255);

                entity.Property(e => e.F120).HasMaxLength(255);

                entity.Property(e => e.F121).HasMaxLength(255);

                entity.Property(e => e.F122).HasMaxLength(255);

                entity.Property(e => e.F123).HasMaxLength(255);

                entity.Property(e => e.F124).HasMaxLength(255);

                entity.Property(e => e.F125).HasMaxLength(255);

                entity.Property(e => e.F126).HasMaxLength(255);

                entity.Property(e => e.F127).HasMaxLength(255);

                entity.Property(e => e.F128).HasMaxLength(255);

                entity.Property(e => e.F129).HasMaxLength(255);

                entity.Property(e => e.F130).HasMaxLength(255);

                entity.Property(e => e.F131).HasMaxLength(255);

                entity.Property(e => e.F132).HasMaxLength(255);

                entity.Property(e => e.F133).HasMaxLength(255);

                entity.Property(e => e.F134).HasMaxLength(255);

                entity.Property(e => e.F135).HasMaxLength(255);

                entity.Property(e => e.F136).HasMaxLength(255);

                entity.Property(e => e.F137).HasMaxLength(255);

                entity.Property(e => e.F138).HasMaxLength(255);

                entity.Property(e => e.F139).HasMaxLength(255);

                entity.Property(e => e.F140).HasMaxLength(255);

                entity.Property(e => e.F141).HasMaxLength(255);

                entity.Property(e => e.F142).HasMaxLength(255);

                entity.Property(e => e.F143).HasMaxLength(255);

                entity.Property(e => e.F144).HasMaxLength(255);

                entity.Property(e => e.F145).HasMaxLength(255);

                entity.Property(e => e.F146).HasMaxLength(255);

                entity.Property(e => e.F147).HasMaxLength(255);

                entity.Property(e => e.F148).HasMaxLength(255);

                entity.Property(e => e.F149).HasMaxLength(255);

                entity.Property(e => e.F15).HasMaxLength(255);

                entity.Property(e => e.F150).HasMaxLength(255);

                entity.Property(e => e.F151).HasMaxLength(255);

                entity.Property(e => e.F152).HasMaxLength(255);

                entity.Property(e => e.F153).HasMaxLength(255);

                entity.Property(e => e.F154).HasMaxLength(255);

                entity.Property(e => e.F155).HasMaxLength(255);

                entity.Property(e => e.F156).HasMaxLength(255);

                entity.Property(e => e.F157).HasMaxLength(255);

                entity.Property(e => e.F158).HasMaxLength(255);

                entity.Property(e => e.F159).HasMaxLength(255);

                entity.Property(e => e.F16).HasMaxLength(255);

                entity.Property(e => e.F160).HasMaxLength(255);

                entity.Property(e => e.F161).HasMaxLength(255);

                entity.Property(e => e.F162).HasMaxLength(255);

                entity.Property(e => e.F163).HasMaxLength(255);

                entity.Property(e => e.F164).HasMaxLength(255);

                entity.Property(e => e.F165).HasMaxLength(255);

                entity.Property(e => e.F166).HasMaxLength(255);

                entity.Property(e => e.F167).HasMaxLength(255);

                entity.Property(e => e.F168).HasMaxLength(255);

                entity.Property(e => e.F169).HasMaxLength(255);

                entity.Property(e => e.F17).HasMaxLength(255);

                entity.Property(e => e.F170).HasMaxLength(255);

                entity.Property(e => e.F171).HasMaxLength(255);

                entity.Property(e => e.F172).HasMaxLength(255);

                entity.Property(e => e.F173).HasMaxLength(255);

                entity.Property(e => e.F174).HasMaxLength(255);

                entity.Property(e => e.F175).HasMaxLength(255);

                entity.Property(e => e.F176).HasMaxLength(255);

                entity.Property(e => e.F177).HasMaxLength(255);

                entity.Property(e => e.F178).HasMaxLength(255);

                entity.Property(e => e.F179).HasMaxLength(255);

                entity.Property(e => e.F18).HasMaxLength(255);

                entity.Property(e => e.F180).HasMaxLength(255);

                entity.Property(e => e.F181).HasMaxLength(255);

                entity.Property(e => e.F182).HasMaxLength(255);

                entity.Property(e => e.F183).HasMaxLength(255);

                entity.Property(e => e.F184).HasMaxLength(255);

                entity.Property(e => e.F185).HasMaxLength(255);

                entity.Property(e => e.F186).HasMaxLength(255);

                entity.Property(e => e.F187).HasMaxLength(255);

                entity.Property(e => e.F188).HasMaxLength(255);

                entity.Property(e => e.F189).HasMaxLength(255);

                entity.Property(e => e.F19).HasMaxLength(255);

                entity.Property(e => e.F190).HasMaxLength(255);

                entity.Property(e => e.F191).HasMaxLength(255);

                entity.Property(e => e.F192).HasMaxLength(255);

                entity.Property(e => e.F193).HasMaxLength(255);

                entity.Property(e => e.F194).HasMaxLength(255);

                entity.Property(e => e.F195).HasMaxLength(255);

                entity.Property(e => e.F196).HasMaxLength(255);

                entity.Property(e => e.F197).HasMaxLength(255);

                entity.Property(e => e.F198).HasMaxLength(255);

                entity.Property(e => e.F199).HasMaxLength(255);

                entity.Property(e => e.F20).HasMaxLength(255);

                entity.Property(e => e.F200).HasMaxLength(255);

                entity.Property(e => e.F201).HasMaxLength(255);

                entity.Property(e => e.F202).HasMaxLength(255);

                entity.Property(e => e.F203).HasMaxLength(255);

                entity.Property(e => e.F204).HasMaxLength(255);

                entity.Property(e => e.F205).HasMaxLength(255);

                entity.Property(e => e.F206).HasMaxLength(255);

                entity.Property(e => e.F207).HasMaxLength(255);

                entity.Property(e => e.F208).HasMaxLength(255);

                entity.Property(e => e.F209).HasMaxLength(255);

                entity.Property(e => e.F21).HasMaxLength(255);

                entity.Property(e => e.F210).HasMaxLength(255);

                entity.Property(e => e.F211).HasMaxLength(255);

                entity.Property(e => e.F212).HasMaxLength(255);

                entity.Property(e => e.F213).HasMaxLength(255);

                entity.Property(e => e.F214).HasMaxLength(255);

                entity.Property(e => e.F215).HasMaxLength(255);

                entity.Property(e => e.F216).HasMaxLength(255);

                entity.Property(e => e.F217).HasMaxLength(255);

                entity.Property(e => e.F218).HasMaxLength(255);

                entity.Property(e => e.F219).HasMaxLength(255);

                entity.Property(e => e.F22).HasMaxLength(255);

                entity.Property(e => e.F220).HasMaxLength(255);

                entity.Property(e => e.F221).HasMaxLength(255);

                entity.Property(e => e.F222).HasMaxLength(255);

                entity.Property(e => e.F223).HasMaxLength(255);

                entity.Property(e => e.F224).HasMaxLength(255);

                entity.Property(e => e.F225).HasMaxLength(255);

                entity.Property(e => e.F226).HasMaxLength(255);

                entity.Property(e => e.F227).HasMaxLength(255);

                entity.Property(e => e.F228).HasMaxLength(255);

                entity.Property(e => e.F229).HasMaxLength(255);

                entity.Property(e => e.F23).HasMaxLength(255);

                entity.Property(e => e.F230).HasMaxLength(255);

                entity.Property(e => e.F231).HasMaxLength(255);

                entity.Property(e => e.F232).HasMaxLength(255);

                entity.Property(e => e.F233).HasMaxLength(255);

                entity.Property(e => e.F234).HasMaxLength(255);

                entity.Property(e => e.F235).HasMaxLength(255);

                entity.Property(e => e.F236).HasMaxLength(255);

                entity.Property(e => e.F237).HasMaxLength(255);

                entity.Property(e => e.F238).HasMaxLength(255);

                entity.Property(e => e.F239).HasMaxLength(255);

                entity.Property(e => e.F24).HasMaxLength(255);

                entity.Property(e => e.F240).HasMaxLength(255);

                entity.Property(e => e.F241).HasMaxLength(255);

                entity.Property(e => e.F242).HasMaxLength(255);

                entity.Property(e => e.F243).HasMaxLength(255);

                entity.Property(e => e.F244).HasMaxLength(255);

                entity.Property(e => e.F245).HasMaxLength(255);

                entity.Property(e => e.F246).HasMaxLength(255);

                entity.Property(e => e.F247).HasMaxLength(255);

                entity.Property(e => e.F248).HasMaxLength(255);

                entity.Property(e => e.F249).HasMaxLength(255);

                entity.Property(e => e.F25).HasMaxLength(255);

                entity.Property(e => e.F250).HasMaxLength(255);

                entity.Property(e => e.F251).HasMaxLength(255);

                entity.Property(e => e.F252).HasMaxLength(255);

                entity.Property(e => e.F253).HasMaxLength(255);

                entity.Property(e => e.F254).HasMaxLength(255);

                entity.Property(e => e.F255).HasMaxLength(255);

                entity.Property(e => e.F256).HasMaxLength(255);

                entity.Property(e => e.F26).HasMaxLength(255);

                entity.Property(e => e.F27).HasMaxLength(255);

                entity.Property(e => e.F28).HasMaxLength(255);

                entity.Property(e => e.F29).HasMaxLength(255);

                entity.Property(e => e.F30).HasMaxLength(255);

                entity.Property(e => e.F31).HasMaxLength(255);

                entity.Property(e => e.F32).HasMaxLength(255);

                entity.Property(e => e.F33).HasMaxLength(255);

                entity.Property(e => e.F34).HasMaxLength(255);

                entity.Property(e => e.F35).HasMaxLength(255);

                entity.Property(e => e.F36).HasMaxLength(255);

                entity.Property(e => e.F37).HasMaxLength(255);

                entity.Property(e => e.F38).HasMaxLength(255);

                entity.Property(e => e.F39).HasMaxLength(255);

                entity.Property(e => e.F40).HasMaxLength(255);

                entity.Property(e => e.F41).HasMaxLength(255);

                entity.Property(e => e.F42).HasMaxLength(255);

                entity.Property(e => e.F43).HasMaxLength(255);

                entity.Property(e => e.F44).HasMaxLength(255);

                entity.Property(e => e.F45).HasMaxLength(255);

                entity.Property(e => e.F46).HasMaxLength(255);

                entity.Property(e => e.F47).HasMaxLength(255);

                entity.Property(e => e.F48).HasMaxLength(255);

                entity.Property(e => e.F49).HasMaxLength(255);

                entity.Property(e => e.F50).HasMaxLength(255);

                entity.Property(e => e.F51).HasMaxLength(255);

                entity.Property(e => e.F52).HasMaxLength(255);

                entity.Property(e => e.F53).HasMaxLength(255);

                entity.Property(e => e.F54).HasMaxLength(255);

                entity.Property(e => e.F55).HasMaxLength(255);

                entity.Property(e => e.F56).HasMaxLength(255);

                entity.Property(e => e.F57).HasMaxLength(255);

                entity.Property(e => e.F58).HasMaxLength(255);

                entity.Property(e => e.F59).HasMaxLength(255);

                entity.Property(e => e.F60).HasMaxLength(255);

                entity.Property(e => e.F61).HasMaxLength(255);

                entity.Property(e => e.F62).HasMaxLength(255);

                entity.Property(e => e.F63).HasMaxLength(255);

                entity.Property(e => e.F64).HasMaxLength(255);

                entity.Property(e => e.F65).HasMaxLength(255);

                entity.Property(e => e.F66).HasMaxLength(255);

                entity.Property(e => e.F67).HasMaxLength(255);

                entity.Property(e => e.F68).HasMaxLength(255);

                entity.Property(e => e.F69).HasMaxLength(255);

                entity.Property(e => e.F70).HasMaxLength(255);

                entity.Property(e => e.F71).HasMaxLength(255);

                entity.Property(e => e.F72).HasMaxLength(255);

                entity.Property(e => e.F73).HasMaxLength(255);

                entity.Property(e => e.F74).HasMaxLength(255);

                entity.Property(e => e.F75).HasMaxLength(255);

                entity.Property(e => e.F76).HasMaxLength(255);

                entity.Property(e => e.F77).HasMaxLength(255);

                entity.Property(e => e.F78).HasMaxLength(255);

                entity.Property(e => e.F79).HasMaxLength(255);

                entity.Property(e => e.F80).HasMaxLength(255);

                entity.Property(e => e.F81).HasMaxLength(255);

                entity.Property(e => e.F82).HasMaxLength(255);

                entity.Property(e => e.F83).HasMaxLength(255);

                entity.Property(e => e.F84).HasMaxLength(255);

                entity.Property(e => e.F85).HasMaxLength(255);

                entity.Property(e => e.F86).HasMaxLength(255);

                entity.Property(e => e.F87).HasMaxLength(255);

                entity.Property(e => e.F88).HasMaxLength(255);

                entity.Property(e => e.F89).HasMaxLength(255);

                entity.Property(e => e.F90).HasMaxLength(255);

                entity.Property(e => e.F91).HasMaxLength(255);

                entity.Property(e => e.F92).HasMaxLength(255);

                entity.Property(e => e.F93).HasMaxLength(255);

                entity.Property(e => e.F94).HasMaxLength(255);

                entity.Property(e => e.F95).HasMaxLength(255);

                entity.Property(e => e.F96).HasMaxLength(255);

                entity.Property(e => e.F97).HasMaxLength(255);

                entity.Property(e => e.F98).HasMaxLength(255);

                entity.Property(e => e.F99).HasMaxLength(255);

                entity.Property(e => e.TipoDocRet).HasMaxLength(255);

                entity.Property(e => e.TipodeRet).HasMaxLength(255);

                entity.Property(e => e.Transaccion).HasMaxLength(255);
            });

            modelBuilder.Entity<ConsolidadoOrdenes>(entity =>
            {
                entity.HasKey(e => e.NumCot)
                    .HasName("PK_ConsolidadoOrdenes_1");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_ConsolidadoOrdenes");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Cliente).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Estacion).HasMaxLength(400);

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.Nombre).HasMaxLength(120);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);

                entity.Property(e => e.Orden).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CotizacionesModificada>(entity =>
            {
                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_CotizacionesModificada_1");

                entity.HasIndex(e => e.Procesado)
                    .HasName("IX_CotizacionesModificada");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.FechaModificada).HasColumnType("smalldatetime");

                entity.Property(e => e.Procesado).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Cpry114>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CPRY114");

                entity.Property(e => e.Almacen).HasMaxLength(10);

                entity.Property(e => e.CostoPapel)
                    .HasColumnName("COSTO_PAPEL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CostoPapelDol)
                    .HasColumnName("COSTO_PAPEL_DOL")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Eliminado)
                    .HasColumnName("ELIMINADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelFifo)
                    .HasColumnName("PAPEL_FIFO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelLista)
                    .HasColumnName("PAPEL_LISTA")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelMat)
                    .HasColumnName("PAPEL_MAT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RcostoPapel)
                    .HasColumnName("RCOSTO_PAPEL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RecordNumber)
                    .HasColumnName("RECORD_NUMBER")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoPapel)
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Cpry114copia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CPRY114Copia");

                entity.Property(e => e.Almacen).HasMaxLength(10);

                entity.Property(e => e.CostoPapel)
                    .HasColumnName("COSTO_PAPEL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CostoPapelDol)
                    .HasColumnName("COSTO_PAPEL_DOL")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Eliminado)
                    .HasColumnName("ELIMINADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelFifo)
                    .HasColumnName("PAPEL_FIFO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelLista)
                    .HasColumnName("PAPEL_LISTA")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelMat)
                    .HasColumnName("PAPEL_MAT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RcostoPapel)
                    .HasColumnName("RCOSTO_PAPEL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.TipoPapel)
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Cpry115>(entity =>
            {
                entity.HasKey(e => new { e.IdGrupoPapel, e.CodGrupoPapel });

                entity.ToTable("CPRY115");

                entity.Property(e => e.CodGrupoPapel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CostoPapel).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CostoPapelMasAlto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DescGrupoPapel)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RcostoPapel)
                    .HasColumnName("RCostoPapel")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RcostoPapelMasAlto)
                    .HasColumnName("RCostoPapelMasAlto")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Cpry180>(entity =>
            {
                entity.HasKey(e => e.IdHorario);

                entity.ToTable("CPRY180");

                entity.Property(e => e.IdHorario).ValueGeneratedNever();

                entity.Property(e => e.Almuerzo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.Fin)
                    .HasColumnName("fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Inicio).HasColumnType("datetime");

                entity.Property(e => e.Laborable)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.PrimerBloque)
                    .IsRequired()
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<Cpry251>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CPRY251");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdDepartamento).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Cpry252>(entity =>
            {
                entity.HasKey(e => e.Idtitulo)
                    .HasName("CPRY252_INDEX01");

                entity.ToTable("CPRY252");

                entity.HasIndex(e => e.Recnum)
                    .HasName("CPRY252_INDEX00")
                    .IsUnique();

                entity.Property(e => e.Idtitulo)
                    .HasColumnName("IDTITULO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FlagOculto)
                    .HasColumnName("FLAG_OCULTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Grupo)
                    .HasColumnName("GRUPO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Iddepartamento).HasColumnName("IDDEPARTAMENTO");

                entity.Property(e => e.Linea)
                    .HasColumnName("LINEA")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Medida)
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Nombretitulo)
                    .HasColumnName("NOMBRETITULO")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Cpry253>(entity =>
            {
                entity.HasKey(e => e.IdCalendario);

                entity.ToTable("CPRY253");

                entity.HasIndex(e => e.FechaVigencia)
                    .HasName("IX_CPRY253");

                entity.HasIndex(e => e.IdTitulo)
                    .HasName("IX_CPRY253_1");

                entity.Property(e => e.CodOficina).HasColumnName("Cod_Oficina");

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            });

            modelBuilder.Entity<Cpry254>(entity =>
            {
                entity.HasKey(e => e.Orden);

                entity.ToTable("CPRY254");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_cpry254orden");

                entity.Property(e => e.Orden).ValueGeneratedNever();

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<Cpry255>(entity =>
            {
                entity.HasKey(e => new { e.IdMaquina, e.MedidaBasicaMultiplo, e.MedidaOpuestaDesde, e.MedidaOpuestaHasta, e.CantidadTintas, e.PerfHorizontal, e.PerfVertical, e.HoyosArchivo, e.CarbonEngomado, e.CarbonSpot });

                entity.ToTable("CPRY255");

                entity.Property(e => e.MedidaOpuestaDesde).HasColumnType("decimal(10, 4)");

                entity.Property(e => e.MedidaOpuestaHasta).HasColumnType("decimal(10, 4)");

                entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagProducto)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cpry256>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Job, e.IdMaquina });

                entity.ToTable("CPRY256");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_cpry256orden");

                entity.Property(e => e.DiasTrabajo).HasColumnType("numeric(12, 2)");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cpry257>(entity =>
            {
                entity.HasKey(e => new { e.Idmaquina, e.IdProducto });

                entity.ToTable("CPRY257");

                entity.Property(e => e.IdProducto)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cpry258>(entity =>
            {
                entity.HasKey(e => e.RecNum);

                entity.ToTable("CPRY258");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Comentario).HasColumnType("text");

                entity.Property(e => e.Linea)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CreActualizaClienteCotizacion>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Cliente).HasMaxLength(10);

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Fin).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Inicio).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<CreEjecutaAprobarCredito>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_CreEjecutaAprobarCredito_2");

                entity.HasIndex(e => e.Fin)
                    .HasName("IX_CreEjecutaAprobarCredito");

                entity.HasIndex(e => e.Inicio)
                    .HasName("IX_CreEjecutaAprobarCredito_1");

                entity.Property(e => e.Recnum).HasColumnName("recnum");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Fin).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Inicio).HasColumnType("datetime");

                entity.Property(e => e.Usuario).HasMaxLength(50);
            });

            modelBuilder.Entity<CreOficinasAcontrolar>(entity =>
            {
                entity.ToTable("CreOficinasAControlar");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Oficina).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<CrmTicketEncuesta>(entity =>
            {
                entity.HasKey(e => e.IdEncuesta);

                entity.HasIndex(e => e.TicketSha1)
                    .HasName("IX_CrmTicketEncuesta")
                    .IsUnique();

                entity.Property(e => e.IdEncuesta)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaContestada).HasColumnType("datetime");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.TicketSha1)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Csmy011>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("CSMY011");

                entity.HasIndex(e => e.Frecuencia)
                    .HasName("IX_CSMY011");

                entity.HasIndex(e => new { e.Codigo, e.Frecuencia })
                    .HasName("IX_CSMY011_1");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Combinación)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.EventoMatrizLista)
                    .HasColumnName("Evento_Matriz_Lista")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagEliminada).HasMaxLength(1);

                entity.Property(e => e.FlagNoContar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Frecuencia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Icpp)
                    .HasColumnName("icpp")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.ShortRun)
                    .HasColumnName("Short_Run")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoTinta)
                    .HasColumnName("Tipo_Tinta")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy036>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("csmy036");

                entity.Property(e => e.CantidadXAnch).HasColumnName("CANTIDAD_X_ANCH");

                entity.Property(e => e.CodJde)
                    .HasColumnName("COD_JDE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodResponsable).HasColumnName("COD_RESPONSABLE");

                entity.Property(e => e.Codcorp)
                    .HasColumnName("CODCORP")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoProduct)
                    .IsRequired()
                    .HasColumnName("CODIGO_PRODUCT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodprodRpg)
                    .HasColumnName("CODPROD_RPG")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescripVta)
                    .HasColumnName("DESCRIP_VTA")
                    .HasColumnType("text");

                entity.Property(e => e.FamiliaProduct)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagCorp)
                    .HasColumnName("FLAG_CORP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagDesact)
                    .HasColumnName("FLAG_DESACT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagPrdIntern)
                    .HasColumnName("FLAG_PRD_INTERN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Idsubcategoria)
                    .HasColumnName("IDSUBCATEGORIA")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.ImpPorConsumo)
                    .HasColumnName("IMP_POR_CONSUMO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LineaIncoming).HasColumnName("LINEA_INCOMING");

                entity.Property(e => e.LineaProducto)
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Numero).HasColumnName("NUMERO");

                entity.Property(e => e.PorcCosto).HasColumnName("PORC_COSTO");

                entity.Property(e => e.Prefijo)
                    .HasColumnName("PREFIJO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrintNoPrint)
                    .HasColumnName("Print_NoPrint")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Sufijo)
                    .HasColumnName("SUFIJO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto).HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Titulo)
                    .HasColumnName("TITULO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Titulo1)
                    .HasColumnName("TITULO1")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Titulo2)
                    .HasColumnName("TITULO2")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Titulo3)
                    .HasColumnName("TITULO3")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Titulo4)
                    .HasColumnName("TITULO4")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Titulo5).HasColumnName("TITULO5");

                entity.Property(e => e.Titulo6).HasColumnName("TITULO6");

                entity.Property(e => e.TituloPe)
                    .HasColumnName("TITULO_PE")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasColumnName("TITULO_VENTAS")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UnidadCosteo).HasColumnName("UNIDAD_COSTEO");

                entity.Property(e => e.Web)
                    .HasColumnName("WEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy037>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CSMY037");

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagModifList)
                    .HasColumnName("FLAG_MODIF_LIST")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Cuota2010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cuota2010");

                entity.Property(e => e.AñoContable)
                    .HasColumnName("AÑO_CONTABLE")
                    .HasColumnType("decimal(5, 0)");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoSupervisor)
                    .HasColumnName("CODIGO_SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaVentas)
                    .HasColumnName("CUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreSupervisor)
                    .HasColumnName("NOMBRE_SUPERVISOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProductoCuota)
                    .HasColumnName("PRODUCTO_CUOTA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RcuotaVentas)
                    .HasColumnName("RCUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.TipoCuota)
                    .HasColumnName("TIPO_CUOTA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<DataCenter>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.Fecha, e.Ficha })
                    .HasName("IX_DataCenter");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<DatosCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("DatosCliente");

                entity.Property(e => e.AprobAdmin)
                    .HasColumnName("Aprob_Admin")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AprobCob)
                    .HasColumnName("Aprob_Cob")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AprobCont)
                    .HasColumnName("Aprob_Cont")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AprobP)
                    .HasColumnName("Aprob_P")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasColumnName("Cliente_Nuevo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasColumnName("Cod_teleop")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVend)
                    .HasColumnName("Cod_vend")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoClient)
                    .HasColumnName("Codigo_Client")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Contacto)
                    .HasColumnName("contacto")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescTipoPago)
                    .HasColumnName("Desc_Tipo_Pago")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.DirecEnt)
                    .HasColumnName("Direc_Ent")
                    .HasMaxLength(240)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DirecFact)
                    .HasColumnName("Direc_Fact")
                    .HasMaxLength(240)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Dolares)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Email)
                    .HasColumnName("email")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EnviarEmail)
                    .HasColumnName("Enviar_email")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estado)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecAproCob)
                    .HasColumnName("Fec_Apro_Cob")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecAproP)
                    .HasColumnName("Fec_Apro_P")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecCob)
                    .HasColumnName("Fec_Cob")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecDol)
                    .HasColumnName("Fec_Dol")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecGrab)
                    .HasColumnName("Fec_Grab")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecOrd)
                    .HasColumnName("Fec_Ord")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaAprobAdm)
                    .HasColumnName("Fecha_Aprob_Adm")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaAprobCont)
                    .HasColumnName("Fecha_Aprob_Cont")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaDespacho)
                    .HasColumnName("Fecha_Despacho")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaEntrega)
                    .HasColumnName("Fecha_Entrega")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("Fecha_Factura")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaPasada)
                    .HasColumnName("Fecha_Pasada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRecibCliente)
                    .HasColumnName("Fecha_Recib_Cliente")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagCombo)
                    .HasColumnName("flag_combo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSinAdj)
                    .HasColumnName("FLAG_SIN_ADJ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GrabCliente)
                    .HasColumnName("GRAB_CLIENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdDireccion)
                    .HasColumnName("Id_Direccion")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NoAsignacion)
                    .HasColumnName("No_Asignacion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomCliente)
                    .HasColumnName("Nom_Cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomEnt)
                    .HasColumnName("Nom_Ent")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombFact)
                    .HasColumnName("Nomb_Fact")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumCot)
                    .HasColumnName("Num_Cot")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ObserSaca)
                    .HasColumnName("obser_saca")
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObservCliente)
                    .HasColumnName("Observ_Cliente")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OrdCompra)
                    .HasColumnName("Ord_compra")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Orden).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PtoReferencia)
                    .HasColumnName("Pto_Referencia")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RboCob)
                    .HasColumnName("Rbo_Cob")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RequiereNe)
                    .HasColumnName("REQUIERE_NE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifEnt)
                    .HasColumnName("Rif_Ent")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifFact)
                    .HasColumnName("Rif_Fact")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SiColetilla)
                    .HasColumnName("Si_Coletilla")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SiIndexacion)
                    .HasColumnName("Si_Indexacion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SinRif)
                    .HasColumnName("Sin_Rif")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StatusOrden)
                    .HasColumnName("STATUS_ORDEN")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoPago)
                    .HasColumnName("Tipo_Pago")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Depofacil>(entity =>
            {
                entity.HasKey(e => e.IdCliente);

                entity.Property(e => e.Consecutivo).ValueGeneratedOnAdd();

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.FlagTxt)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumeroRif)
                    .IsRequired()
                    .HasMaxLength(14);

                entity.Property(e => e.NumeroTabla)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.RangoValidaCliente)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.RangoValidaRif)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.TipoAccion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRif)
                    .IsRequired()
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<Detalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DETALLE");

                entity.Property(e => e.Articulo)
                    .IsRequired()
                    .HasColumnName("ARTICULO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Bultos).HasColumnName("BULTOS");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CentroFact).HasColumnName("CENTRO_FACT");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CtaConc)
                    .IsRequired()
                    .HasColumnName("CTA_CONC")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtaLista)
                    .IsRequired()
                    .HasColumnName("CTA_LISTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion1)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION1")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion2)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION2")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEmb)
                    .HasColumnName("DIRECCION_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionFact)
                    .HasColumnName("DIRECCION_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.Estadisticas)
                    .IsRequired()
                    .HasColumnName("ESTADISTICAS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Expr1)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Familia)
                    .IsRequired()
                    .HasColumnName("FAMILIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FamiliaProducc)
                    .IsRequired()
                    .HasColumnName("FAMILIA_PRODUCC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FecComproClte)
                    .HasColumnName("FEC_COMPRO_CLTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecRecPlaneac)
                    .HasColumnName("FEC_REC_PLANEAC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaOrden)
                    .HasColumnName("FECHA_ORDEN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida)
                    .HasColumnName("FECHA_PROMETIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagFaltante)
                    .IsRequired()
                    .HasColumnName("FLAG_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagImprenta)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRENTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagRetenido)
                    .IsRequired()
                    .HasColumnName("FLAG_RETENIDO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagTipoJob)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_JOB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagTipoOrden)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FormasBajotiro).HasColumnName("FORMAS_BAJOTIRO");

                entity.Property(e => e.FormasUnidad)
                    .HasColumnName("FORMAS_UNIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.GeneraDespacho)
                    .HasColumnName("GENERA_DESPACHO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ImpStock)
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Impuesto1)
                    .HasColumnName("IMPUESTO_1")
                    .HasColumnType("decimal(27, 8)");

                entity.Property(e => e.Impuesto1R)
                    .HasColumnName("IMPUESTO_1_r")
                    .HasColumnType("decimal(27, 8)");

                entity.Property(e => e.Impuesto2)
                    .HasColumnName("IMPUESTO_2")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Iva)
                    .HasColumnName("IVA")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.Linea1)
                    .IsRequired()
                    .HasColumnName("LINEA1")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LineaProduccio)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Lipamepa)
                    .IsRequired()
                    .HasColumnName("LIPAMEPA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ListaUniDol)
                    .HasColumnName("LISTA_UNI_DOL")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.MetodoPrecio1)
                    .IsRequired()
                    .HasColumnName("METODO_PRECIO1")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Millares)
                    .IsRequired()
                    .HasColumnName("MILLARES")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.NoEntrega).HasColumnName("NO_ENTREGA");

                entity.Property(e => e.NombreEmb)
                    .HasColumnName("NOMBRE_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.NombreFact)
                    .HasColumnName("NOMBRE_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.NumeroDesde).HasColumnName("NUMERO_DESDE");

                entity.Property(e => e.NumeroDesdeEnt).HasColumnName("NUMERO_DESDE_ENT");

                entity.Property(e => e.NumeroHasta).HasColumnName("NUMERO_HASTA");

                entity.Property(e => e.NumeroHastaEnt).HasColumnName("NUMERO_HASTA_ENT");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrigenProducto)
                    .IsRequired()
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasColumnName("PAIS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Partes)
                    .IsRequired()
                    .HasColumnName("PARTES")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Preciounidad)
                    .HasColumnName("PRECIOUNIDAD")
                    .HasColumnType("decimal(30, 13)");

                entity.Property(e => e.PreciounidadR)
                    .HasColumnName("PRECIOUNIDAD_r")
                    .HasColumnType("decimal(30, 13)");

                entity.Property(e => e.PrefijoDesde)
                    .IsRequired()
                    .HasColumnName("PREFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrefijoDesdeEnt)
                    .HasColumnName("PREFIJO_DESDE_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrefijoHasta)
                    .IsRequired()
                    .HasColumnName("PREFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrefijoHastaEnt)
                    .HasColumnName("PREFIJO_HASTA_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RemisionOfi)
                    .HasColumnName("REMISION_OFI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoDesde)
                    .IsRequired()
                    .HasColumnName("SUFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoDesdeEnt)
                    .HasColumnName("SUFIJO_DESDE_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoHasta)
                    .IsRequired()
                    .HasColumnName("SUFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoHastaEnt)
                    .HasColumnName("SUFIJO_HASTA_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UnidadFacturar)
                    .IsRequired()
                    .HasColumnName("UNIDAD_FACTURAR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Unidadesent)
                    .HasColumnName("UNIDADESENT")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Unidadesfact)
                    .HasColumnName("UNIDADESFACT")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.VentaUniDol)
                    .HasColumnName("VENTA_UNI_DOL")
                    .HasColumnType("decimal(25, 9)");
            });

            modelBuilder.Entity<DetalleComidas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("DetalleComidas");

                entity.Property(e => e.CodigoDepartamento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CuentaContable)
                    .HasMaxLength(29)
                    .IsFixedLength();

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Empleado)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha).HasColumnType("datetime");
            });

            modelBuilder.Entity<DirectorioActivo>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.City).HasMaxLength(255);

                entity.Property(e => e.Department).HasMaxLength(255);

                entity.Property(e => e.DisplayName)
                    .HasColumnName("Display Name")
                    .HasMaxLength(255);

                entity.Property(e => e.Firstname).HasMaxLength(255);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Lastname).HasMaxLength(255);

                entity.Property(e => e.MemberOf)
                    .HasColumnName("Member Of")
                    .HasMaxLength(255);

                entity.Property(e => e.Name).HasMaxLength(255);

                entity.Property(e => e.ParentContainer).HasMaxLength(255);

                entity.Property(e => e.SamAccountName).HasMaxLength(255);

                entity.Property(e => e.Sid)
                    .HasColumnName("SID")
                    .HasMaxLength(255);

                entity.Property(e => e.State).HasMaxLength(255);

                entity.Property(e => e.UserPassword).HasMaxLength(255);

                entity.Property(e => e.UserPrincipalName).HasMaxLength(255);
            });

            modelBuilder.Entity<EjeucionProceso>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.Inicio)
                    .HasName("IX_EjeucionProceso_1");

                entity.HasIndex(e => e.Usuario)
                    .HasName("IX_EjeucionProceso");

                entity.HasIndex(e => new { e.Usuario, e.Inicio })
                    .HasName("IX_EjeucionProceso_2");

                entity.Property(e => e.FechaEjecucion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fin).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEvaluacion).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Inicio).HasColumnType("datetime");

                entity.Property(e => e.Usuario).HasMaxLength(40);
            });

            modelBuilder.Entity<EjeucionProcesoVariacionInventario>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.FechaJuliana).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fin).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Inicio).HasColumnType("smalldatetime");

                entity.Property(e => e.Usuario).HasMaxLength(50);
            });

            modelBuilder.Entity<Email>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EMAIL");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Copia)
                    .HasColumnName("copia")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CopiaOculta)
                    .HasColumnName("copia_oculta")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Depurar)
                    .HasColumnName("depurar")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Email1)
                    .HasColumnName("email")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCreado)
                    .HasColumnName("fecha_creado")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaEnvio)
                    .HasColumnName("fecha_envio")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.HoraCreado)
                    .HasColumnName("hora_creado")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HoraEnvio)
                    .HasColumnName("hora_envio")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdCarta)
                    .HasColumnName("id_carta")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IdFile)
                    .HasColumnName("Id_File")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Name)
                    .HasColumnName("NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NsfFile)
                    .HasColumnName("Nsf_File")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Path)
                    .HasColumnName("PATH")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Subject)
                    .HasColumnName("SUBJECT")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Texto)
                    .HasColumnName("texto")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<EmbarquesVentas>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Cobrado).HasMaxLength(50);

                entity.Property(e => e.Detalle).HasMaxLength(50);

                entity.Property(e => e.Embarques).HasMaxLength(50);

                entity.Property(e => e.EstacionCxc).HasMaxLength(50);

                entity.Property(e => e.EstacionPlanta).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Ventas).HasMaxLength(50);
            });

            modelBuilder.Entity<Estacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESTACION");

                entity.Property(e => e.Automatica)
                    .HasColumnName("AUTOMATICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion1)
                    .IsRequired()
                    .HasColumnName("ESTACION")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.FlagFacturacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Obligatoria)
                    .HasColumnName("OBLIGATORIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Prioridad)
                    .HasColumnName("PRIORIDAD")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Replanificar)
                    .HasColumnName("REPLANIFICAR")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Simultaneidad)
                    .HasColumnName("SIMULTANEIDAD")
                    .HasMaxLength(1)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EstadoMunucipio>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Estado).HasMaxLength(2);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Idnew)
                    .HasColumnName("idnew")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Municipio).HasMaxLength(2);
            });

            modelBuilder.Entity<Estados>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Iso3166)
                    .IsRequired()
                    .HasColumnName("Iso_3166")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NombreEstado)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<EstatusDominio>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Estatus).HasMaxLength(50);
            });

            modelBuilder.Entity<EtiquetasSerpapro>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CodigoPrefijo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.NroCorrelativo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EtiquetasStock>(entity =>
            {
                entity.HasKey(e => e.IdRegistro);

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_EtiquetasStockorden");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(16, 3)");

                entity.Property(e => e.CantidadUsuario).HasColumnType("decimal(16, 3)");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCalculo).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCalculoUsuario).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcentajeIva).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcentajeIvaUsuario).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PrecioUnidad).HasColumnType("decimal(20, 6)");

                entity.Property(e => e.PrecioUnidadUsuario).HasColumnType("decimal(20, 6)");

                entity.Property(e => e.RecNumDocumento).HasColumnType("decimal(28, 0)");

                entity.Property(e => e.TotalBolivares).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TotalBolivaresUsuario).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.ValorIva).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorIvaUsuario).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<EvalCreditoFact>(entity =>
            {
                entity.HasKey(e => e.IdEvaluacion)
                    .HasName("PK_CreEvaluacionCredito");

                entity.Property(e => e.IdEvaluacion).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdSolicitudAnalisis).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Usuario).HasMaxLength(50);
            });

            modelBuilder.Entity<ExcepcionCambioPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Excepciones>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CodPapel)
                    .HasColumnName("Cod_Papel")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Costo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Rcosto)
                    .HasColumnName("RCosto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VigDesde)
                    .HasColumnName("Vig_Desde")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VigHasta)
                    .HasColumnName("Vig_Hasta")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<ExcepcionesFifo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ExcepcionesFIFO");

                entity.Property(e => e.CodPapel)
                    .HasColumnName("Cod_Papel")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Costo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id)
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.VigDesde)
                    .HasColumnName("Vig_Desde")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.VigHasta)
                    .HasColumnName("Vig_Hasta")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<F1201z1Activosjde>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("F1201Z1_ACTIVOSJDE");

                entity.Property(e => e.ActivosId)
                    .HasColumnName("ActivosID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Asfaacl1)
                    .IsRequired()
                    .HasColumnName("ASFAACL1")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Asfanoru)
                    .IsRequired()
                    .HasColumnName("ASFANORU")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Cantidad)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CentroCostoId)
                    .HasColumnName("CentroCostoID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ClasifactivosId)
                    .HasColumnName("ClasifactivosID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Costo)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.CostoUnitario)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faaaid)
                    .IsRequired()
                    .HasColumnName("FAAAID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faacl2)
                    .IsRequired()
                    .HasColumnName("FAACL2")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faacl4)
                    .HasColumnName("FAACL4")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Faaesv).HasColumnName("FAAESV");

                entity.Property(e => e.Faaiv)
                    .HasColumnName("FAAIV")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faalrc)
                    .HasColumnName("FAALRC")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faamcu)
                    .IsRequired()
                    .HasColumnName("FAAMCU")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Faamf).HasColumnName("FAAMF");

                entity.Property(e => e.Faan8).HasColumnName("FAAN8");

                entity.Property(e => e.Faaobj)
                    .IsRequired()
                    .HasColumnName("FAAOBJ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faapid)
                    .HasColumnName("FAAPID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faapom).HasColumnName("FAAPOM");

                entity.Property(e => e.Faapur).HasColumnName("FAAPUR");

                entity.Property(e => e.Faarcq).HasColumnName("FAARCQ");

                entity.Property(e => e.Faaroq).HasColumnName("FAAROQ");

                entity.Property(e => e.Faarpc).HasColumnName("FAARPC");

                entity.Property(e => e.Faasid)
                    .IsRequired()
                    .HasColumnName("FAASID")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faasub)
                    .IsRequired()
                    .HasColumnName("FAASUB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faco)
                    .IsRequired()
                    .HasColumnName("FACO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Fadadc)
                    .IsRequired()
                    .HasColumnName("FADADC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadado)
                    .IsRequired()
                    .HasColumnName("FADADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadads)
                    .IsRequired()
                    .HasColumnName("FADADS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadaj)
                    .HasColumnName("FADAJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Fadl01)
                    .HasColumnName("FADL01")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Fadl02)
                    .IsRequired()
                    .HasColumnName("FADL02")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadl03)
                    .IsRequired()
                    .HasColumnName("FADL03")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadmcu).HasColumnName("FADMCU");

                entity.Property(e => e.Fadobj)
                    .IsRequired()
                    .HasColumnName("FADOBJ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fadrin).HasColumnName("FADRIN");

                entity.Property(e => e.Fadsub)
                    .IsRequired()
                    .HasColumnName("FADSUB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faedbt)
                    .IsRequired()
                    .HasColumnName("FAEDBT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Faedtn)
                    .HasColumnName("FAEDTN")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Faedus)
                    .IsRequired()
                    .HasColumnName("FAEDUS")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Faeftb)
                    .HasColumnName("FAEFTB")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Faex)
                    .IsRequired()
                    .HasColumnName("FAEX")
                    .HasMaxLength(27)
                    .IsUnicode(false);

                entity.Property(e => e.Faexr)
                    .IsRequired()
                    .HasColumnName("FAEXR")
                    .HasMaxLength(27)
                    .IsUnicode(false);

                entity.Property(e => e.Fafinc)
                    .IsRequired()
                    .HasColumnName("FAFINC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fainsa).HasColumnName("FAINSA");

                entity.Property(e => e.Fainsc)
                    .IsRequired()
                    .HasColumnName("FAINSC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fainsm).HasColumnName("FAINSM");

                entity.Property(e => e.Fainsp)
                    .IsRequired()
                    .HasColumnName("FAINSP")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fajcd)
                    .IsRequired()
                    .HasColumnName("FAJCD")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Falano).HasColumnName("FALANO");

                entity.Property(e => e.Faloc).HasColumnName("FALOC");

                entity.Property(e => e.Famcu)
                    .IsRequired()
                    .HasColumnName("FAMCU")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fanumb)
                    .IsRequired()
                    .HasColumnName("FANUMB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fapuro)
                    .IsRequired()
                    .HasColumnName("FAPURO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Farmcu)
                    .IsRequired()
                    .HasColumnName("FARMCU")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Farobj)
                    .IsRequired()
                    .HasColumnName("FAROBJ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Farsub)
                    .IsRequired()
                    .HasColumnName("FARSUB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fatnac)
                    .IsRequired()
                    .HasColumnName("FATNAC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Fatytn)
                    .IsRequired()
                    .HasColumnName("FATYTN")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faxmcu)
                    .IsRequired()
                    .HasColumnName("FAXMCU")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faxobj)
                    .IsRequired()
                    .HasColumnName("FAXOBJ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Faxsub)
                    .IsRequired()
                    .HasColumnName("FAXSUB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FechaComApi)
                    .HasColumnName("FechaComAPI")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCompra)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDepApi)
                    .HasColumnName("FechaDepAPI")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDepreciacion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.MetodoDepreciacion)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ObrasId)
                    .HasColumnName("ObrasID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ProveedorId)
                    .HasColumnName("ProveedorID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.UbicacionId)
                    .HasColumnName("UbicacionID")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ValorRescate)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.VidaUtil)
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<F554111eioF>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("F554111EIO_F");

                entity.HasIndex(e => new { e.Ilmcu, e.Observaciones })
                    .HasName("IX_F554111EIO_F");

                entity.Property(e => e.Anio).HasColumnName("ANIO");

                entity.Property(e => e.Costo)
                    .HasColumnName("COSTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.CostoTotal)
                    .HasColumnName("COSTO_TOTAL")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Division)
                    .HasColumnName("DIVISION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Existencia)
                    .HasColumnName("EXISTENCIA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaP)
                    .HasColumnName("EXISTENCIA_P")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaPO)
                    .HasColumnName("EXISTENCIA_P_O")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Factorconv)
                    .HasColumnName("FACTORCONV")
                    .HasColumnType("numeric(13, 7)");

                entity.Property(e => e.Fch)
                    .HasColumnName("FCH")
                    .HasColumnType("datetime");

                entity.Property(e => e.FchC)
                    .HasColumnName("FCH_C")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ildct)
                    .HasColumnName("ILDCT")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildcto)
                    .HasColumnName("ILDCTO")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildgl)
                    .HasColumnName("ILDGL")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Ildoco).HasColumnName("ILDOCO");

                entity.Property(e => e.Ilitm).HasColumnName("ILITM");

                entity.Property(e => e.Ilkco)
                    .HasColumnName("ILKCO")
                    .HasMaxLength(10);

                entity.Property(e => e.Illitm)
                    .HasColumnName("ILLITM")
                    .HasMaxLength(25);

                entity.Property(e => e.IllotMadre)
                    .HasColumnName("ILLOT_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Illotn)
                    .HasColumnName("ILLOTN")
                    .HasMaxLength(60);

                entity.Property(e => e.Ilmcu)
                    .HasColumnName("ILMCU")
                    .HasMaxLength(12);

                entity.Property(e => e.Ilplot)
                    .HasColumnName("ILPLOT")
                    .HasMaxLength(60);

                entity.Property(e => e.Iltday).HasColumnName("ILTDAY");

                entity.Property(e => e.Iltrdj)
                    .HasColumnName("ILTRDJ")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Iltrex)
                    .HasColumnName("ILTREX")
                    .HasMaxLength(30);

                entity.Property(e => e.Iltrum)
                    .HasColumnName("ILTRUM")
                    .HasMaxLength(2);

                entity.Property(e => e.IltrumP)
                    .HasColumnName("ILTRUM_P")
                    .HasMaxLength(2);

                entity.Property(e => e.Ilukid).HasColumnName("ILUKID");

                entity.Property(e => e.IluplMadre).HasColumnName("ILUPL_MADRE");

                entity.Property(e => e.Imdsc1)
                    .HasColumnName("IMDSC1")
                    .HasMaxLength(60);

                entity.Property(e => e.Imdsc2)
                    .HasColumnName("IMDSC2")
                    .HasMaxLength(60);

                entity.Property(e => e.Jfch).HasColumnName("JFCH");

                entity.Property(e => e.LoteMadre)
                    .HasColumnName("LOTE_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasMaxLength(100);

                entity.Property(e => e.Periodo).HasColumnName("PERIODO");
            });

            modelBuilder.Entity<F554111eioFhistorico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("F554111EIO_FHISTORICO");

                entity.Property(e => e.Anio).HasColumnName("ANIO");

                entity.Property(e => e.Costo)
                    .HasColumnName("COSTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.CostoTotal)
                    .HasColumnName("COSTO_TOTAL")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Division)
                    .HasColumnName("DIVISION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Existencia)
                    .HasColumnName("EXISTENCIA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaP)
                    .HasColumnName("EXISTENCIA_P")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaPO)
                    .HasColumnName("EXISTENCIA_P_O")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Factorconv)
                    .HasColumnName("FACTORCONV")
                    .HasColumnType("numeric(13, 7)");

                entity.Property(e => e.Fch)
                    .HasColumnName("FCH")
                    .HasColumnType("datetime");

                entity.Property(e => e.FchC)
                    .HasColumnName("FCH_C")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ildct)
                    .HasColumnName("ILDCT")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildcto)
                    .HasColumnName("ILDCTO")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildgl)
                    .HasColumnName("ILDGL")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Ildoco).HasColumnName("ILDOCO");

                entity.Property(e => e.Ilitm).HasColumnName("ILITM");

                entity.Property(e => e.Ilkco)
                    .HasColumnName("ILKCO")
                    .HasMaxLength(10);

                entity.Property(e => e.Illitm)
                    .HasColumnName("ILLITM")
                    .HasMaxLength(25);

                entity.Property(e => e.IllotMadre)
                    .HasColumnName("ILLOT_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Illotn)
                    .HasColumnName("ILLOTN")
                    .HasMaxLength(60);

                entity.Property(e => e.Ilmcu)
                    .HasColumnName("ILMCU")
                    .HasMaxLength(12);

                entity.Property(e => e.Ilplot)
                    .HasColumnName("ILPLOT")
                    .HasMaxLength(60);

                entity.Property(e => e.Iltday).HasColumnName("ILTDAY");

                entity.Property(e => e.Iltrdj)
                    .HasColumnName("ILTRDJ")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Iltrex)
                    .HasColumnName("ILTREX")
                    .HasMaxLength(30);

                entity.Property(e => e.Iltrum)
                    .HasColumnName("ILTRUM")
                    .HasMaxLength(2);

                entity.Property(e => e.IltrumP)
                    .HasColumnName("ILTRUM_P")
                    .HasMaxLength(2);

                entity.Property(e => e.Ilukid).HasColumnName("ILUKID");

                entity.Property(e => e.IluplMadre).HasColumnName("ILUPL_MADRE");

                entity.Property(e => e.Imdsc1)
                    .HasColumnName("IMDSC1")
                    .HasMaxLength(60);

                entity.Property(e => e.Imdsc2)
                    .HasColumnName("IMDSC2")
                    .HasMaxLength(60);

                entity.Property(e => e.Jfch).HasColumnName("JFCH");

                entity.Property(e => e.LoteMadre)
                    .HasColumnName("LOTE_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasMaxLength(100);

                entity.Property(e => e.Periodo).HasColumnName("PERIODO");
            });

            modelBuilder.Entity<F554111eioFo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("F554111EIO_FO");

                entity.HasIndex(e => new { e.Ilmcu, e.Observaciones })
                    .HasName("IX_F554111EIO_FO");

                entity.Property(e => e.Anio).HasColumnName("ANIO");

                entity.Property(e => e.Costo)
                    .HasColumnName("COSTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.CostoTotal)
                    .HasColumnName("COSTO_TOTAL")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Division)
                    .HasColumnName("DIVISION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Existencia)
                    .HasColumnName("EXISTENCIA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaP)
                    .HasColumnName("EXISTENCIA_P")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.ExistenciaPO)
                    .HasColumnName("EXISTENCIA_P_O")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.Factorconv)
                    .HasColumnName("FACTORCONV")
                    .HasColumnType("numeric(13, 7)");

                entity.Property(e => e.Fch)
                    .HasColumnName("FCH")
                    .HasColumnType("datetime");

                entity.Property(e => e.FchC)
                    .HasColumnName("FCH_C")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ildct)
                    .HasColumnName("ILDCT")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildcto)
                    .HasColumnName("ILDCTO")
                    .HasMaxLength(2);

                entity.Property(e => e.Ildgl)
                    .HasColumnName("ILDGL")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Ildoco).HasColumnName("ILDOCO");

                entity.Property(e => e.Ilitm).HasColumnName("ILITM");

                entity.Property(e => e.Ilkco)
                    .HasColumnName("ILKCO")
                    .HasMaxLength(10);

                entity.Property(e => e.Illitm)
                    .HasColumnName("ILLITM")
                    .HasMaxLength(25);

                entity.Property(e => e.IllotMadre)
                    .HasColumnName("ILLOT_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Illotn)
                    .HasColumnName("ILLOTN")
                    .HasMaxLength(60);

                entity.Property(e => e.Ilmcu)
                    .HasColumnName("ILMCU")
                    .HasMaxLength(12);

                entity.Property(e => e.Ilplot)
                    .HasColumnName("ILPLOT")
                    .HasMaxLength(60);

                entity.Property(e => e.Iltday).HasColumnName("ILTDAY");

                entity.Property(e => e.Iltrdj)
                    .HasColumnName("ILTRDJ")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Iltrex)
                    .HasColumnName("ILTREX")
                    .HasMaxLength(30);

                entity.Property(e => e.Iltrum)
                    .HasColumnName("ILTRUM")
                    .HasMaxLength(2);

                entity.Property(e => e.IltrumP)
                    .HasColumnName("ILTRUM_P")
                    .HasMaxLength(2);

                entity.Property(e => e.Ilukid).HasColumnName("ILUKID");

                entity.Property(e => e.IluplMadre).HasColumnName("ILUPL_MADRE");

                entity.Property(e => e.Imdsc1)
                    .HasColumnName("IMDSC1")
                    .HasMaxLength(60);

                entity.Property(e => e.Imdsc2)
                    .HasColumnName("IMDSC2")
                    .HasMaxLength(60);

                entity.Property(e => e.Jfch).HasColumnName("JFCH");

                entity.Property(e => e.LoteMadre)
                    .HasColumnName("LOTE_MADRE")
                    .HasMaxLength(60);

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasMaxLength(100);

                entity.Property(e => e.Periodo).HasColumnName("PERIODO");
            });

            modelBuilder.Entity<F55fjulian>(entity =>
            {
                entity.HasKey(e => e.Juliana);

                entity.ToTable("F55FJULIAN");

                entity.HasIndex(e => e.Gregoriana)
                    .HasName("IX_F55FJULIAN");

                entity.Property(e => e.Acumulado)
                    .HasColumnName("ACUMULADO")
                    .HasMaxLength(6);

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.Cdfy).HasColumnName("CDFY");

                entity.Property(e => e.Gregoriana).HasColumnType("smalldatetime");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Periodo)
                    .HasColumnName("PERIODO")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<F55obsolescencia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("F55OBSOLESCENCIA");

                entity.Property(e => e.An8).HasColumnName("AN8");

                entity.Property(e => e.CostoUnit)
                    .HasColumnName("COSTO_UNIT")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Dcto)
                    .HasColumnName("DCTO")
                    .HasMaxLength(2);

                entity.Property(e => e.Dlej).HasColumnName("DLEJ");

                entity.Property(e => e.Doco)
                    .HasColumnName("DOCO")
                    .HasColumnType("numeric(12, 0)");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Ldsc)
                    .HasColumnName("LDSC")
                    .HasMaxLength(30);

                entity.Property(e => e.Liitm).HasColumnName("LIITM");

                entity.Property(e => e.Lilocn)
                    .HasColumnName("LILOCN")
                    .HasMaxLength(20);

                entity.Property(e => e.Lilotn)
                    .HasColumnName("LILOTN")
                    .HasMaxLength(30);

                entity.Property(e => e.Lipqoh)
                    .HasColumnName("LIPQOH")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Litm)
                    .HasColumnName("LITM")
                    .HasMaxLength(25);

                entity.Property(e => e.Mcu)
                    .HasColumnName("MCU")
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.Nprov)
                    .HasColumnName("NPROV")
                    .HasMaxLength(40);

                entity.Property(e => e.Und)
                    .HasColumnName("UND")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<F76v4581>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("F76V4581");

                entity.Property(e => e.Direccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaDeRetencion).HasColumnType("smalldatetime");

                entity.Property(e => e.Hran8)
                    .HasColumnName("hran8")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Hrdct)
                    .HasColumnName("hrdct")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hrdoc)
                    .HasColumnName("hrdoc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hrfy)
                    .HasColumnName("hrfy")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Hrkco)
                    .HasColumnName("hrkco")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hrodct)
                    .HasColumnName("hrodct")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hrodoc)
                    .HasColumnName("hrodoc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hrpn)
                    .HasColumnName("hrpn")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Hrsfx)
                    .HasColumnName("hrsfx")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");

                entity.Property(e => e.Monto0411).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Monto76v4581).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoObjetoDeRetencion).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoRetenido).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoaPagar).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NaturalJuridico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreoRazonSocial)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumerDocumento)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PorcentajeAplicado).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RifoCi)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<FechaCobroOrden>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.Orden)
                    .HasName("UQ__FechaCob__60ACC55D768EDD92")
                    .IsUnique();

                entity.Property(e => e.Cliente).HasColumnType("decimal(6, 0)");

                entity.Property(e => e.FechaCobro)
                    .HasColumnName("Fecha_Cobro")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaHoraAgrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraModifica).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MontoUsd)
                    .HasColumnName("MontoUSD")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Tasa).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.UsuarioAgrega)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FlatComision>(entity =>
            {
                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Fuente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("fuente");

                entity.Property(e => e.Col001)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<General>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GENERAL");

                entity.Property(e => e.AnoFactura).HasColumnName("ANO_FACTURA");

                entity.Property(e => e.Anticipo).HasColumnName("ANTICIPO");

                entity.Property(e => e.Anulada)
                    .IsRequired()
                    .HasColumnName("ANULADA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Cajas).HasColumnName("CAJAS");

                entity.Property(e => e.CentroFact).HasColumnName("CENTRO_FACT");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoRepetici).HasColumnName("CODIGO_REPETICI");

                entity.Property(e => e.ColetillaInd1)
                    .HasColumnName("COLETILLA_IND1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd2)
                    .HasColumnName("COLETILLA_IND2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd3)
                    .HasColumnName("COLETILLA_IND3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd4)
                    .HasColumnName("COLETILLA_IND4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CondPago).HasColumnName("COND_PAGO");

                entity.Property(e => e.CondicionPago).HasColumnName("CONDICION_PAGO");

                entity.Property(e => e.Copy).HasColumnName("COPY");

                entity.Property(e => e.CredConta)
                    .IsRequired()
                    .HasColumnName("CRED_CONTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFiscal)
                    .HasColumnName("DIRECC_FISCAL")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionEmb1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEmb2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEmb3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB3")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFact1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFact2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFact3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT3")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Dolar)
                    .IsRequired()
                    .HasColumnName("DOLAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasColumnName("ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FactAdelantada)
                    .IsRequired()
                    .HasColumnName("FACT_ADELANTADA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FactFinal).HasColumnName("FACT_FINAL");

                entity.Property(e => e.FacturaRepetir).HasColumnName("FACTURA_REPETIR");

                entity.Property(e => e.FechaDespacho)
                    .HasColumnName("FECHA_DESPACHO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRecibCli)
                    .HasColumnName("FECHA_RECIB_CLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fiscal)
                    .IsRequired()
                    .HasColumnName("FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagComision)
                    .IsRequired()
                    .HasColumnName("FLAG_COMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagImpreso)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRESO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Flete)
                    .HasColumnName("FLETE")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Imp).HasColumnName("IMP");

                entity.Property(e => e.ImpStock)
                    .IsRequired()
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.LineaAnt).HasColumnName("LINEA_ANT");

                entity.Property(e => e.MesFactura).HasColumnName("MES_FACTURA");

                entity.Property(e => e.MultiplesEmb)
                    .IsRequired()
                    .HasColumnName("MULTIPLES_EMB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasColumnName("MUNICIPIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NcFacturar).HasColumnName("NC_FACTURAR");

                entity.Property(e => e.NitEmb).HasColumnName("NIT_EMB");

                entity.Property(e => e.NitFact).HasColumnName("NIT_FACT");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombreEmb)
                    .IsRequired()
                    .HasColumnName("NOMBRE_EMB")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombreFact)
                    .IsRequired()
                    .HasColumnName("NOMBRE_FACT")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NroControl).HasColumnName("NRO_CONTROL");

                entity.Property(e => e.NroNc).HasColumnName("NRO_NC");

                entity.Property(e => e.NuevaLineaAnt).HasColumnName("NUEVA_LINEA_ANT");

                entity.Property(e => e.ObsCobranzas1)
                    .HasColumnName("OBS_COBRANZAS1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas2)
                    .HasColumnName("OBS_COBRANZAS2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas3)
                    .HasColumnName("OBS_COBRANZAS3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas4)
                    .HasColumnName("OBS_COBRANZAS4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observacion1)
                    .IsRequired()
                    .HasColumnName("OBSERVACION1")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasColumnName("OBSERVACION2")
                    .HasMaxLength(79)
                    .IsUnicode(false);

                entity.Property(e => e.Observacion3)
                    .IsRequired()
                    .HasColumnName("OBSERVACION3")
                    .HasMaxLength(79)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.OtroGasto1)
                    .HasColumnName("OTRO_GASTO_1")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.OtroGasto1R)
                    .HasColumnName("OTRO_GASTO_1_r")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.OtroGasto2)
                    .HasColumnName("OTRO_GASTO_2")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.SdoAnticipo)
                    .HasColumnName("SDO_ANTICIPO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.SdoAnticipoDo)
                    .HasColumnName("SDO_ANTICIPO_DO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Seguro)
                    .HasColumnName("SEGURO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TasaAnticipo)
                    .HasColumnName("TASA_ANTICIPO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TasaImpuesto)
                    .HasColumnName("TASA_IMPUESTO")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Transmision)
                    .IsRequired()
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UnidadFacturar).HasColumnName("UNIDAD_FACTURAR");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)");

                entity.Property(e => e.VendGestion)
                    .IsRequired()
                    .HasColumnName("VEND_GESTION")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Hoja1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Hoja1$");

                entity.Property(e => e.FechaCierre)
                    .HasColumnName("FECHA CIERRE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rnc).HasColumnName("RNC");
            });

            modelBuilder.Entity<InventarioTablas>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Base).HasMaxLength(50);

                entity.Property(e => e.Campo).HasMaxLength(50);

                entity.Property(e => e.Fk)
                    .HasColumnName("FK")
                    .HasMaxLength(2);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NombreTabla).HasMaxLength(80);

                entity.Property(e => e.Secuencia).HasColumnName("secuencia");
            });

            modelBuilder.Entity<MaestroObjetos>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NombreObjeto)
                    .HasColumnName("nombre_Objeto")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Menu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MENU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Orden)
                    .HasColumnName("orden")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Pagina)
                    .HasColumnName("PAGINA")
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rol)
                    .HasColumnName("ROL")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Titulo)
                    .HasColumnName("TITULO")
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Menufa>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Aplicacion)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Clave)
                    .HasColumnName("clave")
                    .HasMaxLength(255);

                entity.Property(e => e.Formulario)
                    .HasColumnName("formulario")
                    .HasMaxLength(255);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Relacion).HasColumnName("relacion");

                entity.Property(e => e.Relativo)
                    .HasColumnName("relativo")
                    .HasMaxLength(255);

                entity.Property(e => e.Rol)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Texto)
                    .HasColumnName("texto")
                    .HasMaxLength(255);

                entity.Property(e => e.TipoLlamada)
                    .HasColumnName("tipo_llamada")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<MtrNotificacionEmail>(entity =>
            {
                entity.HasKey(e => e.IdNotificacion);

                entity.Property(e => e.IdNotificacion).ValueGeneratedNever();

                entity.Property(e => e.Asunto)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Copia).HasDefaultValueSql("('')");

                entity.Property(e => e.CopiaOculta).HasDefaultValueSql("('')");

                entity.Property(e => e.Cuerpo)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Destino)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreNotificacion)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PerfilEnvio)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RutaArchivo)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoCuerpo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Municipios>(entity =>
            {
                entity.HasKey(e => e.IdMunicipio);

                entity.Property(e => e.IdMunicipio).ValueGeneratedNever();

                entity.Property(e => e.NombreMunicipio)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<NetworkId>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.NetworkId1)
                    .HasColumnName("NetworkId")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Nmt004>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nmt004");

                entity.Property(e => e.CiaCodcia)
                    .IsRequired()
                    .HasColumnName("cia_codcia")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Codcar)
                    .IsRequired()
                    .HasColumnName("codcar")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Descar)
                    .IsRequired()
                    .HasColumnName("descar")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<NoPendienteAprobacioCredito>(entity =>
            {
                entity.HasKey(e => e.Estacion);

                entity.Property(e => e.Estacion).HasMaxLength(3);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<NotificacionPlantaActiva>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Cliente).HasMaxLength(10);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Num>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("num");

                entity.Property(e => e.Copy).HasMaxLength(2);

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.NumeroControlDesde).HasMaxLength(60);

                entity.Property(e => e.NumeroControlHasta).HasMaxLength(60);

                entity.Property(e => e.NumeroFormatoDesde).HasMaxLength(60);

                entity.Property(e => e.NumeroFormatoHasta).HasMaxLength(60);

                entity.Property(e => e.NumeroSerieControlDesde).HasMaxLength(60);

                entity.Property(e => e.NumeroSerieControlHasta).HasMaxLength(60);

                entity.Property(e => e.NumeroSerieFormatoDesde).HasMaxLength(60);

                entity.Property(e => e.NumeroSerieFormatoHasta).HasMaxLength(60);

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.TipoDocumento).HasMaxLength(60);
            });

            modelBuilder.Entity<OrdenesReportadasSeniat>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Factura })
                    .HasName("PK_OrdenesReportadasSeniat_1");

                entity.HasComment("Ordenes Reportadas al Seniat");
            });

            modelBuilder.Entity<Pagado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PAGADO");

                entity.Property(e => e.Concepto)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Cuenta)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Rnadsa).HasColumnName("RNADSA");

                entity.Property(e => e.Rnadsc).HasColumnName("RNADSC");

                entity.Property(e => e.Rnalt6)
                    .HasColumnName("RNALT6")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnan8).HasColumnName("RNAN8");

                entity.Property(e => e.Rnbcrc)
                    .HasColumnName("RNBCRC")
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.Rncds).HasColumnName("RNCDS");

                entity.Property(e => e.Rncdsa).HasColumnName("RNCDSA");

                entity.Property(e => e.Rnco)
                    .HasColumnName("RNCO")
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Rncrcd)
                    .HasColumnName("RNCRCD")
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.Rncrr).HasColumnName("RNCRR");

                entity.Property(e => e.Rncrrm)
                    .HasColumnName("RNCRRM")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnctry).HasColumnName("RNCTRY");

                entity.Property(e => e.Rndct)
                    .HasColumnName("RNDCT")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Rndctm)
                    .HasColumnName("RNDCTM")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Rndoc).HasColumnName("RNDOC");

                entity.Property(e => e.Rndrco)
                    .HasColumnName("RNDRCO")
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.Rnfnlp)
                    .HasColumnName("RNFNLP")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnfy).HasColumnName("RNFY");

                entity.Property(e => e.Rngam3).HasColumnName("RNGAM3");

                entity.Property(e => e.Rngam4).HasColumnName("RNGAM4");

                entity.Property(e => e.Rngen6)
                    .HasColumnName("RNGEN6")
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Rngen7)
                    .HasColumnName("RNGEN7")
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Rngfl7)
                    .HasColumnName("RNGFL7")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rngfl8)
                    .HasColumnName("RNGFL8")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnglc)
                    .HasColumnName("RNGLC")
                    .HasMaxLength(4)
                    .IsFixedLength();

                entity.Property(e => e.Rnhcrr).HasColumnName("RNHCRR");

                entity.Property(e => e.Rnjobn)
                    .HasColumnName("RNJOBN")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Rnkco)
                    .HasColumnName("RNKCO")
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Rnlrfl)
                    .HasColumnName("RNLRFL")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnmcu)
                    .HasColumnName("RNMCU")
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.Rnnetdoc).HasColumnName("RNNETDOC");

                entity.Property(e => e.Rnnetrc5).HasColumnName("RNNETRC5");

                entity.Property(e => e.Rnnettcid).HasColumnName("RNNETTCID");

                entity.Property(e => e.Rnpaap).HasColumnName("RNPAAP");

                entity.Property(e => e.Rnpfap).HasColumnName("RNPFAP");

                entity.Property(e => e.Rnpid)
                    .HasColumnName("RNPID")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Rnpn).HasColumnName("RNPN");

                entity.Property(e => e.Rnpo)
                    .HasColumnName("RNPO")
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.Rnpost)
                    .HasColumnName("RNPOST")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rnpyid).HasColumnName("RNPYID");

                entity.Property(e => e.Rnrc5).HasColumnName("RNRC5");

                entity.Property(e => e.Rnrmk)
                    .HasColumnName("RNRMK")
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Rnsfx)
                    .HasColumnName("RNSFX")
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.Rnsfxe).HasColumnName("RNSFXE");

                entity.Property(e => e.Rnupmj)
                    .HasColumnName("RNUPMJ")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Rnupmt).HasColumnName("RNUPMT");

                entity.Property(e => e.Rnuser)
                    .HasColumnName("RNUSER")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(4)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Parroquias>(entity =>
            {
                entity.HasKey(e => e.IdParroquia);

                entity.Property(e => e.IdParroquia).ValueGeneratedNever();

                entity.Property(e => e.CodigoMcpo)
                    .HasColumnName("CODIGO_MCPO")
                    .HasMaxLength(2);

                entity.Property(e => e.NombreParroquia)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<Pcascii>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCASCII");

                entity.Property(e => e.Clave).HasMaxLength(50);

                entity.Property(e => e.Codigo).HasMaxLength(50);

                entity.Property(e => e.Desde).HasMaxLength(50);

                entity.Property(e => e.Ficha).HasMaxLength(50);

                entity.Property(e => e.Hasta).HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NetoPagado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Nombre).HasMaxLength(50);
            });

            modelBuilder.Entity<PcañoMesOrden>(entity =>
            {
                entity.ToTable("PCAñoMesOrden");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_PCAñoMesOrden");

                entity.Property(e => e.Año).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.FechaOrden).HasColumnType("smalldatetime");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.Mes).HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreCliente).HasMaxLength(80);

                entity.Property(e => e.NombreVendedor).HasMaxLength(50);

                entity.Property(e => e.Orden).HasMaxLength(20);

                entity.Property(e => e.Producto).HasMaxLength(12);
            });

            modelBuilder.Entity<Pccliente>(entity =>
            {
                entity.ToTable("PCCliente");

                entity.HasIndex(e => e.Cliente)
                    .HasName("IX_PCCliente");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.FApertura)
                    .HasColumnName("F_Apertura")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FUltmCompra)
                    .HasColumnName("F_Ultm_Compra")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaReactivado).HasColumnType("smalldatetime");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<PccomisionesTemporal>(entity =>
            {
                entity.ToTable("PCComisionesTemporal");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BsComision)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsComisionGrte)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsComisionGteProducto)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsComisionNuevoReactivado)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsComisionNuevoReactivadoGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CantidadCuotasCumplidas).HasDefaultValueSql("((0))");

                entity.Property(e => e.CantidadCuotasCumplidasGerente).HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionCantidadCuotasCumplidas)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionCantidadCuotasCumplidasGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionRangoCumplimientoCuotaGeneral)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionRangoCumplimientoCuotaGeneralGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Desde)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FichaGteProducto).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagParcial).HasDefaultValueSql("((0))");

                entity.Property(e => e.Hasta)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdGerente).HasMaxLength(4);

                entity.Property(e => e.IdSolicitud)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.Impuesto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorFactura).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCantidadCuotasCumplidas)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcCantidadCuotasCumplidasGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcFlat)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcFlatGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcRangoCumplimientoCuotaGeneral)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcRangoCumplimientoCuotaGeneralGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.RecNumPadre)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalCuotaMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalCuotaMesGerente)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentasMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentasMesGerente)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TranCancela).HasMaxLength(2);

                entity.Property(e => e.Transaccion).HasMaxLength(2);

                entity.Property(e => e.UsuarioRegistro).HasMaxLength(40);

                entity.HasOne(d => d.IdTipoPagoNavigation)
                    .WithMany(p => p.PccomisionesTemporal)
                    .HasForeignKey(d => d.IdTipoPago)
                    .HasConstraintName("FK_PCComisionesTemporal_PCTipoPago");
            });

            modelBuilder.Entity<PccuotaVentas>(entity =>
            {
                entity.ToTable("PCCuotaVentas");

                entity.HasIndex(e => e.Vendedor)
                    .HasName("IX_PCCuotaVentas");

                entity.Property(e => e.Cuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CuotaString).HasMaxLength(20);

                entity.Property(e => e.CuotaUsd).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CuotaUsdString).HasMaxLength(20);

                entity.Property(e => e.DescripcionCuota)
                    .HasMaxLength(50)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcCumplimiento).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Supervisor).HasMaxLength(4);

                entity.Property(e => e.TasaUsd).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TasaUsdString).HasMaxLength(20);

                entity.Property(e => e.Vendedor).HasMaxLength(4);

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaBs).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaString).HasMaxLength(20);

                entity.Property(e => e.VentaUsd).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaUsdString).HasMaxLength(20);
            });

            modelBuilder.Entity<PccuotaVentasGerente>(entity =>
            {
                entity.ToTable("PCCuotaVentasGerente");

                entity.Property(e => e.Cuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CuotaString).HasMaxLength(20);

                entity.Property(e => e.DescripcionCuota)
                    .HasMaxLength(50)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Gerente).HasMaxLength(4);

                entity.Property(e => e.PorcCumplimiento).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaString).HasMaxLength(20);
            });

            modelBuilder.Entity<PcflatComision>(entity =>
            {
                entity.ToTable("PCFlatComision");

                entity.Property(e => e.Descripcion).IsRequired();

                entity.Property(e => e.Porcentaje).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<PcflatComisionGerente>(entity =>
            {
                entity.ToTable("PCFlatComisionGerente");

                entity.Property(e => e.Gerente).HasMaxLength(4);

                entity.Property(e => e.NombreGerente).HasMaxLength(50);

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Pchistorico>(entity =>
            {
                entity.ToTable("PCHistorico");

                entity.HasIndex(e => e.DocumentoString)
                    .HasName("IX_PCHistorico_2");

                entity.HasIndex(e => e.IdPeriodo)
                    .HasName("IX_PCHistorico");

                entity.HasIndex(e => e.OrdenString)
                    .HasName("IX_PCHistorico_1");

                entity.Property(e => e.Id).HasMaxLength(50);

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionString).HasMaxLength(50);

                entity.Property(e => e.ComisionCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ComisionRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ConceptoNomina).HasMaxLength(10);

                entity.Property(e => e.DescripcionTipoPago)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Documento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DocumentoString).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Ficha).HasMaxLength(50);

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.MontoReal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoRealString).HasMaxLength(20);

                entity.Property(e => e.MontoString).HasMaxLength(20);

                entity.Property(e => e.NombreCliente).HasMaxLength(120);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);

                entity.Property(e => e.NombreVendedor).HasMaxLength(100);

                entity.Property(e => e.OrdenString).HasMaxLength(10);

                entity.Property(e => e.PeriodoDesde)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PeriodoHasta)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcFlat).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.TotalCuotaMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentasMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.HasOne(d => d.IdTipoPagoNavigation)
                    .WithMany(p => p.Pchistorico)
                    .HasForeignKey(d => d.IdTipoPago)
                    .HasConstraintName("FK_PCHistorico_PCTipoPago");
            });

            modelBuilder.Entity<Pcoficina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCOficina");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreOficina).HasMaxLength(25);
            });

            modelBuilder.Entity<PcordenesPignoradas>(entity =>
            {
                entity.ToTable("PCOrdenesPignoradas");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_PCOrdenesPignoradas_1");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_PCOrdenesPignoradas");

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.EsValorAbsoluto).HasDefaultValueSql("((1))");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.NombreCliente).HasMaxLength(50);

                entity.Property(e => e.NombreVendedor).HasMaxLength(50);

                entity.Property(e => e.Orden).HasMaxLength(20);

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PcporcCantidadCategoriasCubiertas>(entity =>
            {
                entity.ToTable("PCPorcCantidadCategoriasCubiertas");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcentajeGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Pcproceso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCProceso");

                entity.Property(e => e.Accion).HasDefaultValueSql("((0))");

                entity.Property(e => e.Culminado).HasDefaultValueSql("((0))");

                entity.Property(e => e.Desde).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasMaxLength(10);

                entity.Property(e => e.Hasta).HasMaxLength(10);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Iniciado).HasDefaultValueSql("((0))");

                entity.Property(e => e.PeriodoDesde).HasMaxLength(10);

                entity.Property(e => e.PeriodoHasta).HasMaxLength(10);

                entity.Property(e => e.TotalReg).HasDefaultValueSql("((0))");

                entity.Property(e => e.UsuarioRegistro).HasMaxLength(50);
            });

            modelBuilder.Entity<Pcproducto>(entity =>
            {
                entity.ToTable("PCProducto");

                entity.HasIndex(e => e.Producto)
                    .HasName("IX_PCProducto");

                entity.Property(e => e.Producto).HasMaxLength(12);
            });

            modelBuilder.Entity<PcproductoCuota>(entity =>
            {
                entity.ToTable("PCProductoCuota");

                entity.Property(e => e.Descripcion).HasMaxLength(50);
            });

            modelBuilder.Entity<PcrangoCumplimientoCuotaGeneral>(entity =>
            {
                entity.ToTable("PCRangoCumplimientoCuotaGeneral");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Desde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Hasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcentajeGerente)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PcrangoCumplimientoCuotaGeneralAñoMesVendedor>(entity =>
            {
                entity.ToTable("PCRangoCumplimientoCuotaGeneralAñoMesVendedor");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Cobertura).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Desde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Hasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Vendedor).HasMaxLength(4);
            });

            modelBuilder.Entity<PcresumenComisionHistorico>(entity =>
            {
                entity.ToTable("PCResumenComisionHistorico");

                entity.HasIndex(e => e.IdPeriodo)
                    .HasName("IX_PCResumenComisionHistorico");

                entity.Property(e => e.CodigoVendedor).HasMaxLength(4);

                entity.Property(e => e.Ficha).HasMaxLength(6);

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoString).HasMaxLength(50);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);

                entity.Property(e => e.NombreVendedor).HasMaxLength(50);

                entity.Property(e => e.Periodo).HasMaxLength(50);
            });

            modelBuilder.Entity<PcresumenComisionTemporal>(entity =>
            {
                entity.ToTable("PCResumenComisionTemporal");

                entity.Property(e => e.CodigoVendedor).HasMaxLength(4);

                entity.Property(e => e.Ficha).HasMaxLength(6);

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoString).HasMaxLength(50);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);

                entity.Property(e => e.NombreVendedor).HasMaxLength(50);

                entity.Property(e => e.Periodo).HasMaxLength(50);
            });

            modelBuilder.Entity<PcresumenOficinaHistorico>(entity =>
            {
                entity.ToTable("PCResumenOficinaHistorico");

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoString).HasMaxLength(50);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);
            });

            modelBuilder.Entity<PcresumenOficinaTemporal>(entity =>
            {
                entity.ToTable("PCResumenOficinaTemporal");

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoString).HasMaxLength(50);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);
            });

            modelBuilder.Entity<Pcsysfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCSysfile");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.PorcCunplimiento).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ToleranciaDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ToleranciaHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UmbralOrdenesPignoradas).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PctasaAñoMes>(entity =>
            {
                entity.ToTable("PCTasaAñoMes");

                entity.Property(e => e.Tasa).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Pctemporal>(entity =>
            {
                entity.ToTable("PCTemporal");

                entity.HasIndex(e => e.IdVendedor)
                    .HasName("IX_PCTemporal");

                entity.Property(e => e.Id).HasMaxLength(50);

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ComisionCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ComisionRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DescripcionTipoPago)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Documento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DocumentoString).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.MontoReal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoRealString).HasMaxLength(20);

                entity.Property(e => e.MontoString).HasMaxLength(20);

                entity.Property(e => e.OrdenString).HasMaxLength(10);

                entity.Property(e => e.PeriodoDesde)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PeriodoHasta)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcFlat).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.TotalCuotaMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentasMes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.HasOne(d => d.IdTipoPagoNavigation)
                    .WithMany(p => p.Pctemporal)
                    .HasForeignKey(d => d.IdTipoPago)
                    .HasConstraintName("FK_PCTemporal_PCTipoPago");
            });

            modelBuilder.Entity<PctemporalCoberturaCategoria>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCTemporalCoberturaCategoria");

                entity.Property(e => e.CantidadCategotias).HasMaxLength(50);

                entity.Property(e => e.EstasAqui).HasMaxLength(1);

                entity.Property(e => e.Porcentaje).HasMaxLength(50);
            });

            modelBuilder.Entity<PctemporalEstatusCoberturaGeneral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCTemporalEstatusCoberturaGeneral");

                entity.Property(e => e.Comision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Desde).HasMaxLength(100);

                entity.Property(e => e.EstasAqui).HasMaxLength(51);

                entity.Property(e => e.Hasta).HasMaxLength(100);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<PctemporalReporteCuota>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCTemporalReporteCuota");

                entity.Property(e => e.Cumplimiento).HasMaxLength(50);

                entity.Property(e => e.Cuota).HasMaxLength(50);

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Venta).HasMaxLength(50);
            });

            modelBuilder.Entity<PctipoPago>(entity =>
            {
                entity.ToTable("PCTipoPago");

                entity.Property(e => e.ConceptoNominaDescuento).HasMaxLength(10);

                entity.Property(e => e.ConceptoNominaPago).HasMaxLength(10);

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.TipoPago).HasMaxLength(2);
            });

            modelBuilder.Entity<Pcvendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PCVendedor");

                entity.Property(e => e.Ficha).HasMaxLength(6);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.Nombre).HasMaxLength(30);

                entity.Property(e => e.Supervisor).HasMaxLength(4);
            });

            modelBuilder.Entity<PendienteCalculoMc>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta });

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepPendientecalculomc_Cotizacion");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_PendienteCalculoMc_1");

                entity.HasIndex(e => e.Pendiente)
                    .HasName("IX_PendienteCalculoMc");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Pendiente)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Permisos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PERMISOS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstacion)
                    .HasColumnName("ID_ESTACION")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(15)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Planificacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PLANIFICACION");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_Planificacionorden");

                entity.Property(e => e.FechaFinalEstimada)
                    .HasColumnName("FECHA_FINAL_ESTIMADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaInicioEstimada)
                    .HasColumnName("FECHA_INICIO_ESTIMADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstacion)
                    .HasColumnName("ID_ESTACION")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdEstacionPase)
                    .HasColumnName("ID_ESTACION_PASE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.Secuencia).HasColumnName("SECUENCIA");
            });

            modelBuilder.Entity<PreciosStockEstadoMunicipio>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.NombreEstado)
                    .HasName("IX_PreciosStockEstadoMunicipio");

                entity.HasIndex(e => e.NombreMunicipio)
                    .HasName("IX_PreciosStockEstadoMunicipio_1");

                entity.Property(e => e.CapitalMunicipio).HasMaxLength(100);

                entity.Property(e => e.Descripcion).HasMaxLength(100);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdCalculo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.NombreEstado).HasMaxLength(100);

                entity.Property(e => e.NombreMunicipio).HasMaxLength(100);

                entity.Property(e => e.PrecioMaximo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PrecioMinimo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);
            });

            modelBuilder.Entity<PreciosStockEstadoMunicipios>(entity =>
            {
                entity.HasIndex(e => new { e.Estado, e.Municipio })
                    .HasName("IX_PreciosStockEstadoMunicipios_1");

                entity.HasIndex(e => new { e.Producto, e.Estado, e.Municipio })
                    .HasName("IX_PreciosStockEstadoMunicipios");

                entity.Property(e => e.CapitalMunicipio)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.FechaCalculo).HasColumnType("datetime");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.NombreEstado)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.NombreMunicipio)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PrecioMaximo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioMinimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);
            });

            modelBuilder.Entity<ProductosInventario>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.Property(e => e.Codigo).HasMaxLength(12);

                entity.Property(e => e.Caja)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Peso).HasColumnType("decimal(7, 2)");
            });

            modelBuilder.Entity<ProductosMcCorrectos>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Mcb)
                    .HasColumnName("MCB")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Mcf)
                    .HasColumnName("MCF")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");
            });

            modelBuilder.Entity<Pruebasms>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Celular)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsFixedLength();

                entity.Property(e => e.Cliente).HasMaxLength(50);

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Pvt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pvt");

                entity.Property(e => e.VendorId).HasColumnName("VendorID");
            });

            modelBuilder.Entity<Qpollosc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("qpollosc");

                entity.Property(e => e.Column0)
                    .HasColumnName("Column 0")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Query>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CodeCombinationId)
                    .HasColumnName("CODE_COMBINATION_ID")
                    .HasMaxLength(29);

                entity.Property(e => e.CreatedBy)
                    .HasColumnName("CREATED_BY")
                    .HasMaxLength(10);

                entity.Property(e => e.CreationDate)
                    .HasColumnName("CREATION_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.CurrencyCode)
                    .HasColumnName("CURRENCY_CODE")
                    .HasMaxLength(3);

                entity.Property(e => e.Description)
                    .HasColumnName("DESCRIPTION")
                    .HasMaxLength(61);

                entity.Property(e => e.Description2)
                    .HasColumnName("DESCRIPTION2")
                    .HasMaxLength(30);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnName("EFFECTIVE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Importe)
                    .HasColumnName("IMPORTE")
                    .HasColumnType("decimal(14, 2)");

                entity.Property(e => e.JeBatchId).HasColumnName("JE_BATCH_ID");

                entity.Property(e => e.JeCategory)
                    .IsRequired()
                    .HasColumnName("JE_CATEGORY")
                    .HasMaxLength(2);

                entity.Property(e => e.JeLineNum).HasColumnName("JE_LINE_NUM");

                entity.Property(e => e.JeSource)
                    .HasColumnName("JE_SOURCE")
                    .HasMaxLength(2);

                entity.Property(e => e.LastUpdateDate)
                    .HasColumnName("LAST_UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.LastUpdatedBy)
                    .HasColumnName("LAST_UPDATED_BY")
                    .HasMaxLength(10);

                entity.Property(e => e.PostedDate)
                    .HasColumnName("POSTED_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.SetOfBooksId).HasColumnName("SET_OF_BOOKS_ID");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<QueryWsmy36436501>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_WSMY364_365_01");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14);

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");
            });

            modelBuilder.Entity<QueryWsmy36437502>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_WSMY364_375_02");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14);

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");
            });

            modelBuilder.Entity<QueryWsmy36437503>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_WSMY364_375_03");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14);

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");
            });

            modelBuilder.Entity<RangosMillares>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.Desde, e.Hasta })
                    .HasName("IX_RangosMillares");

                entity.Property(e => e.Desde).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Hasta).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Titulo).HasMaxLength(50);
            });

            modelBuilder.Entity<Rcl001>(entity =>
            {
                entity.HasKey(e => e.IdTipoProceso);

                entity.ToTable("RCL001");

                entity.Property(e => e.IdTipoProceso)
                    .HasMaxLength(10)
                    .HasComment("Clave principal, dato definido por el usuario");

                entity.Property(e => e.AbreviadoTipoProceso)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("Abreviado del tipo de proceso");

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreTipoProceso)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasComment("Nombre del tipo de proceso");
            });

            modelBuilder.Entity<Rcl002>(entity =>
            {
                entity.HasKey(e => e.IdEmpresa);

                entity.ToTable("RCL002");

                entity.Property(e => e.IdEmpresa)
                    .HasMaxLength(10)
                    .HasComment("Clave principal, dato definido por el usuario");

                entity.Property(e => e.AbreviadoEmpresa)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdPais).HasComment("Pais a la que pertenece");

                entity.Property(e => e.NombreEmpresa)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasComment("Nombre de la empresa");

                entity.HasOne(d => d.IdPaisNavigation)
                    .WithMany(p => p.Rcl002)
                    .HasForeignKey(d => d.IdPais)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Empresa_Pais");
            });

            modelBuilder.Entity<Rcl003>(entity =>
            {
                entity.HasKey(e => e.IdPais);

                entity.ToTable("RCL003");

                entity.Property(e => e.AbreviadoPais)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombrePais)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Rcl004>(entity =>
            {
                entity.HasKey(e => new { e.IdProceso, e.IdEmpresa })
                    .HasName("PK_RCL004_1");

                entity.ToTable("RCL004");

                entity.Property(e => e.IdProceso)
                    .HasMaxLength(12)
                    .HasComment("");

                entity.Property(e => e.IdEmpresa)
                    .HasMaxLength(10)
                    .HasComment("Empresa a la que pertenece el proceso");

                entity.Property(e => e.FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdDia).HasComment("Indice del dia de la semana si aplica");

                entity.Property(e => e.IdUsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IdUsuarioModifica).HasMaxLength(40);

                entity.Property(e => e.PosCierreHabil).HasComment("Indica el número del dia habil despues del cierre");

                entity.Property(e => e.PreCierreHabil).HasComment("Indica el número del dia habil antes del cierre");

                entity.HasOne(d => d.IdEmpresaNavigation)
                    .WithMany(p => p.Rcl004)
                    .HasForeignKey(d => d.IdEmpresa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProcesoPais_Empresa");

                entity.HasOne(d => d.IdProcesoNavigation)
                    .WithMany(p => p.Rcl004)
                    .HasForeignKey(d => d.IdProceso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProcesoPais_Proceso");
            });

            modelBuilder.Entity<Rcl005>(entity =>
            {
                entity.HasKey(e => e.IdDia);

                entity.ToTable("RCL005");

                entity.Property(e => e.IdDia).ValueGeneratedNever();

                entity.Property(e => e.AbreviadoDia)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NombreDia)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Rcl006>(entity =>
            {
                entity.HasKey(e => new { e.FechaFeriado, e.IdPais })
                    .HasName("PK_RCL010");

                entity.ToTable("RCL006");

                entity.Property(e => e.FechaFeriado).HasColumnType("datetime");

                entity.Property(e => e.DescripcionFeriado)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.IdDiaFeriado).ValueGeneratedOnAdd();

                entity.HasOne(d => d.IdPaisNavigation)
                    .WithMany(p => p.Rcl006)
                    .HasForeignKey(d => d.IdPais)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Feriado_Pais");
            });

            modelBuilder.Entity<Rcl007>(entity =>
            {
                entity.HasKey(e => e.IdModulo);

                entity.ToTable("RCL007");

                entity.Property(e => e.IdModulo).HasMaxLength(12);

                entity.Property(e => e.AbreviadoModulo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreModulo)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<Rcl008>(entity =>
            {
                entity.HasKey(e => new { e.IdUsuario, e.IdProceso, e.IdEmpresa })
                    .HasName("PK_RCL008_1");

                entity.ToTable("RCL008");

                entity.Property(e => e.IdUsuario).HasMaxLength(40);

                entity.Property(e => e.IdProceso).HasMaxLength(12);

                entity.Property(e => e.IdEmpresa).HasMaxLength(10);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.IdEmpresaNavigation)
                    .WithMany(p => p.Rcl008)
                    .HasForeignKey(d => d.IdEmpresa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RCL008_RCL008");

                entity.HasOne(d => d.IdProcesoNavigation)
                    .WithMany(p => p.Rcl008)
                    .HasForeignKey(d => d.IdProceso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RCL008_RCL010");
            });

            modelBuilder.Entity<Rcl009>(entity =>
            {
                entity.HasKey(e => new { e.IdUsuarioHijo, e.IdPais });

                entity.ToTable("RCL009");

                entity.Property(e => e.IdUsuarioHijo)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdUsuarioPadre)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPaisNavigation)
                    .WithMany(p => p.Rcl009)
                    .HasForeignKey(d => d.IdPais)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RCL009_RCL003");
            });

            modelBuilder.Entity<Rcl010>(entity =>
            {
                entity.HasKey(e => e.IdProceso)
                    .HasName("PK_RCL010_1");

                entity.ToTable("RCL010");

                entity.Property(e => e.IdProceso)
                    .HasMaxLength(12)
                    .HasDefaultValueSql("(N'Clave primaria, dato definido por el usuario')")
                    .HasComment("Campo clave, dato definido por el usuario");

                entity.Property(e => e.ExigeAdjunto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasComment("Indica si la actividad exigue un adjunto");

                entity.Property(e => e.FechaCrea)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdModulo)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.IdTipoProceso)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasComment("Tipo de proceso al que pertenece la actividad");

                entity.Property(e => e.IdUsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IdUsuarioModifica).HasMaxLength(40);

                entity.Property(e => e.NombreProceso)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasComment("Descripción del proceso");

                entity.HasOne(d => d.IdModuloNavigation)
                    .WithMany(p => p.Rcl010)
                    .HasForeignKey(d => d.IdModulo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proceso_Modulo");

                entity.HasOne(d => d.IdTipoProcesoNavigation)
                    .WithMany(p => p.Rcl010)
                    .HasForeignKey(d => d.IdTipoProceso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Proceso_TipoProceso");
            });

            modelBuilder.Entity<Rcl011>(entity =>
            {
                entity.HasKey(e => new { e.IdEmpresa, e.IdUsuario, e.IdProceso, e.Ano, e.Mes, e.Fecha })
                    .HasName("PK_RCL011_1");

                entity.ToTable("RCL011");

                entity.HasIndex(e => e.IdUsuario)
                    .HasName("IX_RCL011");

                entity.Property(e => e.IdEmpresa).HasMaxLength(10);

                entity.Property(e => e.IdUsuario).HasMaxLength(40);

                entity.Property(e => e.IdProceso).HasMaxLength(12);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Adjunto).HasColumnType("ntext");

                entity.Property(e => e.FechaCerrado).HasColumnType("datetime");

                entity.Property(e => e.FechaGenerado)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'P')");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Rcl012>(entity =>
            {
                entity.HasKey(e => e.IdEstatus);

                entity.ToTable("RCL012");

                entity.Property(e => e.IdEstatus).HasMaxLength(3);

                entity.Property(e => e.FlagAtiempo)
                    .HasColumnName("FlagATiempo")
                    .HasMaxLength(1);

                entity.Property(e => e.FlagCerrado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagSatisfactorio).HasMaxLength(1);

                entity.Property(e => e.NombreEstatus)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Rcl013>(entity =>
            {
                entity.ToTable("RCL013");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FechaCrea).HasColumnType("datetime");

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.IdUsuarioActual)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IdUsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IdUsuarioNuevo)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Recepciones2008>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RECEPCIONES2008");

                entity.Property(e => e.Articulo)
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Cia)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion1)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion2)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.FechaDeColocacionOc).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaDeRecepcionPlanta).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaEntregaSolicitada).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaOrdenDeCompra).HasColumnType("smalldatetime");

                entity.Property(e => e.Lote)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.NombreComprador)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.NombreProveedor)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Requisicion)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.TipoOc)
                    .IsRequired()
                    .HasColumnName("TipoOC")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.TipoRequisicion)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.UnidaDeMedida)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Unitario).HasColumnName("unitario");
            });

            modelBuilder.Entity<Relacionfacturas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("RELACIONFACTURAS");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Concesion)
                    .HasColumnName("CONCESION")
                    .HasColumnType("decimal(38, 17)");

                entity.Property(e => e.CondicionPago)
                    .HasColumnName("CONDICION_PAGO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Factura).HasColumnName("FACTURA");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Impuesto)
                    .HasColumnName("IMPUESTO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Miscelaneo)
                    .IsRequired()
                    .HasColumnName("MISCELANEO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Remision)
                    .HasColumnName("REMISION")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TotalFactura)
                    .HasColumnName("TOTAL_FACTURA")
                    .HasColumnType("decimal(17, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<ReporteOrion01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REPORTE_ORION_01");

                entity.Property(e => e.CantMillar)
                    .HasColumnName("CANT_MILLAR")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("CODIGO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Concesion)
                    .HasColumnName("CONCESION")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.DescProd)
                    .HasColumnName("DESC_PROD")
                    .HasMaxLength(100);

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagBajoTiro)
                    .HasColumnName("FLAG_BAJO_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagEngrape)
                    .HasColumnName("FLAG_ENGRAPE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFaltante)
                    .HasColumnName("FLAG_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFiscal)
                    .HasColumnName("FLAG_FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagNumMagnetica)
                    .HasColumnName("FLAG_NUM_MAGNETICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSobreTiro)
                    .HasColumnName("FLAG_SOBRE_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagVe19)
                    .HasColumnName("FLAG_VE19")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAplicacion).HasColumnName("ID_APLICACION");

                entity.Property(e => e.InstPlantaVe19)
                    .HasColumnName("INST_PLANTA_VE19")
                    .HasColumnType("ntext");

                entity.Property(e => e.IntsPlanta)
                    .HasColumnName("INTS_PLANTA")
                    .HasColumnType("ntext");

                entity.Property(e => e.NomOficina)
                    .IsRequired()
                    .HasColumnName("NOM_OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombCliente)
                    .HasColumnName("NOMB_CLIENTE")
                    .HasMaxLength(80);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumControlD)
                    .HasColumnName("NUM_CONTROL_D")
                    .HasMaxLength(20);

                entity.Property(e => e.NumControlH)
                    .HasColumnName("NUM_CONTROL_H")
                    .HasMaxLength(20);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18);

                entity.Property(e => e.NumPartes).HasColumnName("NUM_PARTES");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.OrientaNum)
                    .HasColumnName("ORIENTA_NUM")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.PosNum)
                    .HasColumnName("POS_NUM")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.PrecioListaUntBs)
                    .HasColumnName("PRECIO_LISTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioListaUntDol)
                    .HasColumnName("PRECIO_LISTA_UNT_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVentaUntBs)
                    .HasColumnName("PRECIO_VENTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVentaUntDol)
                    .HasColumnName("PRECIO_VENTA_UNT_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Prefijo)
                    .HasColumnName("PREFIJO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ReferForma).HasColumnName("REFER_FORMA");

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.Sufijo)
                    .HasColumnName("SUFIJO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoNum)
                    .HasColumnName("TIPO_NUM")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TotalListaBs)
                    .HasColumnName("TOTAL_LISTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalListaDol)
                    .HasColumnName("TOTAL_LISTA_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaBs)
                    .HasColumnName("TOTAL_VENTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaDol)
                    .HasColumnName("TOTAL_VENTA_DOL")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Req001>(entity =>
            {
                entity.HasKey(e => e.IdRequerimiento);

                entity.ToTable("REQ001");

                entity.HasIndex(e => new { e.IdRequerimiento, e.FechaRegistro, e.IdUsuario, e.IdDepartamento })
                    .HasName("IX_REQ001");

                entity.Property(e => e.IdRequerimiento).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).IsRequired();

                entity.Property(e => e.FechaFinalizacion).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdDepartamento)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Justificacion).IsRequired();

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Req002>(entity =>
            {
                entity.HasKey(e => e.IdAreaNegocio);

                entity.ToTable("REQ002");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req003>(entity =>
            {
                entity.HasKey(e => e.IdPrioridad);

                entity.ToTable("REQ003");

                entity.HasIndex(e => e.FlagPredefinido)
                    .HasName("IX_REQ003");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagPredefinido)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req004>(entity =>
            {
                entity.HasKey(e => e.IdCategoria);

                entity.ToTable("REQ004");

                entity.HasIndex(e => e.FlagPlantilla)
                    .HasName("IX_REQ004");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagPlantilla)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req005>(entity =>
            {
                entity.HasKey(e => e.IdSubCategoria);

                entity.ToTable("REQ005");

                entity.HasIndex(e => e.FlagAdjunto)
                    .HasName("IX_REQ005_1");

                entity.HasIndex(e => e.FlagAplicacion)
                    .HasName("IX_REQ005_2");

                entity.HasIndex(e => e.FlagHpsm)
                    .HasName("IX_REQ005_5");

                entity.HasIndex(e => e.FlagScript)
                    .HasName("IX_REQ005_4");

                entity.HasIndex(e => e.IdCategoria)
                    .HasName("IX_REQ005");

                entity.HasIndex(e => e.IdRuta)
                    .HasName("IX_REQ005_3");

                entity.Property(e => e.IdSubCategoria).ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagAdjunto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagAplicacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagHpsm)
                    .IsRequired()
                    .HasColumnName("FlagHPSM")
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagScript)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req006>(entity =>
            {
                entity.HasKey(e => new { e.Cia, e.IdCargo })
                    .HasName("PK_REQ006_1");

                entity.ToTable("REQ006");

                entity.Property(e => e.Cia)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdCargo)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req007>(entity =>
            {
                entity.HasKey(e => new { e.IdPlantilla, e.IdCargo, e.IdSubcategoria, e.IdPrograma, e.IdRol })
                    .HasName("PK_REQ007_1");

                entity.ToTable("REQ007");

                entity.Property(e => e.IdCargo)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req008>(entity =>
            {
                entity.HasKey(e => e.IdRuta);

                entity.ToTable("REQ008");

                entity.HasIndex(e => e.FlagAutomatico)
                    .HasName("IX_REQ008");

                entity.HasIndex(e => e.FlagRutaAprobacion)
                    .HasName("IX_REQ008_1");

                entity.HasIndex(e => e.FlagRutaProceso)
                    .HasName("IX_REQ008_2");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagAutomatico)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagRutaAprobacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagRutaProceso)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req009>(entity =>
            {
                entity.HasKey(e => e.IdRutaAprobacion)
                    .HasName("PK_REQ009_1");

                entity.ToTable("REQ009");

                entity.HasIndex(e => e.IdRuta)
                    .HasName("IX_REQ009_1");

                entity.HasIndex(e => e.IdUsuario)
                    .HasName("IX_REQ009");

                entity.HasIndex(e => new { e.IdRuta, e.IdUsuario })
                    .HasName("IX_REQ009_2");

                entity.Property(e => e.IdRutaAprobacion).ValueGeneratedNever();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.Req009)
                    .HasForeignKey(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RutaAprobadorUsuario");
            });

            modelBuilder.Entity<Req010>(entity =>
            {
                entity.HasKey(e => e.IdUsuario);

                entity.ToTable("REQ010");

                entity.HasIndex(e => e.IdRuta)
                    .HasName("IX_REQ010");

                entity.HasIndex(e => new { e.IdRuta, e.IdUsuario })
                    .HasName("IX_REQ010_1");

                entity.Property(e => e.IdUsuario)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithOne(p => p.Req010)
                    .HasForeignKey<Req010>(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RutaUsuarioUsuario");
            });

            modelBuilder.Entity<Req011>(entity =>
            {
                entity.HasKey(e => e.Estatus);

                entity.ToTable("REQ011");

                entity.HasIndex(e => e.FlagAprobado)
                    .HasName("IX_REQ011");

                entity.HasIndex(e => e.FlagCancelado)
                    .HasName("IX_REQ011_1");

                entity.HasIndex(e => e.FlagFinalizado)
                    .HasName("IX_REQ011_2");

                entity.HasIndex(e => e.FlagPendiente)
                    .HasName("IX_REQ011_3");

                entity.Property(e => e.Estatus).HasMaxLength(3);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagAprobado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagCancelado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagFinalizado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagPendiente)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req012>(entity =>
            {
                entity.HasKey(e => e.IdCampo);

                entity.ToTable("REQ012");

                entity.HasIndex(e => e.FlagIdUsuario)
                    .HasName("IX_REQ012_1");

                entity.HasIndex(e => e.IdSubCategoria)
                    .HasName("IX_REQ012");

                entity.Property(e => e.IdCampo).ValueGeneratedNever();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagIdUsuario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCampo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req013>(entity =>
            {
                entity.HasKey(e => new { e.IdRequerimiento, e.IdCampo });

                entity.ToTable("REQ013");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_Valor");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req014>(entity =>
            {
                entity.HasKey(e => new { e.IdRequerimiento, e.IdSubCategoria, e.IdPrograma, e.IdRol })
                    .HasName("PK_REQ014_1");

                entity.ToTable("REQ014");

                entity.HasIndex(e => e.FlagEliminada)
                    .HasName("IX_REQ014");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagEliminada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdCargo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req015>(entity =>
            {
                entity.HasKey(e => e.IdAdjunto);

                entity.ToTable("REQ015");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_REQ015_1");

                entity.HasIndex(e => new { e.IdRequerimiento, e.FechaArchivo })
                    .HasName("IX_REQ015");

                entity.Property(e => e.IdAdjunto).ValueGeneratedNever();

                entity.Property(e => e.FechaArchivo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreArchivo).IsRequired();

                entity.Property(e => e.RutaArchivo).IsRequired();

                entity.Property(e => e.RutaServidor).IsRequired();
            });

            modelBuilder.Entity<Req016>(entity =>
            {
                entity.HasKey(e => new { e.IdRequerimiento, e.IdUsuario, e.Estatus, e.Secuencia });

                entity.ToTable("REQ016");

                entity.Property(e => e.IdUsuario)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Estatus).HasMaxLength(3);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Req017>(entity =>
            {
                entity.HasKey(e => e.IdLog)
                    .HasName("PK_REQ017_1");

                entity.ToTable("REQ017");

                entity.HasIndex(e => new { e.IdRequerimiento, e.IdUsuario, e.Estatus, e.Secuencia })
                    .HasName("IX_REQ017");

                entity.Property(e => e.IdLog).ValueGeneratedNever();

                entity.Property(e => e.Estatus)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req018>(entity =>
            {
                entity.HasKey(e => e.IdTarea);

                entity.ToTable("REQ018");

                entity.HasIndex(e => e.IdRequerimiento)
                    .HasName("IX_REQ018");

                entity.HasIndex(e => e.IdResponsable)
                    .HasName("IX_REQ018_3");

                entity.HasIndex(e => e.IdSubCategoria)
                    .HasName("IX_REQ018_2");

                entity.HasIndex(e => new { e.FechaRegistro, e.IdTarea, e.IdResponsable, e.Usuario })
                    .HasName("IX_REQ018_1");

                entity.Property(e => e.IdTarea).ValueGeneratedNever();

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Hpsm)
                    .IsRequired()
                    .HasColumnName("HPSM")
                    .HasMaxLength(25)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdCargo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Script)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req019>(entity =>
            {
                entity.HasKey(e => e.IdDetalleTarea);

                entity.ToTable("REQ019");

                entity.HasIndex(e => new { e.IdDetalleTarea, e.IdTarea, e.IdEstacion, e.FechaSalida })
                    .HasName("IX_REQ019");

                entity.Property(e => e.IdDetalleTarea).ValueGeneratedNever();

                entity.Property(e => e.FechaEntrada).HasColumnType("datetime");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.IdResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Req020>(entity =>
            {
                entity.HasKey(e => e.IdEstacion);

                entity.ToTable("REQ020");

                entity.HasIndex(e => e.FlagAprobacion)
                    .HasName("IX_REQ020");

                entity.HasIndex(e => e.FlagCancelado)
                    .HasName("IX_REQ020_1");

                entity.HasIndex(e => e.FlagFechaEntrega)
                    .HasName("IX_REQ020_2");

                entity.HasIndex(e => e.FlagHpsm)
                    .HasName("IX_REQ020_3");

                entity.HasIndex(e => e.FlagScript)
                    .HasName("IX_REQ020_4");

                entity.HasIndex(e => e.FlagTerminado)
                    .HasName("IX_REQ020_5");

                entity.Property(e => e.Abreviado)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagAprobacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagCancelado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagFechaEntrega)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagHpsm)
                    .IsRequired()
                    .HasColumnName("FlagHPSM")
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagScript)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagTerminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req021>(entity =>
            {
                entity.HasKey(e => e.IdRutaEstacion);

                entity.ToTable("REQ021");

                entity.HasIndex(e => new { e.IdRuta, e.IdEstacion, e.Secuencia })
                    .HasName("IX_REQ021");

                entity.Property(e => e.IdRutaEstacion).ValueGeneratedNever();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req022>(entity =>
            {
                entity.HasKey(e => e.IdLimiteRequerimientosUsuario);

                entity.ToTable("REQ022");

                entity.HasIndex(e => e.IdUsuario)
                    .HasName("IX_REQ022");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req023>(entity =>
            {
                entity.HasKey(e => e.IdDelegacion);

                entity.ToTable("REQ023");

                entity.HasIndex(e => new { e.IdNuevoResponsable, e.FechaDesde, e.FechaHasta })
                    .HasName("IX_REQ023");

                entity.Property(e => e.IdDelegacion).ValueGeneratedNever();

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdNuevoResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req024>(entity =>
            {
                entity.HasKey(e => e.IdBackLog);

                entity.ToTable("REQ024");

                entity.HasIndex(e => e.FlagCulminado)
                    .HasName("IX_REQ024_1");

                entity.HasIndex(e => new { e.IdUsuario, e.IdRequerimiento, e.Secuencia })
                    .HasName("IX_REQ024");

                entity.Property(e => e.IdBackLog).ValueGeneratedNever();

                entity.Property(e => e.FlagCulminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Req025>(entity =>
            {
                entity.HasKey(e => e.IdSubDetalleTarea);

                entity.ToTable("REQ025");

                entity.HasIndex(e => new { e.FechaEntrada, e.FechaSalida })
                    .HasName("IX_REQ025_1");

                entity.HasIndex(e => new { e.IdTarea, e.IdResponsable, e.IdEstacion, e.IdEstatus })
                    .HasName("IX_REQ025");

                entity.Property(e => e.IdSubDetalleTarea).ValueGeneratedNever();

                entity.Property(e => e.FechaEntrada).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.IdResponsable)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Req026>(entity =>
            {
                entity.HasKey(e => e.IdDetalleAprobacion);

                entity.ToTable("REQ026");

                entity.HasIndex(e => new { e.IdRequerimiento, e.IdUsuario, e.Estatus })
                    .HasName("IX_REQ026");

                entity.Property(e => e.IdDetalleAprobacion).ValueGeneratedNever();

                entity.Property(e => e.Estatus)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.FechaEntrada)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Req027>(entity =>
            {
                entity.HasKey(e => new { e.IdTarea, e.Secuencia, e.IdEstacion })
                    .HasName("PK_REQ027_1");

                entity.ToTable("REQ027");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Req029>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REQ029");

                entity.HasIndex(e => e.IdLogObsReq)
                    .HasName("IX_REQ029")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRequerimiento, e.FlagCorreo, e.FlagEnviado })
                    .HasName("IX_REQ029_1");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.FlagCorreo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEnviado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdLogObsReq).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Req030>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REQ030");

                entity.HasIndex(e => e.IdLogObsTarea)
                    .HasName("IX_REQ030")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdTarea, e.FlagCorreo, e.FlagEnviado })
                    .HasName("IX_REQ030_1");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.FlagCorreo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEnviado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdLogObsTarea).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Requisicion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("requisicion");

                entity.Property(e => e.Articulo)
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Cia)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion1)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion2)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.FechaDeColocacionOc).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaDeRecepcionPlanta).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaEntregaSolicitada).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaOrdenDeCompra).HasColumnType("smalldatetime");

                entity.Property(e => e.NombreComprador)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.NombreProveedor)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Pdlocn)
                    .HasColumnName("PDLOCN")
                    .HasMaxLength(20)
                    .IsFixedLength();

                entity.Property(e => e.Pdlotn)
                    .HasColumnName("PDLOTN")
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Prlocn)
                    .HasColumnName("PRLOCN")
                    .HasMaxLength(20)
                    .IsFixedLength();

                entity.Property(e => e.Prlotn)
                    .HasColumnName("PRLOTN")
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Requisicion1)
                    .HasColumnName("Requisicion")
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.TipoOc)
                    .IsRequired()
                    .HasColumnName("TipoOC")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.TipoRequisicion)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.UnidaDeMedida)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Unitario).HasColumnName("unitario");
            });

            modelBuilder.Entity<RetenerProductoPrecio>(entity =>
            {
                entity.HasKey(e => e.Producto);

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Retislr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("retislr");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoDocRet).HasMaxLength(255);

                entity.Property(e => e.TipodeRet).HasMaxLength(255);

                entity.Property(e => e.Transaccion).HasMaxLength(255);
            });

            modelBuilder.Entity<RutaPredeterminada>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RUTA_PREDETERMINADA");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Secuencia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SECUENCIA");

                entity.Property(e => e.DiasPredeterminados)
                    .HasColumnName("DIAS_PREDETERMINADOS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstacion)
                    .HasColumnName("ID_ESTACION")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdRuta)
                    .HasColumnName("ID_RUTA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Secuencia1)
                    .HasColumnName("SECUENCIA")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<SegModulo>(entity =>
            {
                entity.HasKey(e => e.IdModulo);

                entity.Property(e => e.IdModulo).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.FlagPortafolioReportes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Icono)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IconoMenu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdTipoReporte).HasDefaultValueSql("((0))");

                entity.Property(e => e.LinkModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreReporte)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RutaReporte)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ServidorReporte).HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoLlamada)
                    .HasColumnName("TipoLLamada")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<SegPrograma>(entity =>
            {
                entity.HasKey(e => e.IdPrograma);

                entity.Property(e => e.IdPrograma).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.FlagRequerimiento).HasMaxLength(1);

                entity.Property(e => e.Link)
                    .HasColumnName("link")
                    .HasMaxLength(200);

                entity.Property(e => e.NombrePrograma)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoPrograma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SegRol>(entity =>
            {
                entity.HasKey(e => e.IdRol);

                entity.Property(e => e.IdRol).ValueGeneratedNever();

                entity.Property(e => e.AbreviadoRol)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DescripcionRol).IsRequired();

                entity.Property(e => e.NombreRol)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SegRolModulo>(entity =>
            {
                entity.HasKey(e => e.IdRolModulo);

                entity.HasIndex(e => new { e.IdRol, e.IdModulo })
                    .HasName("IX_SegRolModulo")
                    .IsUnique();

                entity.Property(e => e.IdRolModulo).ValueGeneratedNever();
            });

            modelBuilder.Entity<SegTicket>(entity =>
            {
                entity.HasKey(e => e.TicketSha1);

                entity.Property(e => e.TicketSha1).HasMaxLength(100);

                entity.Property(e => e.FechaHoraCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaHoraGetIp).HasColumnType("datetime");

                entity.Property(e => e.FechaHoraUso).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IpUsuario)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SegUsuario>(entity =>
            {
                entity.HasKey(e => e.IdUsuario)
                    .HasName("PK_Usuario");

                entity.HasIndex(e => e.Email)
                    .HasName("IX_Email");

                entity.HasIndex(e => e.Usuario)
                    .HasName("IX_SegUsuario_1")
                    .IsUnique();

                entity.Property(e => e.IdUsuario).ValueGeneratedNever();

                entity.Property(e => e.ClasificacionUsuario)
                    .IsRequired()
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.EquipoImei1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCambio).HasColumnType("datetime");

                entity.Property(e => e.Ficha)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Imei1)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei2)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei3)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SegUsuarioNew>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ClasificacionUsuario)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.EquipoImei1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCambio).HasColumnType("smalldatetime");

                entity.Property(e => e.Ficha)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlagDisenador)
                    .HasColumnName("Flag_Disenador")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Imei1)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei2)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei3)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SegUsuarioRol>(entity =>
            {
                entity.HasKey(e => e.IdUsuarioRol);

                entity.HasIndex(e => new { e.IdUsuario, e.IdRol })
                    .HasName("IX_SegUsuarioRol")
                    .IsUnique();

                entity.Property(e => e.IdUsuarioRol).ValueGeneratedNever();

                entity.HasOne(d => d.IdRolNavigation)
                    .WithMany(p => p.SegUsuarioRol)
                    .HasForeignKey(d => d.IdRol)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SegUsuarioRol_SegRol");

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.SegUsuarioRol)
                    .HasForeignKey(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SegUsuarioRol_SegUsuario1");
            });

            modelBuilder.Entity<SmsCorporativo>(entity =>
            {
                entity.ToTable("SMS_CORPORATIVO");

                entity.HasIndex(e => e.Depurar)
                    .HasName("IX_SMS_CORPORATIVO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bat)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Depurar)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Parametros)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Ruta)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsGenerico>(entity =>
            {
                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Mensaje).HasMaxLength(140);
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("STATUS");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_Statusorden");

                entity.Property(e => e.An8Proveedor)
                    .HasColumnName("AN8_PROVEEDOR")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.Diferencia)
                    .HasColumnName("DIFERENCIA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEstimada)
                    .HasColumnName("FECHA_ESTIMADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFinalizacion)
                    .HasColumnName("FECHA_FINALIZACION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaInicio)
                    .HasColumnName("FECHA_INICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaProgramada)
                    .HasColumnName("FECHA_PROGRAMADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstacion)
                    .HasColumnName("ID_ESTACION")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdRuta)
                    .HasColumnName("ID_RUTA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NomProveedor)
                    .HasColumnName("NOM_PROVEEDOR")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Observacion)
                    .HasColumnName("OBSERVACION")
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Prioridad)
                    .HasColumnName("PRIORIDAD")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StatusDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("STATUS_DETALLE");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_Status_Detalleorden");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEstimada)
                    .HasColumnName("FECHA_ESTIMADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFinalizacion)
                    .HasColumnName("FECHA_FINALIZACION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaInicio)
                    .HasColumnName("FECHA_INICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdEstacionDesde)
                    .HasColumnName("ID_ESTACION_DESDE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdEstacionHasta)
                    .HasColumnName("ID_ESTACION_HASTA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<SubCategoriaEmbarquesVentas>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_SubCategoriaEmbarquesVentas");

                entity.Property(e => e.EmbarquesBolivares).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EmbarquesDol)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmbarquesKilos).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EmbarquesPie2).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaBolivares).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.VentaKilos).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentasPie2).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Sysfile>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("SYSFILE_INDEX00");

                entity.ToTable("SYSFILE");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AñoGeneraPdfFactura).HasDefaultValueSql("((0))");

                entity.Property(e => e.AñoGeneraPdfRemision).HasDefaultValueSql("((0))");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.CierreAnoCpo).HasColumnName("CIERRE_ANO_CPO");

                entity.Property(e => e.CierreAnoNim).HasColumnName("CIERRE_ANO_NIM");

                entity.Property(e => e.CierreFactura)
                    .HasColumnName("CIERRE_FACTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CierreMesCpo).HasColumnName("CIERRE_MES_CPO");

                entity.Property(e => e.CierreMesNim).HasColumnName("CIERRE_MES_NIM");

                entity.Property(e => e.CompanyName)
                    .HasColumnName("COMPANY_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CorreoAdministradorForecast).HasMaxLength(200);

                entity.Property(e => e.CorreoCopiaIc)
                    .HasColumnName("CORREO_COPIA_IC")
                    .HasMaxLength(250);

                entity.Property(e => e.CorreoDestinoIc)
                    .HasColumnName("CORREO_DESTINO_IC")
                    .HasMaxLength(250);

                entity.Property(e => e.DiaCerradoCpo)
                    .HasColumnName("DIA_CERRADO_CPO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DiaCerradoNim)
                    .HasColumnName("DIA_CERRADO_NIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.DiaGeneraPdfFactura).HasDefaultValueSql("((0))");

                entity.Property(e => e.DiaGeneraPdfRemision).HasDefaultValueSql("((0))");

                entity.Property(e => e.Diasvigenciaclave)
                    .HasColumnName("DIASVIGENCIACLAVE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fechaobsolescencia)
                    .HasColumnName("FECHAOBSOLESCENCIA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagReglaPesoDimensionPrelista)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Hoy)
                    .HasColumnName("HOY")
                    .HasColumnType("datetime")
                    .HasComputedColumnSql("(getdate())");

                entity.Property(e => e.ImprimeTituloMoneda).HasDefaultValueSql("((0))");

                entity.Property(e => e.LargoPagina).HasColumnName("LARGO_PAGINA");

                entity.Property(e => e.MesGeneraPdfFactura).HasDefaultValueSql("((0))");

                entity.Property(e => e.MesGeneraPdfRemision).HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGananciaCadenaDistribucion).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PorcGananciaDeLey).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PorcGeneralGanancia).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.RutaArchivosAdjuntos).HasMaxLength(250);

                entity.Property(e => e.RutaServidorAdjuntos).HasMaxLength(250);

                entity.Property(e => e.SaltoPagina).HasColumnName("SALTO_PAGINA");

                entity.Property(e => e.ServerVinculadoJde).HasMaxLength(100);

                entity.Property(e => e.ServerVinculadoOd).HasMaxLength(100);

                entity.Property(e => e.Sobretiro)
                    .HasColumnName("SOBRETIRO")
                    .HasColumnType("numeric(4, 2)");

                entity.Property(e => e.TituloMoneda)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UltComprobante).HasColumnName("ULT_COMPROBANTE");

                entity.Property(e => e.UltimoCepPrint).HasColumnType("numeric(16, 0)");

                entity.Property(e => e.UsuarioForecastNomina)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValidarCredito).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TabulaDespEtq>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MtsLineales)
                    .HasColumnName("Mts_Lineales")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PulgLineales)
                    .HasColumnName("Pulg_Lineales")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabulaDespMc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TabulaDespMC");

                entity.Property(e => e.Factor0C).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Factor1C).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Factor2C).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Factor3C).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Factor4C).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MillarDesde).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.MillarHasta).HasColumnType("decimal(9, 2)");
            });

            modelBuilder.Entity<Tareas>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.HoraFin).HasColumnType("datetime");

                entity.Property(e => e.HoraInicio).HasColumnType("datetime");

                entity.Property(e => e.IdTarea).ValueGeneratedOnAdd();

                entity.Property(e => e.Maquina)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombrePrograma)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NombreTarea)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.RutaTarea)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.UltimaEjecucion).HasColumnType("datetime");

                entity.Property(e => e.UsuarioRed)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbEbtc01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTC01");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PorcAprob1P).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAprob2P).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RollosFin)
                    .HasColumnName("Rollos_Fin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RollosIni)
                    .HasColumnName("Rollos_Ini")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbtc02>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTC02");

                entity.Property(e => e.FormMedBasFin)
                    .HasColumnName("FormMedBas_Fin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FormMedBasIni)
                    .HasColumnName("FormMedBas_Ini")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MillaresRedondeados).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbte01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTE01");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MillarFin)
                    .HasColumnName("Millar_Fin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MillarIni)
                    .HasColumnName("Millar_Ini")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAprob).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbti01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTI01");

                entity.Property(e => e.FormasMedBasFin)
                    .HasColumnName("FormasMedBas_Fin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FormasMedBasIni)
                    .HasColumnName("FormasMedBas_Ini")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Ppm)
                    .HasColumnName("PPM")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbti02>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTI02");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MillarFin)
                    .HasColumnName("Millar_Fin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MillarIni)
                    .HasColumnName("Millar_Ini")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAprob).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbti03>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTI03");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Porcentaje).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbEbtp01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbEBTP01");

                entity.Property(e => e.CodigoPosForm).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<TbExcStkJt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbExcStkJT");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TbFleteOrdenes>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbFleteOrdenes");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Orden).HasColumnType("decimal(10, 0)");
            });

            modelBuilder.Entity<TbMcalto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbMCAlto");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MargenAprobado).HasColumnType("numeric(5, 0)");

                entity.Property(e => e.Orden).HasColumnType("numeric(12, 0)");

                entity.Property(e => e.PorcMc)
                    .HasColumnName("Porc_MC")
                    .HasColumnType("numeric(10, 2)");

                entity.Property(e => e.Procesado).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<TbParMccr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbParMCCR");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P10).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P11).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P12).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P13).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P14).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P15).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P16).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P17).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P18).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P19).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P20).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P21).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P3).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P4).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P5).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P6).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P7).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P8).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P9).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp11)
                    .HasColumnName("RP11")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp12)
                    .HasColumnName("RP12")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp13)
                    .HasColumnName("RP13")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp17)
                    .HasColumnName("RP17")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp18)
                    .HasColumnName("RP18")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp19)
                    .HasColumnName("RP19")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp20)
                    .HasColumnName("RP20")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp21)
                    .HasColumnName("RP21")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbParMcet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbParMCET");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P10).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P3).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P4).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P5).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P6).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P7).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P8).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P9).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp10)
                    .HasColumnName("RP10")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp7)
                    .HasColumnName("RP7")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp8)
                    .HasColumnName("RP8")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbParMcgen>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbParMCGEN");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P1).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.P2).HasColumnType("decimal(9, 2)");

                entity.Property(e => e.P3).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<TbParMcim>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbParMCIM");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P3).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P4).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P5).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P6).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp1)
                    .HasColumnName("RP1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp2)
                    .HasColumnName("RP2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp6)
                    .HasColumnName("RP6")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbParMcw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbParMCW");

                entity.Property(e => e.Id).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.P1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P3).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P4).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.P5).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp3)
                    .HasColumnName("RP3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rp5)
                    .HasColumnName("RP5")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TbRptstk01>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbRPTSTK01");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbRptstk01web>(entity =>
            {
                entity.ToTable("tbRPTSTK01Web");

                entity.HasIndex(e => e.Codigo)
                    .HasName("IX_tbRPTSTK01Web")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.B11).HasDefaultValueSql("((0))");

                entity.Property(e => e.B22).HasDefaultValueSql("((0))");

                entity.Property(e => e.B27).HasDefaultValueSql("((0))");

                entity.Property(e => e.CajasProgramadas).HasDefaultValueSql("((0))");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Disponible).HasDefaultValueSql("((0))");

                entity.Property(e => e.Existencia).HasDefaultValueSql("((0))");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TbRptstk02>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbRPTSTK02");

                entity.Property(e => e.BsMcFinan)
                    .HasColumnName("bs_mc_finan")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CajasProgramadas).HasColumnName("Cajas_Programadas");

                entity.Property(e => e.CantidadXCaja).HasColumnName("Cantidad_X_Caja");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("Cod_Producto")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DescProducto)
                    .HasColumnName("Desc_Producto")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExistActual)
                    .HasColumnName("Exist_Actual")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaProg)
                    .HasColumnName("Fecha_Prog")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pendiente).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnName("porc_mc_finan")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("Precio_Venta")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Programado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotVenta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TblPruebaR1>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ColumnaDos).HasMaxLength(50);

                entity.Property(e => e.ColumnaUno).HasMaxLength(50);
            });

            modelBuilder.Entity<TblPruebaR1dos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TblPruebaR1Dos");

                entity.Property(e => e.ColumnaDos).HasMaxLength(50);

                entity.Property(e => e.ColumnaUno).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TblPruebaR1uno>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TblPruebaR1Uno");

                entity.Property(e => e.ColumnaDos).HasMaxLength(50);

                entity.Property(e => e.ColumnaUno).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TblR1>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ColumnaUno).HasMaxLength(50);
            });

            modelBuilder.Entity<TempDepurar>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Base).HasMaxLength(30);

                entity.Property(e => e.Campo).HasMaxLength(30);

                entity.Property(e => e.Eliminar).HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreTabla).HasMaxLength(50);

                entity.Property(e => e.Registros)
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TemporalTexto>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Texto).HasMaxLength(211);
            });

            modelBuilder.Entity<TemporalTextoGl>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Texto).HasMaxLength(358);
            });

            modelBuilder.Entity<UsuarioActivos>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DisplayName).HasMaxLength(50);

                entity.Property(e => e.UserLogonName).HasMaxLength(50);
            });

            modelBuilder.Entity<UsuarioMigracionActiveDirectory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("usuarioMigracionActiveDirectory");

                entity.Property(e => e.Db)
                    .HasColumnName("db")
                    .HasMaxLength(150);

                entity.Property(e => e.DbDatareader)
                    .HasColumnName("db_datareader")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DbDatawriter)
                    .HasColumnName("db_datawriter")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usuario).HasMaxLength(150);
            });

            modelBuilder.Entity<UsuariosMigrar>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Actual).HasMaxLength(50);

                entity.Property(e => e.ActualDominio).HasMaxLength(50);

                entity.Property(e => e.Crear).HasMaxLength(1);

                entity.Property(e => e.Departamento).HasMaxLength(50);

                entity.Property(e => e.Estatus).HasMaxLength(50);

                entity.Property(e => e.Grupo).HasMaxLength(50);

                entity.Property(e => e.Id).HasMaxLength(50);

                entity.Property(e => e.Nombre).HasMaxLength(50);

                entity.Property(e => e.Nuevo).HasMaxLength(50);
            });

            modelBuilder.Entity<UsuariosdeDominio>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.Usuario)
                    .HasName("IX_UsuariosdeDominioDesactivados");

                entity.Property(e => e.Estatus)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('Activos')");

                entity.Property(e => e.NombreUsuario).HasMaxLength(200);

                entity.Property(e => e.Usuario).HasMaxLength(100);
            });

            modelBuilder.Entity<Usuariosenviar>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Apellido).HasMaxLength(50);

                entity.Property(e => e.Correo)
                    .HasColumnName("correo")
                    .HasMaxLength(250);

                entity.Property(e => e.Nombre).HasMaxLength(50);

                entity.Property(e => e.Usuario)
                    .HasColumnName("usuario")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VBacklogPlanta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BACKLOG_PLANTA");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.CantProg).HasColumnName("CANT_PROG");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ExistActual).HasColumnName("EXIST_ACTUAL");
            });

            modelBuilder.Entity<VBacklogWtmy091>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BACKLOG_WTMY091");

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.CantPedida).HasColumnName("CANT_PEDIDA");

                entity.Property(e => e.CantProg).HasColumnName("CANT_PROG");

                entity.Property(e => e.CodProducto)
                    .IsRequired()
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Mes).HasColumnName("MES");
            });

            modelBuilder.Entity<VCalendarioEntrega>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CalendarioEntrega");

                entity.Property(e => e.CodOficina).HasColumnName("Cod_Oficina");

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");

                entity.Property(e => e.NomOficina)
                    .IsRequired()
                    .HasColumnName("NOM_OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Nombretitulo)
                    .HasColumnName("NOMBRETITULO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VCalendarioEntregaVigente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CalendarioEntrega_Vigente");

                entity.Property(e => e.CodOficina).HasColumnName("Cod_Oficina");

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");

                entity.Property(e => e.NomOficina)
                    .IsRequired()
                    .HasColumnName("NOM_OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Nombretitulo)
                    .HasColumnName("NOMBRETITULO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VClientes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CLIENTES");

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccion3)
                    .HasColumnName("DIRECCION3")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccionc1)
                    .HasColumnName("DIRECCIONC1")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccionc2)
                    .HasColumnName("DIRECCIONC2")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccionc3)
                    .HasColumnName("DIRECCIONC3")
                    .HasMaxLength(80);

                entity.Property(e => e.Ficha)
                    .HasColumnName("FICHA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("RAZON_SOCIAL")
                    .HasMaxLength(80);

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("TIPO")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VClientesVsUltimaCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ClientesVsUltimaCompra");

                entity.Property(e => e.CodJde).HasColumnName("cod_jde");

                entity.Property(e => e.CodJdePadre).HasColumnName("Cod_jdePadre");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasColumnName("FLAG")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Flaginactivopadre)
                    .HasColumnName("FLAGINACTIVOPADRE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Meses).HasColumnName("MESES");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Saldo).HasColumnName("SALDO");

                entity.Property(e => e.Saldopadre).HasColumnName("SALDOPADRE");

                entity.Property(e => e.Ultimacompra)
                    .HasColumnName("ULTIMACOMPRA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Vendedor1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VCneCredenciales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CNE_Credenciales");

                entity.Property(e => e.CentroCapacitacion).HasMaxLength(255);

                entity.Property(e => e.Estado).HasMaxLength(255);

                entity.Property(e => e.MensajeCentroCapa).HasMaxLength(100);

                entity.Property(e => e.Municipio).HasMaxLength(255);

                entity.Property(e => e.Parroquia).HasMaxLength(255);
            });

            modelBuilder.Entity<VCneSeparadores>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CNE_SEPARADORES");

                entity.Property(e => e.CentroCapa).HasMaxLength(255);

                entity.Property(e => e.Estado).HasMaxLength(80);

                entity.Property(e => e.Municipio).HasMaxLength(255);

                entity.Property(e => e.Parroquia).HasMaxLength(255);
            });

            modelBuilder.Entity<VCompradores>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_Compradores");

                entity.Property(e => e.Comprador)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VConsultaExistencia>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CONSULTA_EXISTENCIA");

                entity.Property(e => e.Backlog)
                    .HasColumnName("BACKLOG")
                    .HasColumnType("decimal(38, 2)");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Disponible)
                    .HasColumnName("DISPONIBLE")
                    .HasColumnType("decimal(38, 2)");

                entity.Property(e => e.Medida)
                    .IsRequired()
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.PtoReorden).HasColumnName("PTO_REORDEN");

                entity.Property(e => e.Saldo).HasColumnName("SALDO");
            });

            modelBuilder.Entity<VConsultaGeneralOrdenes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ConsultaGeneralOrdenes");

                entity.Property(e => e.Cliente).HasColumnType("decimal(6, 0)");

                entity.Property(e => e.CondPago).HasColumnType("decimal(5, 0)");

                entity.Property(e => e.Estacion).HasMaxLength(400);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Nombre).HasMaxLength(80);

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Oficina).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Orden).HasColumnType("numeric(19, 0)");

                entity.Property(e => e.Venta).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<VConsultaJob>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ConsultaJob");

                entity.Property(e => e.CodigoOficina)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CondicionPago)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion1)
                    .HasColumnName("ESTACION1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion2)
                    .HasColumnName("ESTACION2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion3)
                    .HasColumnName("ESTACION3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion4)
                    .HasColumnName("ESTACION4")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion5)
                    .HasColumnName("ESTACION5")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion6)
                    .HasColumnName("ESTACION6")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion7)
                    .HasColumnName("ESTACION7")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion8)
                    .HasColumnName("ESTACION8")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EstatusOrden)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaArchivo).HasColumnType("datetime");

                entity.Property(e => e.FechaOrden).HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida).HasColumnType("datetime");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Pmc)
                    .HasColumnName("PMC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.ValorLista).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<VControl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CONTROL");

                entity.Property(e => e.Control)
                    .HasColumnName("CONTROL")
                    .HasColumnType("decimal(19, 0)");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VCotizacionDetalleAñoMesVendedorEstatus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CotizacionDetalleAñoMesVendedorEstatus");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.Estatus)
                    .HasColumnName("estatus")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OficinaId)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SupervisorId)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TotalPropuesta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("vendedor")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<VCotizaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_Cotizaciones");

                entity.Property(e => e.Cliente).HasColumnType("decimal(6, 0)");

                entity.Property(e => e.CondPago).HasColumnType("decimal(5, 0)");

                entity.Property(e => e.Estacion).HasMaxLength(400);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Nombre).HasMaxLength(80);

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Oficina).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Orden).HasColumnType("numeric(19, 0)");

                entity.Property(e => e.Venta).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<VCotizacionesGanadasAñoMesVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CotizacionesGanadasAñoMesVendedor");

                entity.Property(e => e.TotalPropuesta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("vendedor")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<VCotizacionesPendientesDeAprobacionDeCredito>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CotizacionesPendientesDeAprobacionDeCredito");

                entity.Property(e => e.Cliente).HasColumnType("decimal(6, 0)");

                entity.Property(e => e.CondPago).HasColumnType("decimal(5, 0)");

                entity.Property(e => e.Estacion).HasMaxLength(400);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Nombre).HasMaxLength(80);

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Oficina).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Orden).HasColumnType("numeric(19, 0)");

                entity.Property(e => e.Venta).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<VCotizadoEnEspera>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CotizadoEnEspera");

                entity.Property(e => e.TotalPropuesta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("vendedor")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<VCuotaVentas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CUOTA_VENTAS");

                entity.Property(e => e.AnoContable)
                    .HasColumnName("ANO_CONTABLE")
                    .HasColumnType("decimal(5, 0)");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaProductoMayor)
                    .HasColumnName("CUOTA_PRODUCTO_MAYOR")
                    .HasColumnType("decimal(38, 0)");

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VDetalleCompras>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_DetalleCompras");

                entity.Property(e => e.Cc)
                    .HasColumnName("CC")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.CescripcionCentrodeCosto)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.Comprador)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion1)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion2)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.FechaSolicitada)
                    .HasColumnName("fechaSolicitada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaSolicitadaEntrega)
                    .HasColumnName("fechaSolicitadaEntrega")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Pddcto)
                    .IsRequired()
                    .HasColumnName("PDDCTO")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Pddoco).HasColumnName("PDDOCO");

                entity.Property(e => e.Pdkcoo)
                    .IsRequired()
                    .HasColumnName("PDKCOO")
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Pdlnid).HasColumnName("PDLNID");

                entity.Property(e => e.Pdocto)
                    .HasColumnName("PDOCTO")
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Pdogno).HasColumnName("PDOGNO");

                entity.Property(e => e.Pdokco)
                    .HasColumnName("PDOKCO")
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.Pdoorn)
                    .HasColumnName("PDOORN")
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.Proveedor)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Requisitor)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Ro)
                    .IsRequired()
                    .HasColumnName("RO")
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VDiasCriticoPorEstacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_DiasCriticoPorEstacion", "userweb");

                entity.Property(e => e.Estacion)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VDiccionariodedatosmooreve>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_DICCIONARIODEDATOSMOOREVE");

                entity.Property(e => e.Colid).HasColumnName("colid");

                entity.Property(e => e.Field).HasMaxLength(128);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Length).HasColumnName("length");

                entity.Property(e => e.Modulo).HasMaxLength(3);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(128);

                entity.Property(e => e.Smallid).HasColumnName("smallid");

                entity.Property(e => e.TipoTabla)
                    .IsRequired()
                    .HasColumnName("tipo_tabla")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Type).HasMaxLength(128);

                entity.Property(e => e.Value)
                    .HasColumnName("value")
                    .HasColumnType("sql_variant");

                entity.Property(e => e.Xtype).HasColumnName("xtype");
            });

            modelBuilder.Entity<VDiccionariomooreve>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_DICCIONARIOMOOREVE");

                entity.Property(e => e.Basededatos)
                    .IsRequired()
                    .HasColumnName("basededatos")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Field).HasMaxLength(128);

                entity.Property(e => e.MaxLength).HasColumnName("max_length");

                entity.Property(e => e.MinorId).HasColumnName("minor_id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(128);

                entity.Property(e => e.ObjectId).HasColumnName("object_id");

                entity.Property(e => e.Precision).HasColumnName("precision");

                entity.Property(e => e.Scale).HasColumnName("scale");

                entity.Property(e => e.SystemTypeId).HasColumnName("system_type_id");

                entity.Property(e => e.TipoTabla)
                    .HasColumnName("tipo_tabla")
                    .HasMaxLength(60);

                entity.Property(e => e.Type).HasMaxLength(128);

                entity.Property(e => e.Value)
                    .HasColumnName("value")
                    .HasColumnType("sql_variant");
            });

            modelBuilder.Entity<VEmbarque>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_EMBARQUE");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Docafecta).HasColumnName("DOCAFECTA");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Job).HasColumnName("JOB");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Venta)
                    .HasColumnName("VENTA")
                    .HasColumnType("decimal(20, 4)");
            });

            modelBuilder.Entity<VEmbarquesEnLinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_EmbarquesEnLinea");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.Articulo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.BsMc)
                    .HasColumnName("BS_MC")
                    .HasColumnType("decimal(33, 10)");

                entity.Property(e => e.BsMcSc)
                    .HasColumnName("BS_MC_SC")
                    .HasColumnType("decimal(33, 10)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Conc)
                    .HasColumnName("CONC")
                    .HasColumnType("decimal(38, 15)");

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.DiaHabil).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaDocumento).HasColumnType("datetime");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("Nombre_oficina")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.TituloMayor)
                    .HasColumnName("TITULO_MAYOR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TituloMenor)
                    .HasColumnName("TITULO_MENOR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(20, 4)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(20, 4)");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VEmbarquesOnLine>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_EmbarquesOnLine");

                entity.Property(e => e.BsMc).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Subtitulo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Titulo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(20, 4)");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VEntradasSalidasMes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ENTRADAS_SALIDAS_MES");

                entity.Property(e => e.AñoContable).HasColumnName("AÑO_CONTABLE");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.EntradaMes).HasColumnName("ENTRADA_MES");

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.SalidaMes).HasColumnName("SALIDA_MES");
            });

            modelBuilder.Entity<VF0911>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_F0911");

                entity.Property(e => e.Batch)
                    .HasColumnName("batch")
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Cia)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Comprobante)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Cta)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.DescCta)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAsentado)
                    .HasColumnName("fechaAsentado")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaComp).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaSistema)
                    .HasColumnName("fechaSistema")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Monto)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.TipoComp)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasColumnName("usuario")
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VFromLogCotizador>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_FromLogCotizador");

                entity.Property(e => e.Basica)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Kilos).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Mcb)
                    .HasColumnName("MCB")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Mcf)
                    .HasColumnName("MCF")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.NombreCliente).HasMaxLength(80);

                entity.Property(e => e.NombreEstatus)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreOficina)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombreProbabilidad)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreSubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Papeles)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Tintas).HasMaxLength(500);

                entity.Property(e => e.TotalPropuesta).HasColumnType("decimal(31, 15)");
            });

            modelBuilder.Entity<VInformacionConsultas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_InformacionConsultas");

                entity.Property(e => e.AbreviadoEstatus)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Comentario).HasColumnType("text");

                entity.Property(e => e.CondPago)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Contacto1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion1)
                    .HasColumnName("ESTACION1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion2)
                    .HasColumnName("ESTACION2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion3)
                    .HasColumnName("ESTACION3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion4)
                    .HasColumnName("ESTACION4")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion5)
                    .HasColumnName("ESTACION5")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion6)
                    .HasColumnName("ESTACION6")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion7)
                    .HasColumnName("ESTACION7")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion8)
                    .HasColumnName("ESTACION8")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaArchivo)
                    .HasColumnName("FECHA_ARCHIVO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaOrden)
                    .HasColumnName("FECHA_ORDEN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FechaSolicitud).HasColumnType("datetime");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreEstatus)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreMotivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreOficina)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Pmc)
                    .HasColumnName("PMC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.TelCont1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Telefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto)
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<VInventarioEnTransito>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_INVENTARIO_EN_TRANSITO");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AlmacenEmisor).HasColumnName("ALMACEN_EMISOR");

                entity.Property(e => e.AlmacenReceptor).HasColumnName("ALMACEN_RECEPTOR");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoConfirma).HasColumnName("ANO_CONFIRMA");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CantidadRecibida).HasColumnName("CANTIDAD_RECIBIDA");

                entity.Property(e => e.CentroGastos).HasColumnName("CENTRO_GASTOS");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.Diferencia).HasColumnName("DIFERENCIA");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnName("FECHA_REGISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.MesConfirma).HasColumnName("MES_CONFIRMA");

                entity.Property(e => e.NoAfectaProm)
                    .HasColumnName("NO_AFECTA_PROM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NoOrden).HasColumnName("NO_ORDEN");

                entity.Property(e => e.NoPedido).HasColumnName("NO_PEDIDO");

                entity.Property(e => e.OrdProduccion).HasColumnName("ORD_PRODUCCION");

                entity.Property(e => e.OrdenCalculo)
                    .HasColumnName("ORDEN_CALCULO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OrdenCompra).HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Transmision)
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ValorCosto)
                    .HasColumnName("VALOR_COSTO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<VInventarioInicialBodegaProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_INVENTARIO_INICIAL_BODEGA_PRODUCTO");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Inicial).HasColumnName("INICIAL");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VInvetarioReconversion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_InvetarioReconversion");

                entity.Property(e => e.Basededatos)
                    .IsRequired()
                    .HasColumnName("basededatos")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Field).HasMaxLength(128);

                entity.Property(e => e.Length).HasColumnName("length");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(128);

                entity.Property(e => e.Type).HasMaxLength(128);

                entity.Property(e => e.Xprec).HasColumnName("xprec");

                entity.Property(e => e.Xscale).HasColumnName("xscale");

                entity.Property(e => e.Xtype).HasColumnName("xtype");
            });

            modelBuilder.Entity<VKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_KARDEX");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.CodResponsable).HasColumnName("COD_RESPONSABLE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.Entrada).HasColumnName("ENTRADA");

                entity.Property(e => e.FechaComprb)
                    .HasColumnName("FECHA_COMPRB")
                    .HasColumnType("datetime");

                entity.Property(e => e.InventarioInicial)
                    .HasColumnName("INVENTARIO_INICIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Define si es una transaccion de Inicializacion de Inventario (X)");

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("Descripcion de la transaccion de Inventario");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.Saldo).HasColumnName("SALDO");

                entity.Property(e => e.Salida).HasColumnName("SALIDA");
            });

            modelBuilder.Entity<VKardexBodegaProductoFecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_kardex_bodega_producto_fecha");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.CodResponsable).HasColumnName("COD_RESPONSABLE");

                entity.Property(e => e.Entrada).HasColumnName("entrada");

                entity.Property(e => e.FechaComprb)
                    .HasColumnName("FECHA_COMPRB")
                    .HasColumnType("datetime");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.Salida).HasColumnName("salida");
            });

            modelBuilder.Entity<VKardexS>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_KARDEX_S");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.CodResponsable).HasColumnName("COD_RESPONSABLE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.Entrada).HasColumnName("ENTRADA");

                entity.Property(e => e.FechaComprb)
                    .HasColumnName("FECHA_COMPRB")
                    .HasColumnType("datetime");

                entity.Property(e => e.InventarioInicial)
                    .HasColumnName("INVENTARIO_INICIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.Saldo).HasColumnName("SALDO");

                entity.Property(e => e.Salida).HasColumnName("SALIDA");
            });

            modelBuilder.Entity<VKilosRodados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_KilosRodados");

                entity.Property(e => e.BasicaDec)
                    .HasColumnName("BASICA_DEC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.CodCarbon)
                    .IsRequired()
                    .HasColumnName("COD_CARBON")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodPapel)
                    .IsRequired()
                    .HasColumnName("COD_PAPEL")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DescMaquina)
                    .IsRequired()
                    .HasColumnName("DESC_MAQUINA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FormasRodada).HasColumnName("FORMAS_RODADA");

                entity.Property(e => e.GramajeCarbon).HasColumnName("GRAMAJE_CARBON");

                entity.Property(e => e.GramajePap).HasColumnName("GRAMAJE_PAP");

                entity.Property(e => e.IdPapel)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Kilos1).HasColumnType("numeric(38, 6)");

                entity.Property(e => e.KilosConsumido)
                    .HasColumnName("KILOS_CONSUMIDO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.KilosFacturados)
                    .HasColumnName("kilosFacturados")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.OpuestaDec)
                    .HasColumnName("OPUESTA_DEC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.TipoMaquina).HasColumnName("TIPO_MAQUINA");
            });

            modelBuilder.Entity<VMovimientoMes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MOVIMIENTO_MES");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.MovMes).HasColumnName("MOV_MES");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VNotaEntrega>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_NOTA_ENTREGA");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.AlmacenReceptor).HasColumnName("ALMACEN_RECEPTOR");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantidadXCaja).HasColumnName("CANTIDAD_X_CAJA");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.CondPago).HasColumnName("COND_PAGO");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DEscripcionCondPago)
                    .IsRequired()
                    .HasColumnName("dESCRIPCION_COND_PAGO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionTipoIva)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION_TIPO_IVA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion3)
                    .HasColumnName("DIRECCION3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FormaImp)
                    .HasColumnName("FORMA_IMP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .IsRequired()
                    .HasColumnName("NOM_OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones).HasColumnType("text");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Porcentaje)
                    .HasColumnName("PORCENTAJE")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoIva).HasColumnName("TIPO_IVA");

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UnidadCosteo).HasColumnName("UNIDAD_COSTEO");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VNuevoPlanCompensacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_NuevoPlanCompensacion");

                entity.Property(e => e.BsComicionActual).HasColumnType("decimal(38, 2)");

                entity.Property(e => e.BsComision).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsDeduccion).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorcComision).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcComisionRegulada).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcDeduccion).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcMixProduct).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.TranCancela)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<VOrdenesInternasCpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OrdenesInternasCPO");

                entity.Property(e => e.Ano).HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(14, 2)");

                entity.Property(e => e.Mes).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Signo)
                    .HasColumnName("signo")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<VOrion00001>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00001");

                entity.Property(e => e.CodFormBasica)
                    .HasColumnName("Cod_Form_Basica")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFormOpuesta)
                    .HasColumnName("Cod_Form_Opuesta")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFormPt)
                    .HasColumnName("Cod_Form_Pt")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescLista)
                    .HasColumnName("Desc_Lista")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FecValidFin)
                    .HasColumnName("Fec_Valid_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecValidIni)
                    .HasColumnName("Fec_Valid_Ini")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<VOrion00002>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00002");

                entity.Property(e => e.CodFormato)
                    .HasColumnName("Cod_Formato")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoMedida).HasColumnName("Formato_Medida");

                entity.Property(e => e.Mascara)
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VOrion00003>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00003");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescFiVa)
                    .HasColumnName("DESC_FI_VA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("fecha_revision")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FijoVariable)
                    .HasColumnName("Fijo_Variable")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato1)
                    .HasColumnName("Nro_Formato1")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato2)
                    .HasColumnName("Nro_Formato2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato3)
                    .HasColumnName("Nro_Formato3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato4).HasColumnName("Nro_Formato4");

                entity.Property(e => e.NroFormato5).HasColumnName("Nro_Formato5");

                entity.Property(e => e.NroFormato6).HasColumnName("Nro_Formato6");

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("numeric(19, 4)");
            });

            modelBuilder.Entity<VOrion00004>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00004");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodGrupEvento)
                    .HasColumnName("Cod_Grup_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescEvento)
                    .HasColumnName("Desc_Evento")
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescFiVa)
                    .HasColumnName("DESC_FI_VA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("fecha_revision")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FijoVariable)
                    .HasColumnName("Fijo_Variable")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato1)
                    .HasColumnName("Nro_Formato1")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato2)
                    .HasColumnName("Nro_Formato2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato3)
                    .HasColumnName("Nro_Formato3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato4).HasColumnName("Nro_Formato4");

                entity.Property(e => e.NroFormato5).HasColumnName("Nro_Formato5");

                entity.Property(e => e.NroFormato6).HasColumnName("Nro_Formato6");

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("numeric(19, 4)");
            });

            modelBuilder.Entity<VOrion00005>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00005");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.NroFormato2)
                    .HasColumnName("Nro_Formato2")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VOrion00006>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00006");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescEventoAbrev)
                    .HasColumnName("Desc_Evento_Abrev")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VOrion00007>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00007");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodGrupEvento)
                    .HasColumnName("Cod_Grup_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescEvento)
                    .HasColumnName("Desc_Evento")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.DescEventoAbrev)
                    .HasColumnName("Desc_Evento_Abrev")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FecValidFin)
                    .HasColumnName("Fec_Valid_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecValidIni)
                    .HasColumnName("Fec_Valid_Ini")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<VOrion00008>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00008");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodGrupEvento)
                    .HasColumnName("Cod_Grup_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DescEvento)
                    .HasColumnName("Desc_Evento")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.DescEventoAbrev)
                    .HasColumnName("Desc_Evento_Abrev")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Expr1).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("fecha_revision")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("numeric(19, 4)");
            });

            modelBuilder.Entity<VOrion00009>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00009");

                entity.Property(e => e.AplicFijVar)
                    .HasColumnName("Aplic_Fij_Var")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCombinacion)
                    .HasColumnName("Cod_Combinacion")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CombinadaMatriz)
                    .HasColumnName("Combinada_Matriz")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Detalle)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroRegla)
                    .HasColumnName("Nro_Regla")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<VOrion00010>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00010");

                entity.Property(e => e.AplicFijVar)
                    .HasColumnName("Aplic_Fij_Var")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCombinacion)
                    .HasColumnName("Cod_Combinacion")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CombinadaMatriz)
                    .HasColumnName("Combinada_Matriz")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("decimal(38, 0)");
            });

            modelBuilder.Entity<VOrion00012>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00012");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_vendedor")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("Codigo_Producto")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VOrion00013>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00013");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("Codigo_Producto")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCot)
                    .HasColumnName("FECHA_COT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.NroCotizacion)
                    .IsRequired()
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14);
            });

            modelBuilder.Entity<VOrion00014>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00014");

                entity.Property(e => e.AnoActual)
                    .HasColumnName("ANO_ACTUAL")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CantPresent)
                    .HasColumnName("Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantidadMedida)
                    .HasColumnName("Cantidad_Medida")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CargoContacto)
                    .HasColumnName("CARGO_CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasColumnName("CLIENTE_NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodDescripCliente)
                    .HasColumnName("Cod_Descrip_Cliente")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodUnidad)
                    .HasColumnName("Cod_Unidad")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoTinta)
                    .HasColumnName("Codigo_Tinta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ConsecutivoCot)
                    .HasColumnName("CONSECUTIVO_COT")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ConsecutivoOrd)
                    .HasColumnName("CONSECUTIVO_ORD")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Contacto)
                    .HasColumnName("CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.CotizaDol)
                    .HasColumnName("Cotiza_Dol")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccionClienteEnt)
                    .HasColumnName("DIRECCION_CLIENTE_ENT")
                    .HasMaxLength(240);

                entity.Property(e => e.DireccionClienteFact)
                    .HasColumnName("DIRECCION_CLIENTE_FACT")
                    .HasMaxLength(240);

                entity.Property(e => e.EMail)
                    .HasColumnName("E_MAIL")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.EmailContacto)
                    .HasColumnName("EMAIL_CONTACTO")
                    .HasMaxLength(80);

                entity.Property(e => e.Encabezado)
                    .HasColumnName("ENCABEZADO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr1)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCot)
                    .HasColumnName("FECHA_COT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTasa)
                    .HasColumnName("FECHA_TASA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ganado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GerenteOficina)
                    .HasColumnName("GERENTE_OFICINA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GerenteRegion)
                    .HasColumnName("GERENTE_REGION")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdCalculo).HasColumnName("Id_Calculo");

                entity.Property(e => e.IdPropuesta).HasColumnName("Id_Propuesta");

                entity.Property(e => e.ListaTotal)
                    .HasColumnName("Lista_Total")
                    .HasColumnType("money");

                entity.Property(e => e.ListaTotalDol)
                    .HasColumnName("Lista_Total_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.ListaUnitario)
                    .HasColumnName("Lista_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.ListaUnitarioDol)
                    .HasColumnName("Lista_Unitario_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.MascBasica)
                    .HasColumnName("Masc_Basica")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascOpuesta)
                    .HasColumnName("Masc_Opuesta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MesActual)
                    .HasColumnName("MES_ACTUAL")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NoImprimir)
                    .HasColumnName("No_Imprimir")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomClienteEnt)
                    .HasColumnName("NOM_CLIENTE_ENT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartes).HasColumnName("Nro_Partes");

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.NroRegla)
                    .HasColumnName("Nro_Regla")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16);

                entity.Property(e => e.PrecTotPres)
                    .HasColumnName("Prec_Tot_Pres")
                    .HasColumnType("money");

                entity.Property(e => e.PrecTotPresDol)
                    .HasColumnName("Prec_Tot_Pres_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.PrecUnitPres)
                    .HasColumnName("Prec_Unit_Pres")
                    .HasColumnType("money");

                entity.Property(e => e.PrecUnitPresDol)
                    .HasColumnName("Prec_Unit_Pres_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.RifClienteEnt)
                    .HasColumnName("RIF_CLIENTE_ENT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.SinConversion)
                    .HasColumnName("Sin_Conversion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("TASA")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.TipoPago).HasColumnName("TIPO_PAGO");

                entity.Property(e => e.TotalCantPresent)
                    .HasColumnName("Total_Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValidCotiz)
                    .HasColumnName("VALID_COTIZ")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VentaTotal)
                    .HasColumnName("Venta_Total")
                    .HasColumnType("money");

                entity.Property(e => e.VentaTotalDol)
                    .HasColumnName("Venta_Total_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.VentaUnitario)
                    .HasColumnName("Venta_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.VentaUnitarioDol)
                    .HasColumnName("Venta_Unitario_Dol")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VOrion00015>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00015");

                entity.Property(e => e.CodEvento)
                    .IsRequired()
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("CODIGO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Combinacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Eliminado)
                    .IsRequired()
                    .HasColumnName("ELIMINADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ValUltParte)
                    .HasColumnName("Val_Ult_Parte")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VarOpaco)
                    .HasColumnName("Var_Opaco")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VarQuimico)
                    .HasColumnName("Var_Quimico")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<VOrion00020>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ORION00020");

                entity.Property(e => e.AnoActual)
                    .HasColumnName("ANO_ACTUAL")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CantPresent)
                    .HasColumnName("Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CantidadMedida)
                    .HasColumnName("Cantidad_Medida")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CargoContacto)
                    .HasColumnName("CARGO_CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasColumnName("CLIENTE_NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodDescripCliente)
                    .HasColumnName("Cod_Descrip_Cliente")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodUnidad)
                    .HasColumnName("Cod_Unidad")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoTinta)
                    .HasColumnName("Codigo_Tinta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ConsecutivoCot)
                    .HasColumnName("CONSECUTIVO_COT")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ConsecutivoOrd)
                    .HasColumnName("CONSECUTIVO_ORD")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Contacto)
                    .HasColumnName("CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.CotizaDol)
                    .HasColumnName("Cotiza_Dol")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccionClienteEnt)
                    .HasColumnName("DIRECCION_CLIENTE_ENT")
                    .HasMaxLength(240);

                entity.Property(e => e.DireccionClienteFact)
                    .HasColumnName("DIRECCION_CLIENTE_FACT")
                    .HasMaxLength(240);

                entity.Property(e => e.EMail)
                    .HasColumnName("E_MAIL")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.EmailContacto)
                    .HasColumnName("EMAIL_CONTACTO")
                    .HasMaxLength(80);

                entity.Property(e => e.Encabezado)
                    .HasColumnName("ENCABEZADO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr1)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCot)
                    .HasColumnName("FECHA_COT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTasa)
                    .HasColumnName("FECHA_TASA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ganado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GerenteOficina)
                    .HasColumnName("GERENTE_OFICINA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.GerenteRegion)
                    .HasColumnName("GERENTE_REGION")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdCalculo).HasColumnName("Id_Calculo");

                entity.Property(e => e.IdPropuesta).HasColumnName("Id_Propuesta");

                entity.Property(e => e.ListaTotal)
                    .HasColumnName("Lista_Total")
                    .HasColumnType("money");

                entity.Property(e => e.ListaTotalDol)
                    .HasColumnName("Lista_Total_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.ListaUnitario)
                    .HasColumnName("Lista_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.ListaUnitarioDol)
                    .HasColumnName("Lista_Unitario_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.MascBasica)
                    .HasColumnName("Masc_Basica")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascOpuesta)
                    .HasColumnName("Masc_Opuesta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MesActual)
                    .HasColumnName("MES_ACTUAL")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NoImprimir)
                    .HasColumnName("No_Imprimir")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomClienteEnt)
                    .HasColumnName("NOM_CLIENTE_ENT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartes).HasColumnName("Nro_Partes");

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.NroRegla)
                    .HasColumnName("Nro_Regla")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16);

                entity.Property(e => e.PrecTotPres)
                    .HasColumnName("Prec_Tot_Pres")
                    .HasColumnType("money");

                entity.Property(e => e.PrecTotPresDol)
                    .HasColumnName("Prec_Tot_Pres_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.PrecUnitPres)
                    .HasColumnName("Prec_Unit_Pres")
                    .HasColumnType("money");

                entity.Property(e => e.PrecUnitPresDol)
                    .HasColumnName("Prec_Unit_Pres_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.RifClienteEnt)
                    .HasColumnName("RIF_CLIENTE_ENT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.SinConversion)
                    .HasColumnName("Sin_Conversion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("TASA")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.TipoPago).HasColumnName("TIPO_PAGO");

                entity.Property(e => e.TotalCantPresent)
                    .HasColumnName("Total_Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValidCotiz)
                    .HasColumnName("VALID_COTIZ")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VentaTotal)
                    .HasColumnName("Venta_Total")
                    .HasColumnType("money");

                entity.Property(e => e.VentaTotalDol)
                    .HasColumnName("Venta_Total_Dol")
                    .HasColumnType("money");

                entity.Property(e => e.VentaUnitario)
                    .HasColumnName("Venta_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.VentaUnitarioDol)
                    .HasColumnName("Venta_Unitario_Dol")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<VProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_producto");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasColumnName("nombre")
                    .HasMaxLength(65);
            });

            modelBuilder.Entity<VProductos>(entity =>
            {
                entity.HasKey(e => e.Producto);

                entity.ToTable("V_Productos");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12);

                entity.Property(e => e.CantidadXCaja).HasColumnName("CANTIDAD_X_CAJA");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UnidadCosteo).HasColumnName("UNIDAD_COSTEO");
            });

            modelBuilder.Entity<VProgramaUsuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ProgramaUsuarios");

                entity.Property(e => e.LinkModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreModulo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombrePrograma)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VRecalculo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RECALCULO");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.MovMes).HasColumnName("MOV_MES");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VRecalculoPlanta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RECALCULO_PLANTA");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.MovMes).HasColumnName("MOV_MES");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VResumenBatchFancnd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ResumenBatchFANCND");

                entity.Property(e => e.Batch).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Impuesto)
                    .HasColumnName("impuesto")
                    .HasColumnType("decimal(38, 2)");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Venta).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<VRncAñoMesVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RncAñoMesVendedor");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Costos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorLista).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<VSaldoBodegaProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_SALDO_BODEGA_PRODUCTO");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Entrada).HasColumnName("ENTRADA");

                entity.Property(e => e.InvInicial).HasColumnName("INV_INICIAL");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Saldo).HasColumnName("SALDO");

                entity.Property(e => e.Salida).HasColumnName("SALIDA");
            });

            modelBuilder.Entity<VSeguimientoRnc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_SeguimientoRnc");

                entity.Property(e => e.AreaResponsable)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AspiracionCliente).HasColumnType("ntext");

                entity.Property(e => e.Causa)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.CostoEstimado).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.DescripcionRnc)
                    .HasColumnName("DescripcionRNC")
                    .IsUnicode(false);

                entity.Property(e => e.Estacion).HasMaxLength(100);

                entity.Property(e => e.Estatus)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Rnc)
                    .HasColumnName("RNC")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.SubLinea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VTransito>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TRANSITO");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ajustado)
                    .HasColumnName("ajustado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AlmacenReceptor).HasColumnName("ALMACEN_RECEPTOR");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.CantidadRecibida).HasColumnName("CANTIDAD_RECIBIDA");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.Diferencia).HasColumnName("DIFERENCIA");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("text");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUltimoMes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ultimo_mes");

                entity.Property(e => e.AñoContable)
                    .HasColumnName("año_contable")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaDesde)
                    .HasColumnName("fecha_desde")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("fecha_hasta")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.MesContable)
                    .HasColumnName("mes_contable")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<VUsuarioProgramaRol>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_usuarioProgramaRol");

                entity.Property(e => e.Idusuario).HasColumnName("IDUsuario");

                entity.Property(e => e.NombrePrograma)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NombreRol)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreUsuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUsuariosActiveDirectory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_usuariosActiveDirectory");

                entity.Property(e => e.DisplayName)
                    .HasColumnName("displayName")
                    .HasMaxLength(256);

                entity.Property(e => e.SamaccountName)
                    .HasColumnName("SAMAccountName")
                    .HasMaxLength(256);
            });

            modelBuilder.Entity<VVendedoresMarketing>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_VendedoresMarketing");

                entity.Property(e => e.Activo)
                    .IsRequired()
                    .HasColumnName("ACTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasColumnName("Codigo_Vendedor")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DesCategoria)
                    .HasColumnName("DES_CATEGORIA")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Gerente)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLider)
                    .HasColumnName("Team_Lider")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ValoradoInv>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.An8).HasColumnName("AN8");

                entity.Property(e => e.CostoUnit)
                    .HasColumnName("COSTO_UNIT")
                    .HasColumnType("numeric(10, 2)");

                entity.Property(e => e.Dcto)
                    .HasColumnName("DCTO")
                    .HasMaxLength(2);

                entity.Property(e => e.Dlej)
                    .HasColumnName("DLEJ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Doco)
                    .HasColumnName("DOCO")
                    .HasColumnType("numeric(12, 0)");

                entity.Property(e => e.Ldsc)
                    .HasColumnName("LDSC")
                    .HasMaxLength(30);

                entity.Property(e => e.Liitm).HasColumnName("LIITM");

                entity.Property(e => e.Lilocn)
                    .HasColumnName("LILOCN")
                    .HasMaxLength(20);

                entity.Property(e => e.Lilotn)
                    .HasColumnName("LILOTN")
                    .HasMaxLength(30);

                entity.Property(e => e.Lipqoh)
                    .HasColumnName("LIPQOH")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Litm)
                    .HasColumnName("LITM")
                    .HasMaxLength(25);

                entity.Property(e => e.Nprov)
                    .HasColumnName("NPROV")
                    .HasMaxLength(40);

                entity.Property(e => e.Und)
                    .HasColumnName("UND")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<Vestados>(entity =>
            {
                entity.HasKey(e => e.CodigoEstado)
                    .HasName("VEstados_INDEX01");

                entity.ToTable("VEstados");

                entity.Property(e => e.CodigoEstado)
                    .HasColumnName("CODIGO_ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CapitalEstado)
                    .IsRequired()
                    .HasColumnName("CAPITAL_ESTADO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodigoJde)
                    .HasColumnName("CODIGO_JDE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoSap)
                    .HasColumnName("CODIGO_SAP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NombreEstado)
                    .IsRequired()
                    .HasColumnName("NOMBRE_ESTADO")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<ViewComisionesTempNpc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ViewComisionesTempNPC");

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Impuesto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombreSubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorFactura).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RecNumPadre).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TranCancela)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<ViewPchistorico>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("View_PCHistorico");

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionString).HasMaxLength(50);

                entity.Property(e => e.Cobrado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ComisionCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ComisionRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ConceptoNomina).HasMaxLength(10);

                entity.Property(e => e.DescripcionTipoPago).HasMaxLength(50);

                entity.Property(e => e.Documento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DocumentoString).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Ficha).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.MontoReal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoRealString).HasMaxLength(20);

                entity.Property(e => e.MontoString).HasMaxLength(20);

                entity.Property(e => e.NombreCliente).HasMaxLength(120);

                entity.Property(e => e.NombreOficina).HasMaxLength(50);

                entity.Property(e => e.NombreVendedor).HasMaxLength(100);

                entity.Property(e => e.OrdenString).HasMaxLength(10);

                entity.Property(e => e.PeriodoDesde).HasMaxLength(10);

                entity.Property(e => e.PeriodoHasta).HasMaxLength(10);

                entity.Property(e => e.PorcCantidadCuotasCumplidas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcFlat).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcRangoCumplimientoCuotaGeneral).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.TotalCuotaMes).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentasMes).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<Vmunicipios>(entity =>
            {
                entity.HasKey(e => new { e.CodigoEstado, e.CodigoMcpo })
                    .HasName("VMunicipios_INDEX01");

                entity.ToTable("VMunicipios");

                entity.Property(e => e.CodigoEstado)
                    .HasColumnName("CODIGO_ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodigoMcpo)
                    .HasColumnName("CODIGO_MCPO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CapitalMcpo)
                    .IsRequired()
                    .HasColumnName("CAPITAL_MCPO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodigoJde)
                    .HasColumnName("CODIGO_JDE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescMunicipio)
                    .IsRequired()
                    .HasColumnName("DESC_MUNICIPIO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EdoMcpo)
                    .IsRequired()
                    .HasColumnName("EDO_MCPO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Kilometros)
                    .HasColumnName("KILOMETROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreEstado)
                    .IsRequired()
                    .HasColumnName("NOMBRE_ESTADO")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PosicionRuta).HasColumnName("POSICION_RUTA");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ZonaDespacho).HasColumnName("ZONA_DESPACHO");
            });

            modelBuilder.Entity<VzlaAccounts>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AdnameFullName)
                    .HasColumnName("ADnameFullName")
                    .HasMaxLength(100);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Historial).HasMaxLength(2);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NetworkId).HasMaxLength(50);

                entity.Property(e => e.Pass).HasMaxLength(100);

                entity.Property(e => e.UserLogonName).HasMaxLength(100);
            });

            modelBuilder.Entity<Waiy001>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY001");

                entity.Property(e => e.AñoContable)
                    .HasColumnName("año_contable")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Año contable ");

                entity.Property(e => e.FechaDesde)
                    .HasColumnName("fecha_desde")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1753')")
                    .HasComment("Fecha de Inicio de mes Contable");

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("fecha_hasta")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1753')")
                    .HasComment("Fecha deFin de mes Contable");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable)
                    .HasColumnName("mes_contable")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Mes Contable");
            });

            modelBuilder.Entity<Waiy002>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY002");

                entity.Property(e => e.Alias)
                    .HasColumnName("ALIAS")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Codigo de Almacen");

                entity.Property(e => e.AlmacenPrincipal)
                    .HasColumnName("ALMACEN_PRINCIPAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreAlmacen)
                    .HasColumnName("NOMBRE_ALMACEN")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Nombre de Almacen");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Codigo de la Oficina de Ventas O planata a la que pertenece el almacen");

                entity.Property(e => e.Ubicacion)
                    .HasColumnName("UBICACION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Ubicacion o Direccion del Almacen");
            });

            modelBuilder.Entity<Waiy003>(entity =>
            {
                entity.ToTable("WAIY003");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWaiy003_Cotizacion");

                entity.HasIndex(e => new { e.Almacen, e.CodTransaccion, e.Documento })
                    .HasName("IX_WAIY003")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Codigo de Almacen");

                entity.Property(e => e.AlmacenReceptor)
                    .HasColumnName("ALMACEN_RECEPTOR")
                    .HasDefaultValueSql("('')")
                    .HasComment("Almacen receptor de Mercancia");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasComment("Codigo de Cliente");

                entity.Property(e => e.CodTransaccion)
                    .HasColumnName("COD_TRANSACCION")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Codigo de transaccion de Inventario");

                entity.Property(e => e.CondPago)
                    .HasColumnName("COND_PAGO")
                    .HasComment("Condicion de Pago");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Numero de Cotizacion");

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("direccion del cliente o almacen receptor");

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("direccion del cliente o almacen receptor");

                entity.Property(e => e.Direccion3)
                    .HasColumnName("DIRECCION3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("direccion del cliente o almacen receptor");

                entity.Property(e => e.Documento)
                    .HasColumnName("DOCUMENTO")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Numero  de transaccion ");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')")
                    .HasComment("Fecha de Emision ");

                entity.Property(e => e.FormaImp)
                    .HasColumnName("FORMA_IMP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Indica si el formulario fue impreso");

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Numero de NIT");

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Nombre del cliente o almacen receptor");

                entity.Property(e => e.Observaciones)
                    .HasColumnType("text")
                    .HasComment("Observaciones Generales");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Nuemero de Orden ");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Numero de Orden de Compra");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Numero de RIF");

                entity.Property(e => e.TipoIva)
                    .HasColumnName("TIPO_IVA")
                    .HasComment("Tipo de Iva");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("NOMBRE DE USUARIO");
            });

            modelBuilder.Entity<Waiy004>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY004");

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasComment("Codigo de Almacen");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 3)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Cantidad de la operacion");

                entity.Property(e => e.CodTransaccion)
                    .HasColumnName("COD_TRANSACCION")
                    .HasComment("Codigo de transacion de Inventario");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Descripcion del producto");

                entity.Property(e => e.Documento)
                    .HasColumnName("DOCUMENTO")
                    .HasComment("Numero de documento");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Identificador de registro")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("numeric(18, 2)")
                    .HasComment("Precio Lista del producto");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("numeric(18, 2)")
                    .HasComment("Predio Venta del producto");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Codigo de producto de Inv.");

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Unidad a despacha");
            });

            modelBuilder.Entity<Waiy005>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY005");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.AlmacenReceptor).HasColumnName("ALMACEN_RECEPTOR");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.CondPago).HasColumnName("COND_PAGO");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion3)
                    .HasColumnName("DIRECCION3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FormaImp)
                    .HasColumnName("FORMA_IMP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones).HasColumnType("text");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoIva).HasColumnName("TIPO_IVA");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy006>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY006");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(18, 3)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy007>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY007");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWaiy007_Cotizacion");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy008>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY008");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy009>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY009");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWaiy009_Cotizacion");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy010>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY010");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy011>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY011");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.CodDpto)
                    .HasColumnName("COD_DPTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy012>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY012");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy013>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY013");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.CodDpto)
                    .HasColumnName("COD_DPTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy014>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY014");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy015>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY015");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoConfirma).HasColumnName("ANO_CONFIRMA");

                entity.Property(e => e.Bodega).HasColumnName("BODEGA");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.CentroGastos).HasColumnName("CENTRO_GASTOS");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Comprobante).HasColumnName("COMPROBANTE");

                entity.Property(e => e.FamiliaProduct)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaComprb)
                    .HasColumnName("FECHA_COMPRB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnName("FECHA_REGISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.LineaProducto)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.MesConfirma).HasColumnName("MES_CONFIRMA");

                entity.Property(e => e.NoAfectaProm)
                    .HasColumnName("NO_AFECTA_PROM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NoOrden).HasColumnName("NO_ORDEN");

                entity.Property(e => e.NoPedido).HasColumnName("NO_PEDIDO");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("text");

                entity.Property(e => e.OrdProduccion).HasColumnName("ORD_PRODUCCION");

                entity.Property(e => e.OrdenCalculo)
                    .HasColumnName("ORDEN_CALCULO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OrdenCompra).HasColumnName("ORDEN_COMPRA");

                entity.Property(e => e.OrigenProducto)
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.StatusAprob)
                    .HasColumnName("STATUS_APROB")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('PENDIENTE')");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Transmision)
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ValorCosto)
                    .HasColumnName("VALOR_COSTO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Waiy016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY016");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWaiy016_Cotizacion");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.CantidadCajas)
                    .HasColumnName("CANTIDAD_CAJAS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadMillares)
                    .HasColumnName("CANTIDAD_MILLARES")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodDpto)
                    .HasColumnName("COD_DPTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Job)
                    .HasColumnName("JOB")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY017");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWaiy017_Cotizacion");

                entity.Property(e => e.Almacen).HasColumnName("ALMACEN");

                entity.Property(e => e.CantidadCajas)
                    .HasColumnName("CANTIDAD_CAJAS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadMillares)
                    .HasColumnName("CANTIDAD_MILLARES")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodDpto)
                    .HasColumnName("COD_DPTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodTransaccion).HasColumnName("COD_TRANSACCION");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.FechaEmision)
                    .HasColumnName("FECHA_EMISION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Job)
                    .HasColumnName("JOB")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Waiy018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY018");

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasComment("codigo de almacen");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("Numero de registro")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRed)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioResponsable)
                    .HasColumnName("USUARIO_RESPONSABLE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Usuario Responsable del almacen");
            });

            modelBuilder.Entity<Waiy019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAIY019");

                entity.Property(e => e.Formulario)
                    .HasColumnName("FORMULARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Nombre del Formulario de carga de Datos");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .HasComment("Identificador del Registro")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Operacion)
                    .HasColumnName("OPERACION")
                    .HasComment("Codigo de Transaccion asociada ala formulario");
            });

            modelBuilder.Entity<Wapy200>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAPY200");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Signo)
                    .HasColumnName("SIGNO")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasColumnName("TRANSACCION")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wapy201>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WAPY201");

                entity.Property(e => e.Alicuota)
                    .HasColumnType("numeric(5, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Base)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Desde)
                    .HasColumnName("DESDE")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Hasta)
                    .HasColumnName("HASTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Item1)
                    .HasColumnName("item1")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item2)
                    .HasColumnName("item2")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Iva)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Ivaretenido)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IvaretenidoTerceros)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rbase)
                    .HasColumnName("RBase")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Riva)
                    .HasColumnName("RIva")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rivaretenido)
                    .HasColumnName("RIvaretenido")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RivaretenidoTerceros)
                    .HasColumnName("RIvaretenidoTerceros")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoRegistro)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wary246Eliminados>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WARY246_Eliminados");

                entity.Property(e => e.CodOficina)
                    .HasColumnName("COD_OFICINA")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.FechaEliminado)
                    .HasColumnName("FECHA_ELIMINADO")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnName("FECHA_SOLICITUD")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.TipoOrden)
                    .HasColumnName("TIPO_ORDEN")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(80);

                entity.Property(e => e.UsuarioEa)
                    .HasColumnName("USUARIO_EA")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioS)
                    .HasColumnName("USUARIO_S")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wary249>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WARY249");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wary250>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WARY250");

                entity.Property(e => e.Consultor)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Gestion)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Teleoperador)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wary251>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WARY251");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.DiasFecInter).HasColumnName("Dias_Fec_Inter");

                entity.Property(e => e.FlagEmailAdmini)
                    .HasColumnName("Flag_Email_Admini")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagEmailCliente)
                    .HasColumnName("Flag_Email_Cliente")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagEmailConsultor)
                    .HasColumnName("Flag_Email_Consultor")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFecAviso)
                    .HasColumnName("Flag_Fec_Aviso")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFecInter)
                    .HasColumnName("Flag_Fec_Inter")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSms)
                    .HasColumnName("Flag_Sms")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<Wary252>(entity =>
            {
                entity.ToTable("WARY252");

                entity.Property(e => e.Cancelado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Determina si la factura fuen cancelada");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.FechaCompromiso)
                    .HasColumnName("Fecha_Compromiso")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagCumplido)
                    .HasColumnName("Flag_Cumplido")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Listado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("Identifica la gestion de la Administradora");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Observacion)
                    .HasMaxLength(600)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("Usuario responsable del registro");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wary253>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WARY253");

                entity.Property(e => e.FechaFin)
                    .HasColumnName("Fecha_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaInicio)
                    .HasColumnName("Fecha_Inicio")
                    .HasColumnType("datetime");

                entity.Property(e => e.NroReporte)
                    .HasColumnName("Nro_Reporte")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wary254>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WARY254");

                entity.Property(e => e.Apellido)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wary255>(entity =>
            {
                entity.HasKey(e => new { e.Cliente, e.Producto, e.Eliminado });

                entity.ToTable("WARY255");

                entity.HasIndex(e => new { e.Cliente, e.Producto, e.Eliminado })
                    .HasName("IX_WARY255_1");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Eliminado)
                    .HasColumnName("ELIMINADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoIva).HasColumnName("TIPO_IVA");
            });

            modelBuilder.Entity<Wimy030>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WIMY030");

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaDesde)
                    .HasColumnName("FECHA_DESDE")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("FECHA_HASTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTransac)
                    .HasColumnName("FECHA_TRANSAC")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Medida)
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ubicacion)
                    .HasColumnName("UBICACION")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Winy244>(entity =>
            {
                entity.ToTable("WINY244");

                entity.HasIndex(e => new { e.AñoContable, e.MesContable })
                    .HasName("IX_WINY244");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AñoContable)
                    .HasColumnName("año_contable")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaDesde)
                    .HasColumnName("fecha_desde")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("fecha_hasta")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.MesContable)
                    .HasColumnName("mes_contable")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Winy245>(entity =>
            {
                entity.ToTable("WINY245");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Adelantada)
                    .HasColumnName("adelantada")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DescripcionTipoEntrega)
                    .HasColumnName("descripcion_tipo_entrega")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EliminarJob)
                    .HasColumnName("eliminar_job")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GeneraDespacho)
                    .HasColumnName("Genera_despacho")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mascara)
                    .HasColumnName("mascara")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RequiereAutorizacion).HasMaxLength(1);

                entity.Property(e => e.TipoEntrega)
                    .HasColumnName("tipo_entrega")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Winy246>(entity =>
            {
                entity.ToTable("WINY246");

                entity.HasIndex(e => e.Unidad)
                    .HasName("IX_WINY246");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Factor)
                    .HasColumnName("FACTOR")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasColumnName("UNIDAD")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UnidadPlural)
                    .HasColumnName("UNIDAD_PLURAL")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Winy247>(entity =>
            {
                entity.HasKey(e => e.TipoFaltante);

                entity.ToTable("WINY247");

                entity.Property(e => e.TipoFaltante)
                    .HasColumnName("TIPO_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");
            });

            modelBuilder.Entity<Winy248>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY248");

                entity.HasIndex(e => e.Recnum)
                    .HasName("WINY248_INDEX00")
                    .IsUnique();

                entity.HasIndex(e => new { e.RegistroTribut, e.CentroFact, e.Usuario })
                    .HasName("WINY248_INDEX01")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AfectaFactura)
                    .HasColumnName("Afecta_Factura")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.AnoFactura)
                    .HasColumnName("ANO_FACTURA")
                    .HasComputedColumnSql("(datepart(year,[FECHA_FACTURA]))");

                entity.Property(e => e.Anticipo)
                    .HasColumnName("ANTICIPO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Anulada)
                    .IsRequired()
                    .HasColumnName("ANULADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Cajas)
                    .HasColumnName("CAJAS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CantResumen)
                    .HasColumnName("CANT_RESUMEN")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CentroFact)
                    .HasColumnName("CENTRO_FACT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodigoRepetici)
                    .HasColumnName("CODIGO_REPETICI")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ColetillaInd1)
                    .HasColumnName("COLETILLA_IND1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd2)
                    .HasColumnName("COLETILLA_IND2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd3)
                    .HasColumnName("COLETILLA_IND3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd4)
                    .HasColumnName("COLETILLA_IND4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CondPago)
                    .HasColumnName("COND_PAGO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CondicionPago)
                    .HasColumnName("CONDICION_PAGO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CredConta)
                    .IsRequired()
                    .HasColumnName("CRED_CONTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Dciudad)
                    .HasColumnName("DCIUDAD")
                    .HasMaxLength(30);

                entity.Property(e => e.DescResumen1)
                    .HasColumnName("DESC_RESUMEN1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DescResumen2)
                    .HasColumnName("DESC_RESUMEN2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Destado)
                    .HasColumnName("DESTADO")
                    .HasMaxLength(20);

                entity.Property(e => e.DireccFiscal)
                    .HasColumnName("DIRECC_FISCAL")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionEmb1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Dolar)
                    .IsRequired()
                    .HasColumnName("DOLAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasColumnName("ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FactAdelantada)
                    .IsRequired()
                    .HasColumnName("FACT_ADELANTADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FactFinal)
                    .HasColumnName("FACT_FINAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FacturaRepetir)
                    .HasColumnName("FACTURA_REPETIR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FechaAprueba)
                    .HasColumnName("FECHA_APRUEBA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaDespacho)
                    .HasColumnName("FECHA_DESPACHO")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaRecibCli)
                    .HasColumnName("FECHA_RECIB_CLI")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.Fiscal)
                    .IsRequired()
                    .HasColumnName("FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagComision)
                    .IsRequired()
                    .HasColumnName("FLAG_COMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagImpreso)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRESO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Flete)
                    .HasColumnName("FLETE")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IdDireccion).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Imp)
                    .HasColumnName("IMP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ImpStock)
                    .IsRequired()
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([otro_gasto_1] / [tipo_cambio])");

                entity.Property(e => e.Iq).HasColumnName("IQ");

                entity.Property(e => e.Ir).HasColumnName("IR");

                entity.Property(e => e.JobId)
                    .HasColumnName("JOB_ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LineaAnt)
                    .HasColumnName("LINEA_ANT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MesFactura)
                    .HasColumnName("MES_FACTURA")
                    .HasComputedColumnSql("(datepart(month,[FECHA_FACTURA]))");

                entity.Property(e => e.Miscelaneo)
                    .HasColumnName("MISCELANEO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MultiplesEmb)
                    .IsRequired()
                    .HasColumnName("MULTIPLES_EMB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasColumnName("MUNICIPIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NcFacturar)
                    .HasColumnName("NC_FACTURAR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NitEmb)
                    .HasColumnName("NIT_EMB")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NitFact)
                    .HasColumnName("NIT_FACT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreEmb)
                    .IsRequired()
                    .HasColumnName("NOMBRE_EMB")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreFact)
                    .IsRequired()
                    .HasColumnName("NOMBRE_FACT")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NroControl)
                    .HasColumnName("NRO_CONTROL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NroNc)
                    .HasColumnName("NRO_NC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NuevaLineaAnt)
                    .HasColumnName("NUEVA_LINEA_ANT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ObsCobranzas1)
                    .HasColumnName("OBS_COBRANZAS1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas2)
                    .HasColumnName("OBS_COBRANZAS2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas3)
                    .HasColumnName("OBS_COBRANZAS3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas4)
                    .HasColumnName("OBS_COBRANZAS4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observacion1)
                    .IsRequired()
                    .HasColumnName("OBSERVACION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasColumnName("OBSERVACION2")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion3)
                    .IsRequired()
                    .HasColumnName("OBSERVACION3")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OtroGasto1)
                    .HasColumnName("OTRO_GASTO_1")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OtroGasto1R)
                    .HasColumnName("OTRO_GASTO_1_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OtroGasto2)
                    .HasColumnName("OTRO_GASTO_2")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SdoAnticipo)
                    .HasColumnName("SDO_ANTICIPO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdoAnticipoDo)
                    .HasColumnName("SDO_ANTICIPO_DO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Seguro)
                    .HasColumnName("SEGURO")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TasaAnticipo)
                    .HasColumnName("TASA_ANTICIPO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TasaImpuesto)
                    .HasColumnName("TASA_IMPUESTO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoImpuesto)
                    .HasColumnName("TIPO_IMPUESTO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Transmision)
                    .IsRequired()
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UndResumen)
                    .HasColumnName("UND_RESUMEN")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UnidadFacturar)
                    .HasColumnName("UNIDAD_FACTURAR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsuarioAprueba)
                    .HasColumnName("USUARIO_APRUEBA")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista] / [tipo_cambio])");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista_r] / [tipo_cambio])");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta] / [tipo_cambio])");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta_r] / [tipo_cambio])");

                entity.Property(e => e.VendGestion)
                    .IsRequired()
                    .HasColumnName("VEND_GESTION")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Winy249>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY249");

                entity.HasIndex(e => e.Recnum)
                    .HasName("WINY249_INDEX00")
                    .IsUnique();

                entity.HasIndex(e => new { e.RegistroTribut, e.CentroFact, e.Usuario, e.Orden, e.JobId, e.Copy, e.Articulo })
                    .HasName("WINY249_INDEX01");

                entity.Property(e => e.Almacen)
                    .HasColumnName("ALMACEN")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Articulo)
                    .IsRequired()
                    .HasColumnName("ARTICULO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BsMcFinan)
                    .HasColumnName("BS_MC_FINAN")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnName("BS_MC_FINANSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnName("BS_MC_PAPEL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BultoDesp)
                    .HasColumnName("BULTO_DESP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BultoTran)
                    .HasColumnName("BULTO_TRAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bultos).HasColumnName("BULTOS");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CentroFact).HasColumnName("CENTRO_FACT");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CtaConc)
                    .IsRequired()
                    .HasColumnName("CTA_CONC")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CtaLista)
                    .IsRequired()
                    .HasColumnName("CTA_LISTA")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Descripcion1)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Descripcion2)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb)
                    .HasColumnName("DIRECCION_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionFact)
                    .HasColumnName("DIRECCION_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.Estadisticas)
                    .IsRequired()
                    .HasColumnName("ESTADISTICAS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FacturaAsociada)
                    .HasColumnName("FACTURA_ASOCIADA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FacturaRepetir)
                    .HasColumnName("FACTURA_REPETIR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Familia)
                    .IsRequired()
                    .HasColumnName("FAMILIA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FamiliaProducc)
                    .IsRequired()
                    .HasColumnName("FAMILIA_PRODUCC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FecComproClte)
                    .HasColumnName("FEC_COMPRO_CLTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecRecPlaneac)
                    .HasColumnName("FEC_REC_PLANEAC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaOrden)
                    .HasColumnName("FECHA_ORDEN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaProg)
                    .HasColumnName("FECHA_PROG")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaPrometida)
                    .HasColumnName("FECHA_PROMETIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagFaltante)
                    .IsRequired()
                    .HasColumnName("FLAG_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagImprenta)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRENTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagRetenido)
                    .IsRequired()
                    .HasColumnName("FLAG_RETENIDO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagTipoJob)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_JOB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagTipoOrden)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FormasBajotiro).HasColumnName("FORMAS_BAJOTIRO");

                entity.Property(e => e.FormasUnidad)
                    .HasColumnName("FORMAS_UNIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.GeneraDespacho)
                    .HasColumnName("GENERA_DESPACHO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('X')");

                entity.Property(e => e.ImpStock)
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Impuesto1)
                    .HasColumnName("IMPUESTO_1")
                    .HasColumnType("decimal(27, 8)")
                    .HasComputedColumnSql("(([valor_venta]*[iva])/(100))");

                entity.Property(e => e.Impuesto1R)
                    .HasColumnName("IMPUESTO_1_r")
                    .HasColumnType("decimal(27, 8)")
                    .HasComputedColumnSql("(([valor_venta_r]*[iva])/(100))");

                entity.Property(e => e.Impuesto2)
                    .HasColumnName("IMPUESTO_2")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Iva)
                    .HasColumnName("IVA")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Ivarefact)
                    .HasColumnName("IVAREFACT")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.KiloBulto)
                    .HasColumnName("KILO_BULTO")
                    .HasColumnType("numeric(10, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Linea1)
                    .IsRequired()
                    .HasColumnName("LINEA1")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.LineaProduccio)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Lipamepa)
                    .IsRequired()
                    .HasColumnName("LIPAMEPA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ListaUniDol)
                    .HasColumnName("LISTA_UNI_DOL")
                    .HasColumnType("decimal(25, 13)")
                    .HasComputedColumnSql("([precio_lista]/[tipo_cambio])");

                entity.Property(e => e.MetodoPrecio1)
                    .IsRequired()
                    .HasColumnName("METODO_PRECIO1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Millares)
                    .IsRequired()
                    .HasColumnName("MILLARES")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NcFacturar)
                    .HasColumnName("NC_FACTURAR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NoEntrega).HasColumnName("NO_ENTREGA");

                entity.Property(e => e.NombreEmb)
                    .HasColumnName("NOMBRE_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.NombreFact)
                    .HasColumnName("NOMBRE_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.NumCliDesde)
                    .HasColumnName("NUM_CLI_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumCliDesdeE)
                    .HasColumnName("NUM_CLI_DESDE_E")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumCliHasta)
                    .HasColumnName("NUM_CLI_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumCliHastaE)
                    .HasColumnName("NUM_CLI_HASTA_E")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroDesde).HasColumnName("NUMERO_DESDE");

                entity.Property(e => e.NumeroDesdeEnt)
                    .HasColumnName("NUMERO_DESDE_ENT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroHasta).HasColumnName("NUMERO_HASTA");

                entity.Property(e => e.NumeroHastaEnt)
                    .HasColumnName("NUMERO_HASTA_ENT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrigenProducto)
                    .IsRequired()
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasColumnName("PAIS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Partes)
                    .IsRequired()
                    .HasColumnName("PARTES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnName("PORC_MC_FINAN")
                    .HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasColumnType("decimal(8, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasColumnType("decimal(8, 2)");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasColumnType("decimal(8, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("decimal(16, 6)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("decimal(16, 6)");

                entity.Property(e => e.Preciounidad)
                    .HasColumnName("PRECIOUNIDAD")
                    .HasColumnType("decimal(34, 17)")
                    .HasComputedColumnSql("(case when [unidadesfact]>(0) then [valor_venta]/[unidadesfact] else (0) end)");

                entity.Property(e => e.PreciounidadR)
                    .HasColumnName("PRECIOUNIDAD_r")
                    .HasColumnType("decimal(34, 17)")
                    .HasComputedColumnSql("(case when [unidadesent]>(0) then [valor_venta_r]/[unidadesent] else (0) end)");

                entity.Property(e => e.PrefijoCli)
                    .HasColumnName("PREFIJO_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrefijoCliE)
                    .HasColumnName("PREFIJO_CLI_E")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrefijoDesde)
                    .IsRequired()
                    .HasColumnName("PREFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PrefijoDesdeEnt)
                    .HasColumnName("PREFIJO_DESDE_ENT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrefijoHasta)
                    .IsRequired()
                    .HasColumnName("PREFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PrefijoHastaEnt)
                    .HasColumnName("PREFIJO_HASTA_ENT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RemisionOfi)
                    .HasColumnName("REMISION_OFI")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoCli)
                    .HasColumnName("SUFIJO_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoCliE)
                    .HasColumnName("SUFIJO_CLI_E")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SufijoDesde)
                    .IsRequired()
                    .HasColumnName("SUFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoDesdeEnt)
                    .HasColumnName("SUFIJO_DESDE_ENT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SufijoHasta)
                    .IsRequired()
                    .HasColumnName("SUFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoHastaEnt)
                    .HasColumnName("SUFIJO_HASTA_ENT")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UnidadFacturar)
                    .IsRequired()
                    .HasColumnName("UNIDAD_FACTURAR")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Unidadesent)
                    .HasColumnName("UNIDADESENT")
                    .HasColumnType("decimal(14, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unidadesfact)
                    .HasColumnName("UNIDADESFACT")
                    .HasColumnType("decimal(14, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista]/[tipo_cambio])");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista_r]/[tipo_cambio])");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta]/[tipo_cambio])");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta_r]/[tipo_cambio])");

                entity.Property(e => e.VentaUniDol)
                    .HasColumnName("VENTA_UNI_DOL")
                    .HasColumnType("decimal(25, 13)")
                    .HasComputedColumnSql("([precio_venta]/[tipo_cambio])");
            });

            modelBuilder.Entity<Winy250>(entity =>
            {
                entity.HasKey(e => e.Estacion)
                    .HasName("PK_WINY250_1");

                entity.ToTable("WINY250");

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Abreviado).HasMaxLength(3);

                entity.Property(e => e.AfectaAjusteFiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DescripcionEstacion)
                    .HasColumnName("DESCRIPCION_ESTACION")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreColumna).HasMaxLength(30);
            });

            modelBuilder.Entity<Winy251>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY251");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Rol)
                    .HasColumnName("ROL")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Winy252>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY252");

                entity.HasIndex(e => e.Recnum)
                    .HasName("WINY252_INDEX00")
                    .IsUnique();

                entity.HasIndex(e => new { e.RegistroTribut, e.CentroFact, e.Usuario })
                    .HasName("WINY252_INDEX01")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AnoFactura)
                    .HasColumnName("ANO_FACTURA")
                    .HasComputedColumnSql("(datepart(year,[FECHA_FACTURA]))");

                entity.Property(e => e.Anticipo)
                    .HasColumnName("ANTICIPO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Anulada)
                    .IsRequired()
                    .HasColumnName("ANULADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Cajas)
                    .HasColumnName("CAJAS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CantResumen)
                    .HasColumnName("CANT_RESUMEN")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CentroFact)
                    .HasColumnName("CENTRO_FACT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodigoRepetici)
                    .HasColumnName("CODIGO_REPETICI")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ColetillaInd1)
                    .HasColumnName("COLETILLA_IND1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd2)
                    .HasColumnName("COLETILLA_IND2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd3)
                    .HasColumnName("COLETILLA_IND3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ColetillaInd4)
                    .HasColumnName("COLETILLA_IND4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CondPago)
                    .HasColumnName("COND_PAGO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CondicionPago)
                    .HasColumnName("CONDICION_PAGO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CredConta)
                    .IsRequired()
                    .HasColumnName("CRED_CONTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DescResumen1)
                    .HasColumnName("DESC_RESUMEN1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DescResumen2)
                    .HasColumnName("DESC_RESUMEN2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DireccFiscal)
                    .HasColumnName("DIRECC_FISCAL")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionEmb1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_EMB3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Dolar)
                    .IsRequired()
                    .HasColumnName("DOLAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasColumnName("ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FactAdelantada)
                    .IsRequired()
                    .HasColumnName("FACT_ADELANTADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FactFinal)
                    .HasColumnName("FACT_FINAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FacturaRepetir)
                    .HasColumnName("FACTURA_REPETIR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FechaDespacho)
                    .HasColumnName("FECHA_DESPACHO")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaRecibCli)
                    .HasColumnName("FECHA_RECIB_CLI")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.Fiscal)
                    .IsRequired()
                    .HasColumnName("FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagComision)
                    .IsRequired()
                    .HasColumnName("FLAG_COMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagImpreso)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRESO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Flete)
                    .HasColumnName("FLETE")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Imp)
                    .HasColumnName("IMP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ImpStock)
                    .IsRequired()
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([otro_gasto_1] / [tipo_cambio])");

                entity.Property(e => e.JobId)
                    .HasColumnName("JOB_ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LineaAnt)
                    .HasColumnName("LINEA_ANT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MesFactura)
                    .HasColumnName("MES_FACTURA")
                    .HasComputedColumnSql("(datepart(month,[FECHA_FACTURA]))");

                entity.Property(e => e.MultiplesEmb)
                    .IsRequired()
                    .HasColumnName("MULTIPLES_EMB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Municipio)
                    .IsRequired()
                    .HasColumnName("MUNICIPIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NcFacturar)
                    .HasColumnName("NC_FACTURAR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NitEmb)
                    .HasColumnName("NIT_EMB")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NitFact)
                    .HasColumnName("NIT_FACT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreEmb)
                    .IsRequired()
                    .HasColumnName("NOMBRE_EMB")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreFact)
                    .IsRequired()
                    .HasColumnName("NOMBRE_FACT")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NroControl)
                    .HasColumnName("NRO_CONTROL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NroNc)
                    .HasColumnName("NRO_NC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NuevaLineaAnt)
                    .HasColumnName("NUEVA_LINEA_ANT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ObsCobranzas1)
                    .HasColumnName("OBS_COBRANZAS1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas2)
                    .HasColumnName("OBS_COBRANZAS2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas3)
                    .HasColumnName("OBS_COBRANZAS3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ObsCobranzas4)
                    .HasColumnName("OBS_COBRANZAS4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observacion1)
                    .IsRequired()
                    .HasColumnName("OBSERVACION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasColumnName("OBSERVACION2")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion3)
                    .IsRequired()
                    .HasColumnName("OBSERVACION3")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrdenCompra)
                    .IsRequired()
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OtroGasto1)
                    .HasColumnName("OTRO_GASTO_1")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OtroGasto1R)
                    .HasColumnName("OTRO_GASTO_1_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OtroGasto2)
                    .HasColumnName("OTRO_GASTO_2")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SdoAnticipo)
                    .HasColumnName("SDO_ANTICIPO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdoAnticipoDo)
                    .HasColumnName("SDO_ANTICIPO_DO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Seguro)
                    .HasColumnName("SEGURO")
                    .HasColumnType("decimal(12, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TasaAnticipo)
                    .HasColumnName("TASA_ANTICIPO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TasaImpuesto)
                    .HasColumnName("TASA_IMPUESTO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Transmision)
                    .IsRequired()
                    .HasColumnName("TRANSMISION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UndResumen)
                    .HasColumnName("UND_RESUMEN")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UnidadFacturar)
                    .HasColumnName("UNIDAD_FACTURAR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista] / [tipo_cambio])");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista_r] / [tipo_cambio])");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta] / [tipo_cambio])");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta_r] / [tipo_cambio])");

                entity.Property(e => e.VendGestion)
                    .IsRequired()
                    .HasColumnName("VEND_GESTION")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Winy253>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("winy253");

                entity.HasIndex(e => e.Recnum)
                    .HasName("winy253_INDEX00")
                    .IsUnique();

                entity.HasIndex(e => new { e.RegistroTribut, e.CentroFact, e.Usuario, e.Orden, e.JobId, e.Copy, e.Articulo })
                    .HasName("winy253_INDEX01");

                entity.Property(e => e.Articulo)
                    .IsRequired()
                    .HasColumnName("ARTICULO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Bultos)
                    .HasColumnName("BULTOS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CantEntregar)
                    .HasColumnName("CANT_ENTREGAR")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CentroFact)
                    .HasColumnName("CENTRO_FACT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CtaConc)
                    .IsRequired()
                    .HasColumnName("CTA_CONC")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CtaLista)
                    .IsRequired()
                    .HasColumnName("CTA_LISTA")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Descripcion1)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Descripcion2)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEmb)
                    .HasColumnName("DIRECCION_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.DireccionFact)
                    .HasColumnName("DIRECCION_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.Estadisticas)
                    .IsRequired()
                    .HasColumnName("ESTADISTICAS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FacturaAsociada)
                    .HasColumnName("FACTURA_ASOCIADA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Familia)
                    .IsRequired()
                    .HasColumnName("FAMILIA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FamiliaProducc)
                    .IsRequired()
                    .HasColumnName("FAMILIA_PRODUCC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FecComproClte)
                    .HasColumnName("FEC_COMPRO_CLTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecRecPlaneac)
                    .HasColumnName("FEC_REC_PLANEAC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.FechaOrden)
                    .HasColumnName("FECHA_ORDEN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida)
                    .HasColumnName("FECHA_PROMETIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagFaltante)
                    .IsRequired()
                    .HasColumnName("FLAG_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagImprenta)
                    .IsRequired()
                    .HasColumnName("FLAG_IMPRENTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagRetenido)
                    .IsRequired()
                    .HasColumnName("FLAG_RETENIDO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagTipoJob)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_JOB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FlagTipoOrden)
                    .IsRequired()
                    .HasColumnName("FLAG_TIPO_ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FormasBajotiro)
                    .HasColumnName("FORMAS_BAJOTIRO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.FormasUnidad)
                    .HasColumnName("FORMAS_UNIDAD")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GeneraDespacho)
                    .HasColumnName("GENERA_DESPACHO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('X')");

                entity.Property(e => e.ImpStock)
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Impuesto1)
                    .HasColumnName("IMPUESTO_1")
                    .HasColumnType("decimal(27, 8)")
                    .HasComputedColumnSql("([valor_venta] * [iva] / 100)");

                entity.Property(e => e.Impuesto1R)
                    .HasColumnName("IMPUESTO_1_r")
                    .HasColumnType("decimal(27, 8)")
                    .HasComputedColumnSql("([valor_venta_r] * [iva] / 100)");

                entity.Property(e => e.Impuesto2)
                    .HasColumnName("IMPUESTO_2")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ImpuestoDol)
                    .HasColumnName("IMPUESTO_DOL")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Iva)
                    .HasColumnName("IVA")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.JobId)
                    .HasColumnName("JOB_ID")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Linea1)
                    .IsRequired()
                    .HasColumnName("LINEA1")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.LineaProduccio)
                    .IsRequired()
                    .HasColumnName("LINEA_PRODUCCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Lipamepa)
                    .IsRequired()
                    .HasColumnName("LIPAMEPA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ListaUniDol)
                    .HasColumnName("LISTA_UNI_DOL")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([precio_lista] / [tipo_cambio])");

                entity.Property(e => e.MetodoPrecio1)
                    .IsRequired()
                    .HasColumnName("METODO_PRECIO1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Millares)
                    .IsRequired()
                    .HasColumnName("MILLARES")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NoEntrega)
                    .HasColumnName("NO_ENTREGA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NombreEmb)
                    .HasColumnName("NOMBRE_EMB")
                    .HasColumnType("text");

                entity.Property(e => e.NombreFact)
                    .HasColumnName("NOMBRE_FACT")
                    .HasColumnType("text");

                entity.Property(e => e.NumeroDesde)
                    .HasColumnName("NUMERO_DESDE")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NumeroDesdeEnt)
                    .HasColumnName("NUMERO_DESDE_ENT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NumeroHasta)
                    .HasColumnName("NUMERO_HASTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.NumeroHastaEnt)
                    .HasColumnName("NUMERO_HASTA_ENT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrigenProducto)
                    .IsRequired()
                    .HasColumnName("ORIGEN_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasColumnName("PAIS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Partes)
                    .IsRequired()
                    .HasColumnName("PARTES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PrecioLista)
                    .HasColumnName("PRECIO_LISTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnName("PRECIO_VENTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Preciounidad)
                    .HasColumnName("PRECIOUNIDAD")
                    .HasColumnType("decimal(34, 17)")
                    .HasComputedColumnSql("(case when ([unidadesfact] > 0) then ([valor_venta] / [unidadesfact]) else 0 end)");

                entity.Property(e => e.PreciounidadR)
                    .HasColumnName("PRECIOUNIDAD_r")
                    .HasColumnType("decimal(34, 17)")
                    .HasComputedColumnSql("(case when ([unidadesent] > 0) then ([valor_venta_r] / [unidadesent]) else 0 end)");

                entity.Property(e => e.PrefijoDesde)
                    .IsRequired()
                    .HasColumnName("PREFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PrefijoDesdeEnt)
                    .HasColumnName("PREFIJO_DESDE_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrefijoHasta)
                    .IsRequired()
                    .HasColumnName("PREFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PrefijoHastaEnt)
                    .HasColumnName("PREFIJO_HASTA_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RegistroTribut)
                    .IsRequired()
                    .HasColumnName("REGISTRO_TRIBUT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RemisionOfi)
                    .HasColumnName("REMISION_OFI")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoDesde)
                    .IsRequired()
                    .HasColumnName("SUFIJO_DESDE")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoDesdeEnt)
                    .HasColumnName("SUFIJO_DESDE_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SufijoHasta)
                    .IsRequired()
                    .HasColumnName("SUFIJO_HASTA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SufijoHastaEnt)
                    .HasColumnName("SUFIJO_HASTA_ENT")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TotalParcial)
                    .IsRequired()
                    .HasColumnName("TOTAL_PARCIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UnidadFacturar)
                    .IsRequired()
                    .HasColumnName("UNIDAD_FACTURAR")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Unidadesent)
                    .HasColumnName("UNIDADESENT")
                    .HasColumnType("decimal(14, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Unidadesfact)
                    .HasColumnName("UNIDADESFACT")
                    .HasColumnType("decimal(14, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListaR)
                    .HasColumnName("VALOR_LISTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorListad)
                    .HasColumnName("VALOR_LISTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista] / [tipo_cambio])");

                entity.Property(e => e.ValorListadR)
                    .HasColumnName("VALOR_LISTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_lista_r] / [tipo_cambio])");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentaR)
                    .HasColumnName("VALOR_VENTA_r")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVentad)
                    .HasColumnName("VALOR_VENTAD")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta] / [tipo_cambio])");

                entity.Property(e => e.ValorVentadR)
                    .HasColumnName("VALOR_VENTAD_r")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([valor_venta_r] / [tipo_cambio])");

                entity.Property(e => e.VentaUniDol)
                    .HasColumnName("VENTA_UNI_DOL")
                    .HasColumnType("decimal(25, 9)")
                    .HasComputedColumnSql("([precio_venta] / [tipo_cambio])");
            });

            modelBuilder.Entity<Winy254>(entity =>
            {
                entity.HasKey(e => e.Rif)
                    .HasName("PK_winy252");

                entity.ToTable("WINY254");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Ciudad)
                    .HasColumnName("CIUDAD")
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Direccion3)
                    .HasColumnName("DIRECCION3")
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Direccionc1)
                    .HasColumnName("DIRECCIONC1")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccionc2)
                    .HasColumnName("DIRECCIONC2")
                    .HasMaxLength(80);

                entity.Property(e => e.Direccionc3)
                    .HasColumnName("DIRECCIONC3")
                    .HasMaxLength(80);

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnName("FECHA_CREACION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaModificacion)
                    .HasColumnName("FECHA_MODIFICACION")
                    .HasColumnType("datetime");

                entity.Property(e => e.Nit)
                    .HasColumnName("NIT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("RAZON_SOCIAL")
                    .HasMaxLength(80)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TImpuesto)
                    .HasColumnName("T_IMPUESTO")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.UsuarioCreacion)
                    .HasColumnName("USUARIO_CREACION")
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModificacion)
                    .HasColumnName("USUARIO_MODIFICACION")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Winy255>(entity =>
            {
                entity.HasKey(e => e.Codigo)
                    .HasName("PK_WINY253");

                entity.ToTable("WINY255");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CuentaContab)
                    .HasColumnName("CUENTA_CONTAB")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Winy256>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY256");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWiny256_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAnulado).HasColumnType("datetime");

                entity.Property(e => e.FechaCreado).HasColumnType("datetime");

                entity.Property(e => e.HoraAnulado)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.HoraCreado)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones).HasColumnType("text");

                entity.Property(e => e.Orden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Producto)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrAnulo)
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.UsrCreo)
                    .HasMaxLength(12)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Winy257>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WINY257");

                entity.HasIndex(e => e.Usuario)
                    .HasName("IX_WINY257_1");

                entity.HasIndex(e => new { e.Usuario, e.FacturaRepetir })
                    .HasName("IX_WINY257")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.FacturaEmb)
                    .HasColumnName("FACTURA_EMB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FacturaRepetir).HasColumnName("FACTURA_REPETIR");

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaNota)
                    .HasColumnName("FECHA_NOTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NcFacturar).HasColumnName("NC_FACTURAR");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Winy260>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitud, e.Orden, e.IdProducto });

                entity.ToTable("WINY260");

                entity.HasComment("Solicitud de Aprobacion Facturacion Miscelanea");

                entity.Property(e => e.IdSolicitud).ValueGeneratedOnAdd();

                entity.Property(e => e.IdProducto).HasMaxLength(20);

                entity.Property(e => e.FechaAprobacion).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaProceso).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaSolicitud).HasColumnType("smalldatetime");

                entity.Property(e => e.IdAprobador).HasMaxLength(20);

                entity.Property(e => e.IdSolicitante).HasMaxLength(20);

                entity.Property(e => e.IdUsuarioProceso).HasMaxLength(20);

                entity.Property(e => e.MotivoSolicitud).HasMaxLength(150);
            });

            modelBuilder.Entity<Winy261>(entity =>
            {
                entity.HasKey(e => new { e.IdEstado, e.IdMunicipio });

                entity.ToTable("WINY261");

                entity.HasComment("Coletilla de Patente por Municipio");

                entity.Property(e => e.IdEstado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("Codigo de Estado (Entidad Federal)");

                entity.Property(e => e.IdMunicipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .HasComment("Codigo de Municipio (Alcaldia)");

                entity.Property(e => e.Coletilla).HasMaxLength(79);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("smalldatetime")
                    .HasComment("Fecha de Mantenimiento");

                entity.Property(e => e.IdUsuarioRegistro)
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')")
                    .HasComment("Usuario que Realizo el Mantenimiento");
            });

            modelBuilder.Entity<Wity017>(entity =>
            {
                entity.HasKey(e => e.IdPais);

                entity.ToTable("WITY017");

                entity.Property(e => e.IdPais).HasMaxLength(2);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombrePais)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Wity018>(entity =>
            {
                entity.HasKey(e => e.IdEmpresa);

                entity.ToTable("WITY018");

                entity.Property(e => e.IdEmpresa).HasMaxLength(5);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdPais)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.NombreEmpresa)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.IdPaisNavigation)
                    .WithMany(p => p.Wity018)
                    .HasForeignKey(d => d.IdPais)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WITY018_WITY017");
            });

            modelBuilder.Entity<Wity019>(entity =>
            {
                entity.HasKey(e => new { e.IdEmpresa, e.IdPrograma, e.IdUsuario });

                entity.ToTable("WITY019");

                entity.Property(e => e.IdEmpresa).HasMaxLength(5);

                entity.Property(e => e.IdUsuario)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FlagEliminado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagGeneral)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.IdEmpresaNavigation)
                    .WithMany(p => p.Wity019)
                    .HasForeignKey(d => d.IdEmpresa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WITY019_WITY018");

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.Wity019)
                    .HasForeignKey(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WITY019_WITY019");
            });

            modelBuilder.Entity<Wity020>(entity =>
            {
                entity.HasKey(e => e.Idcon);

                entity.ToTable("WITY020");

                entity.HasIndex(e => e.Idcon)
                    .HasName("IX_WITY020");

                entity.Property(e => e.Idcon)
                    .HasColumnName("IDCON")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Utilizado)
                    .HasColumnName("UTILIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wity021>(entity =>
            {
                entity.HasKey(e => e.Usuario);

                entity.ToTable("WITY021");

                entity.HasComment("Informacion del Nombre de usuario");

                entity.HasIndex(e => e.Email)
                    .HasName("IX_WITY021_3");

                entity.HasIndex(e => e.Idusuario)
                    .HasName("IX_WITY021_2");

                entity.HasIndex(e => e.UsuarioDominio)
                    .HasName("IX_WITY021_1");

                entity.HasIndex(e => new { e.Usuario, e.Clave })
                    .HasName("IX_WITY021");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.An8).HasColumnName("AN8");

                entity.Property(e => e.ClasificacionUsuario)
                    .IsRequired()
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Clave)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ClaveOculta)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ConteoExpira).HasColumnName("CONTEO_EXPIRA");

                entity.Property(e => e.Email).HasMaxLength(200);

                entity.Property(e => e.EquipoImei1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipoImei2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipoImei3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaCambio)
                    .HasColumnName("FECHA_CAMBIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ficha)
                    .HasColumnName("FICHA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlagAutomata).HasMaxLength(1);

                entity.Property(e => e.FlagPersonalSistemas).HasMaxLength(1);

                entity.Property(e => e.Idoficina)
                    .HasColumnName("IDOFICINA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Idusuario)
                    .HasColumnName("IDUsuario")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Imei1)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Imei2)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Imei3)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Inactivo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Intentosfallidos)
                    .HasColumnName("INTENTOSFALLIDOS")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreUsuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsuarioDominio)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wity021activos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WITY021ACTIVOS");

                entity.Property(e => e.An8).HasColumnName("AN8");

                entity.Property(e => e.ClasificacionUsuario)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Clave)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ClaveOculta)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ConteoExpira).HasColumnName("CONTEO_EXPIRA");

                entity.Property(e => e.Email).HasMaxLength(200);

                entity.Property(e => e.EquipoImei1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoImei3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCambio)
                    .HasColumnName("FECHA_CAMBIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ficha)
                    .HasColumnName("FICHA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlagAutomata).HasMaxLength(1);

                entity.Property(e => e.FlagPersonalSistemas).HasMaxLength(1);

                entity.Property(e => e.Idoficina).HasColumnName("IDOFICINA");

                entity.Property(e => e.Idusuario).HasColumnName("IDUsuario");

                entity.Property(e => e.Imei1)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei2)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Imei3)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Inactivo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Intentosfallidos)
                    .HasColumnName("INTENTOSFALLIDOS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NombreUsuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioDominio)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wity022>(entity =>
            {
                entity.HasKey(e => e.IdPrograma);

                entity.ToTable("WITY022");

                entity.Property(e => e.Activo).HasDefaultValueSql("((1))");

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.FlagRequerimiento).HasMaxLength(1);

                entity.Property(e => e.Link)
                    .HasColumnName("link")
                    .HasMaxLength(200);

                entity.Property(e => e.NombrePrograma)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoPrograma)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wity023>(entity =>
            {
                entity.HasKey(e => e.IdRol);

                entity.ToTable("WITY023");

                entity.Property(e => e.AbreviadoRol).HasMaxLength(50);

                entity.Property(e => e.DescripcionRol).HasDefaultValueSql("('')");

                entity.Property(e => e.NombreRol)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wity024>(entity =>
            {
                entity.HasKey(e => e.IdModulo);

                entity.ToTable("WITY024");

                entity.HasIndex(e => e.IdModulo)
                    .HasName("IX_WITY024_1");

                entity.HasIndex(e => e.IdPrograma)
                    .HasName("IX_WITY024_2");

                entity.HasIndex(e => new { e.IdModulo, e.IdPrograma })
                    .HasName("IX_WITY024");

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.FlagPortafolioReportes)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Icono)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IconoMenu)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdTipoReporte).HasDefaultValueSql("((0))");

                entity.Property(e => e.LinkModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreReporte)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RutaReporte)
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ServidorReporte).HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoLlamada)
                    .HasColumnName("TipoLLamada")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wity02425ene2018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wity024_25Ene2018");

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.FlagPortafolioReportes)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.Icono)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IconoMenu).HasMaxLength(50);

                entity.Property(e => e.IdModulo).ValueGeneratedOnAdd();

                entity.Property(e => e.LinkModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreModulo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreReporte).HasMaxLength(100);

                entity.Property(e => e.RutaReporte).HasMaxLength(500);

                entity.Property(e => e.TipoLlamada).HasColumnName("TipoLLamada");
            });

            modelBuilder.Entity<Wity025>(entity =>
            {
                entity.HasKey(e => new { e.IdRol, e.IdModulo });

                entity.ToTable("WITY025");

                entity.Property(e => e.IdRolModulo).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wity026>(entity =>
            {
                entity.HasKey(e => new { e.IdUsuario, e.IdRol });

                entity.ToTable("WITY026");

                entity.HasIndex(e => e.IdRol)
                    .HasName("IX_WITY026_1");

                entity.HasIndex(e => e.IdUsuarioRol)
                    .HasName("IX_WITY026");

                entity.Property(e => e.IdUsuarioRol).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wity027>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WITY027");

                entity.Property(e => e.Celular)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Depurar)
                    .HasColumnName("depurar")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Hora)
                    .HasColumnName("hora")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.OrigenSms)
                    .HasColumnName("origen_sms")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Texto)
                    .HasColumnName("texto")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wity028>(entity =>
            {
                entity.ToTable("WITY028");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(10, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abreviado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Cargo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Celular)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Extension)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaUpdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<Wity029>(entity =>
            {
                entity.ToTable("WITY029");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Agente)
                    .HasColumnName("AGENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Analizado)
                    .HasColumnName("ANALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Basededatos)
                    .HasColumnName("BASEDEDATOS")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Error)
                    .HasColumnName("ERROR")
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fechafin)
                    .HasColumnName("FECHAFIN")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fechainicio)
                    .HasColumnName("FECHAINICIO")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Segundos).HasColumnName("SEGUNDOS");
            });

            modelBuilder.Entity<Wity030>(entity =>
            {
                entity.HasKey(e => new { e.Usuario, e.Linea });

                entity.ToTable("WITY030");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Linea)
                    .HasColumnName("LINEA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wity031>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WITY031");

                entity.Property(e => e.Base)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ejecutar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaInicio).HasColumnType("datetime");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Procedimiento)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RegistrosActualizados).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Tabla)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wity032>(entity =>
            {
                entity.HasKey(e => e.IdTipoReporte);

                entity.ToTable("WITY032");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WITY032");

                entity.Property(e => e.IdTipoReporte).ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FlagExterno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagParametros)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagSoloParametroUsuario)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wivy191>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WIVY191");

                entity.Property(e => e.CodigoComprador)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoDepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAnulada).HasColumnType("datetime");

                entity.Property(e => e.FechaColocada).HasColumnType("datetime");

                entity.Property(e => e.FechaCompra).HasColumnType("datetime");

                entity.Property(e => e.FechaPlanta).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreComprador)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NombreDepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoOc)
                    .HasColumnName("tipo_oc")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Urgente).HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wivy192>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WIVY192");

                entity.Property(e => e.CodigoComprador)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoDepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAnulada).HasColumnType("datetime");

                entity.Property(e => e.FechaColocada).HasColumnType("datetime");

                entity.Property(e => e.FechaCompra).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreComprador)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NombreDepartamento)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoOc)
                    .HasColumnName("Tipo_OC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Urgente).HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wivy193>(entity =>
            {
                entity.HasKey(e => e.Requisicion);

                entity.ToTable("WIVY193");

                entity.Property(e => e.Requisicion).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Año).HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Comprador).HasMaxLength(50);

                entity.Property(e => e.DiasHablies).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasTranscurridos).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaOrdenCompra).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRecibidaPlanta).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRequisicion).HasColumnType("smalldatetime");

                entity.Property(e => e.Mes).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Moneda).HasMaxLength(4);

                entity.Property(e => e.OrdenCompra).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Usuario).HasMaxLength(50);
            });

            modelBuilder.Entity<Wivy194>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WIVY194");

                entity.Property(e => e.Año).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Comprador)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DifRePenProYt).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Mes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PorcRendimiento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqAnulMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqPenMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqPenYt).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqProYt).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqProcMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqRecMes).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wivy195>(entity =>
            {
                entity.ToTable("WIVY195");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Año).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Comprador)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Mes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Pdlttr)
                    .HasColumnName("pdlttr")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Pdnxtr)
                    .HasColumnName("pdnxtr")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Requisicion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Usuario).HasMaxLength(50);
            });

            modelBuilder.Entity<Wivy196>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WIVY196");

                entity.Property(e => e.Articulo)
                    .HasColumnName("ARTICULO")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cantidadrecibida)
                    .HasColumnName("CANTIDADRECIBIDA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidadsolicitada)
                    .HasColumnName("CANTIDADSOLICITADA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cia)
                    .HasColumnName("CIA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Comprador)
                    .HasColumnName("COMPRADOR")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion1)
                    .HasColumnName("DESCRIPCION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion2)
                    .HasColumnName("DESCRIPCION2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Diasatraso)
                    .HasColumnName("DIASATRASO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Diasentrega)
                    .HasColumnName("DIASENTREGA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fechaactualizacion)
                    .HasColumnName("FECHAACTUALIZACION")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fechadecolocacionoc)
                    .HasColumnName("FECHADECOLOCACIONOC")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fechadesde)
                    .HasColumnName("FECHADESDE")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fechaentregasolicitada)
                    .HasColumnName("FECHAENTREGASOLICITADA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fechahasta)
                    .HasColumnName("FECHAHASTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fechaordendecompra)
                    .HasColumnName("FECHAORDENDECOMPRA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Fecharecepcionplanta)
                    .HasColumnName("FECHARECEPCIONPLANTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Lineaordendecompra)
                    .HasColumnName("LINEAORDENDECOMPRA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Linearequisicion)
                    .HasColumnName("LINEAREQUISICION")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Lote)
                    .HasColumnName("LOTE")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Montorecibido)
                    .HasColumnName("MONTORECIBIDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Nombrecomprador)
                    .HasColumnName("NOMBRECOMPRADOR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombreproveedor)
                    .HasColumnName("NOMBREPROVEEDOR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ordendecompra)
                    .HasColumnName("ORDENDECOMPRA")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Proveedor)
                    .HasColumnName("PROVEEDOR")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Requisicion)
                    .HasColumnName("REQUISICION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipooc)
                    .HasColumnName("TIPOOC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tiporequisicion)
                    .HasColumnName("TIPOREQUISICION")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidademedida)
                    .HasColumnName("UNIDADEMEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unitario)
                    .HasColumnName("UNITARIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wpey222>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPEY222");

                entity.Property(e => e.CodigoPapel)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.FechaConsumo).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Kilos).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombrePapel)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpey223>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_WPEY22");

                entity.ToTable("WPEY223");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.NombreMaquina)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NombreTipoMaquina)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry216>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY216");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreSoporte)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry217>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY217");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreMotivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry218>(entity =>
            {
                entity.HasKey(e => e.IdEstatus);

                entity.ToTable("WPRY218");

                entity.Property(e => e.IdEstatus).ValueGeneratedNever();

                entity.Property(e => e.Abreviado)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Aprobada).HasMaxLength(1);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreEstatus)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Rechazada).HasMaxLength(1);

                entity.Property(e => e.Tct)
                    .HasColumnName("TCT")
                    .HasMaxLength(1);

                entity.Property(e => e.Tctestatus)
                    .HasColumnName("TCTEstatus")
                    .HasMaxLength(50);

                entity.Property(e => e.Tcttitulo)
                    .HasColumnName("TCTTitulo")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry219>(entity =>
            {
                entity.HasKey(e => new { e.IdConsulta, e.Orden, e.Job });

                entity.ToTable("WPRY219");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wpry219orden");

                entity.Property(e => e.IdConsulta).ValueGeneratedOnAdd();

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Comentario).HasColumnType("text");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FechaSolicitud).HasColumnType("datetime");

                entity.Property(e => e.FlagMineria)
                    .HasColumnName("flag_mineria")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wpry220>(entity =>
            {
                entity.HasKey(e => new { e.IdConsulta, e.IdEstatus });

                entity.ToTable("WPRY220");

                entity.Property(e => e.Comentarios).HasColumnType("text");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FechaStandBy).HasColumnType("datetime");

                entity.Property(e => e.IdDetalleConsulta).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry221>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY221");

                entity.Property(e => e.IdResponsable).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry222>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY222");

                entity.Property(e => e.Descripcion).HasColumnType("text");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.IdPenalizacion).ValueGeneratedOnAdd();

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry223>(entity =>
            {
                entity.ToTable("WPRY223");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wpry223orden");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FechaArchivo).HasColumnType("datetime");

                entity.Property(e => e.FechaDespacho).HasColumnType("datetime");

                entity.Property(e => e.FechaEestiAcab)
                    .HasColumnName("FechaEEstiAcab")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiCole)
                    .HasColumnName("FechaEEstiCole")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiEmba)
                    .HasColumnName("FechaEEstiEmba")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiPlan)
                    .HasColumnName("FechaEEstiPlan")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiPrel)
                    .HasColumnName("FechaEEstiPrel")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiPren)
                    .HasColumnName("FechaEEstiPren")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEestiProg)
                    .HasColumnName("FechaEEstiProg")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaErealAcab)
                    .HasColumnName("FechaERealAcab")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealCole)
                    .HasColumnName("FechaERealCole")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealEmba)
                    .HasColumnName("FechaERealEmba")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealPlan)
                    .HasColumnName("FechaERealPlan")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealPrel)
                    .HasColumnName("FechaERealPrel")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealPren)
                    .HasColumnName("FechaERealPren")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaErealProg)
                    .HasColumnName("FechaERealProg")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida).HasColumnType("datetime");

                entity.Property(e => e.FechaRecibida)
                    .HasColumnName("fecha_recibida")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiAcab)
                    .HasColumnName("FechaSEstiAcab")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiCole)
                    .HasColumnName("FechaSEstiCole")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiEmba)
                    .HasColumnName("FechaSEstiEmba")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiPlan)
                    .HasColumnName("FechaSEstiPlan")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiPrel)
                    .HasColumnName("FechaSEstiPrel")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiPren)
                    .HasColumnName("FechaSEstiPren")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSestiProg)
                    .HasColumnName("FechaSEstiProg")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealAcab)
                    .HasColumnName("FechaSRealAcab")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealCole)
                    .HasColumnName("FechaSRealCole")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealEmba)
                    .HasColumnName("FechaSRealEmba")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealPlan)
                    .HasColumnName("FechaSRealPlan")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealPrel)
                    .HasColumnName("FechaSRealPrel")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealPren)
                    .HasColumnName("FechaSRealPren")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaSrealProg)
                    .HasColumnName("FechaSRealProg")
                    .HasColumnType("datetime");

                entity.Property(e => e.Job).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Linea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry224>(entity =>
            {
                entity.HasKey(e => e.IdTipoOrden);

                entity.ToTable("WPRY224");

                entity.Property(e => e.IdTipoOrden)
                    .HasColumnName("ID_TIPO_ORDEN")
                    .ValueGeneratedNever();

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoOrden)
                    .HasColumnName("TIPO_ORDEN")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry225>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Job });

                entity.ToTable("WPRY225");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wpry225orden");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Job).HasColumnName("JOB");

                entity.Property(e => e.CodColectora).HasColumnName("COD_COLECTORA");

                entity.Property(e => e.CodPrensa).HasColumnName("COD_PRENSA");

                entity.Property(e => e.CodigoCliente).HasColumnName("CODIGO_CLIENTE");

                entity.Property(e => e.DiasAtraAcab).HasColumnName("DIAS_ATRA_ACAB");

                entity.Property(e => e.DiasAtraCole).HasColumnName("DIAS_ATRA_COLE");

                entity.Property(e => e.DiasAtraEmba).HasColumnName("DIAS_ATRA_EMBA");

                entity.Property(e => e.DiasAtraPlan).HasColumnName("DIAS_ATRA_PLAN");

                entity.Property(e => e.DiasAtraPrel).HasColumnName("DIAS_ATRA_PREL");

                entity.Property(e => e.DiasAtraPren).HasColumnName("DIAS_ATRA_PREN");

                entity.Property(e => e.DiasAtraProg).HasColumnName("DIAS_ATRA_PROG");

                entity.Property(e => e.DiaseAcab).HasColumnName("DIASE_ACAB");

                entity.Property(e => e.DiaseCole).HasColumnName("DIASE_COLE");

                entity.Property(e => e.DiaseEmba).HasColumnName("DIASE_EMBA");

                entity.Property(e => e.DiaseOrden).HasColumnName("DIASE_ORDEN");

                entity.Property(e => e.DiasePlan).HasColumnName("DIASE_PLAN");

                entity.Property(e => e.DiasePrel).HasColumnName("DIASE_PREL");

                entity.Property(e => e.DiasePren).HasColumnName("DIASE_PREN");

                entity.Property(e => e.DiaseProg).HasColumnName("DIASE_PROG");

                entity.Property(e => e.DiasrAcab).HasColumnName("DIASR_ACAB");

                entity.Property(e => e.DiasrCole).HasColumnName("DIASR_COLE");

                entity.Property(e => e.DiasrEmba).HasColumnName("DIASR_EMBA");

                entity.Property(e => e.DiasrOrden).HasColumnName("DIASR_ORDEN");

                entity.Property(e => e.DiasrPlan).HasColumnName("DIASR_PLAN");

                entity.Property(e => e.DiasrPrel).HasColumnName("DIASR_PREL");

                entity.Property(e => e.DiasrPren).HasColumnName("DIASR_PREN");

                entity.Property(e => e.DiasrProg).HasColumnName("DIASR_PROG");

                entity.Property(e => e.EstacionActual)
                    .HasColumnName("ESTACION_ACTUAL")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EstadoOrden)
                    .HasColumnName("ESTADO_ORDEN")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstatusOrden)
                    .HasColumnName("ESTATUS_ORDEN")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Familia)
                    .HasColumnName("FAMILIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaArchivo)
                    .HasColumnName("FECHA_ARCHIVO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnName("FECHA_ENTREGA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeeAcab)
                    .HasColumnName("FECHAEE_ACAB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeeCole)
                    .HasColumnName("FECHAEE_COLE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeeEmba)
                    .HasColumnName("FECHAEE_EMBA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeePlan)
                    .HasColumnName("FECHAEE_PLAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeePrel)
                    .HasColumnName("FECHAEE_PREL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeePren)
                    .HasColumnName("FECHAEE_PREN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaeeProg)
                    .HasColumnName("FECHAEE_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerAcab)
                    .HasColumnName("FECHAER_ACAB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerCole)
                    .HasColumnName("FECHAER_COLE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerEmba)
                    .HasColumnName("FECHAER_EMBA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerPlan)
                    .HasColumnName("FECHAER_PLAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerPrel)
                    .HasColumnName("FECHAER_PREL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerPren)
                    .HasColumnName("FECHAER_PREN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaerProg)
                    .HasColumnName("FECHAER_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaseAcab)
                    .HasColumnName("FECHASE_ACAB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaseCole)
                    .HasColumnName("FECHASE_COLE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaseEmba)
                    .HasColumnName("FECHASE_EMBA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasePlan)
                    .HasColumnName("FECHASE_PLAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasePrel)
                    .HasColumnName("FECHASE_PREL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasePren)
                    .HasColumnName("FECHASE_PREN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaseProg)
                    .HasColumnName("FECHASE_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrAcab)
                    .HasColumnName("FECHASR_ACAB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrCole)
                    .HasColumnName("FECHASR_COLE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrEmba)
                    .HasColumnName("FECHASR_EMBA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrPlan)
                    .HasColumnName("FECHASR_PLAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrPrel)
                    .HasColumnName("FECHASR_PREL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrPren)
                    .HasColumnName("FECHASR_PREN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechasrProg)
                    .HasColumnName("FECHASR_PROG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linea)
                    .HasColumnName("LINEA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.NuevaFechaEntrega)
                    .HasColumnName("NUEVA_FECHA_ENTREGA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PasaAcab)
                    .HasColumnName("PASA_ACAB")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PasaCole)
                    .HasColumnName("PASA_COLE")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PasaPrel)
                    .HasColumnName("PASA_PREL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PasaProg)
                    .HasColumnName("PASA_PROG")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoProducto)
                    .HasColumnName("TIPO_PRODUCTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry226>(entity =>
            {
                entity.HasKey(e => new { e.IdEstacion, e.IdMotivo });

                entity.ToTable("WPRY226");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry227>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Job });

                entity.ToTable("WPRY227");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Job).HasColumnName("JOB");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AprobadoProduccion)
                    .HasColumnName("APROBADO_PRODUCCION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AprobadoSoporteVenta)
                    .HasColumnName("APROBADO_SOPORTE_VENTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodCliente).HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodMotivo).HasColumnName("COD_MOTIVO");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodVendedor)
                    .IsRequired()
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.IdTipoSolicitud).HasColumnName("ID_TIPO_SOLICITUD");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("MOTIVO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .IsRequired()
                    .HasColumnName("OFICINA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RechazadoProduccion)
                    .HasColumnName("RECHAZADO_PRODUCCION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RechazadoSoporteVenta)
                    .HasColumnName("RECHAZADO_SOPORTE_VENTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TipoSolicitud)
                    .IsRequired()
                    .HasColumnName("TIPO_SOLICITUD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TotalSolicitudes)
                    .HasColumnName("TOTAL_SOLICITUDES")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Trimestre).HasColumnName("TRIMESTRE");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry228>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Job });

                entity.ToTable("WPRY228");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Job).HasColumnName("JOB");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AprobadoProduccion)
                    .HasColumnName("APROBADO_PRODUCCION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AprobadoSoporteVenta)
                    .HasColumnName("APROBADO_SOPORTE_VENTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cliente)
                    .IsRequired()
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodCliente).HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodMotivo).HasColumnName("COD_MOTIVO");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodVendedor)
                    .IsRequired()
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Dia).HasColumnName("DIA");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("MOTIVO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .IsRequired()
                    .HasColumnName("OFICINA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RechazadoProduccion)
                    .HasColumnName("RECHAZADO_PRODUCCION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RechazadoSoporteVenta)
                    .HasColumnName("RECHAZADO_SOPORTE_VENTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TotalSolicitudes)
                    .HasColumnName("TOTAL_SOLICITUDES")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Trimestre).HasColumnName("TRIMESTRE");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry229>(entity =>
            {
                entity.HasKey(e => e.IdSolicitud);

                entity.ToTable("WPRY229");

                entity.HasComment("Datos generales de las solicitudes");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_WPRY229_1");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WPRY229")
                    .IsUnique();

                entity.Property(e => e.CantidadProducto).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.DescripcionSolicitud)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaSolicitud)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagFiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagNoTieneDiseno).HasDefaultValueSql("((0))");

                entity.Property(e => e.Instrucciones)
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumDesde)
                    .HasMaxLength(8)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumHasta)
                    .HasMaxLength(8)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumeroControlDesde).HasMaxLength(8);

                entity.Property(e => e.NumeroControlHasta).HasMaxLength(8);

                entity.Property(e => e.NumeroFormatoDesde).HasMaxLength(8);

                entity.Property(e => e.NumeroFormatoHasta).HasMaxLength(8);

                entity.Property(e => e.NumeroSdf)
                    .HasColumnName("NumeroSDF")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieControlDesde)
                    .HasMaxLength(2)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieControlHasta)
                    .HasMaxLength(2)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieFormatoDesde).HasMaxLength(10);

                entity.Property(e => e.NumeroSerieFormatoHasta).HasMaxLength(10);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.OrdenAnterior).HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValorLista")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValorVenta")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.TalonExtra).HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoDocumento).HasMaxLength(2);

                entity.Property(e => e.ValorLista).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValorVenta).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValorVentaUsd).HasColumnType("numeric(18, 4)");

                entity.HasOne(d => d.CotizacionNavigation)
                    .WithMany(p => p.Wpry229)
                    .HasForeignKey(d => d.Cotizacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WPRY229_WSMY501");
            });

            modelBuilder.Entity<Wpry229log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY229Log");

                entity.HasComment("Datos generales de las solicitudes");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wpry229logorden");

                entity.Property(e => e.CantidadProducto).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.DescripcionSolicitud)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaSolicitud).HasColumnType("datetime");

                entity.Property(e => e.FlagFiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagNoTieneDiseno).HasDefaultValueSql("((0))");

                entity.Property(e => e.Instrucciones).HasMaxLength(1000);

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumDesde).HasMaxLength(8);

                entity.Property(e => e.NumHasta).HasMaxLength(8);

                entity.Property(e => e.NumeroControlDesde).HasMaxLength(8);

                entity.Property(e => e.NumeroControlHasta).HasMaxLength(8);

                entity.Property(e => e.NumeroFormatoDesde).HasMaxLength(8);

                entity.Property(e => e.NumeroFormatoHasta).HasMaxLength(8);

                entity.Property(e => e.NumeroSdf).HasColumnName("NumeroSDF");

                entity.Property(e => e.NumeroSerieControlDesde).HasMaxLength(2);

                entity.Property(e => e.NumeroSerieControlHasta).HasMaxLength(2);

                entity.Property(e => e.NumeroSerieFormatoDesde).HasMaxLength(10);

                entity.Property(e => e.NumeroSerieFormatoHasta).HasMaxLength(10);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.TalonExtra).HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoDocumento).HasMaxLength(2);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);

                entity.Property(e => e.ValorLista).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValorVenta).HasColumnType("numeric(18, 4)");
            });

            modelBuilder.Entity<Wpry230>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitud, e.OrdenHija })
                    .HasName("PK_WPRY230_1");

                entity.ToTable("WPRY230");

                entity.HasComment("Ordenes hijas (Combinadas)");

                entity.Property(e => e.CotizacionHija).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry231>(entity =>
            {
                entity.HasKey(e => e.IdTripa);

                entity.ToTable("WPRY231");

                entity.HasComment("Datos de la tripa");

                entity.Property(e => e.IdPapel)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdSolicitudNavigation)
                    .WithMany(p => p.Wpry231)
                    .HasForeignKey(d => d.IdSolicitud)
                    .HasConstraintName("FK_WPRY231_WPRY229");
            });

            modelBuilder.Entity<Wpry232>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdSubcategoria });

                entity.ToTable("WPRY232");

                entity.HasComment("Categorias y subcategorias del acabado por solicitud");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry232_Cotizacion");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.HasOne(d => d.CotizacionNavigation)
                    .WithMany(p => p.Wpry232)
                    .HasForeignKey(d => d.Cotizacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WPRY232_WSMY501");

                entity.HasOne(d => d.IdSubcategoriaNavigation)
                    .WithMany(p => p.Wpry232)
                    .HasForeignKey(d => d.IdSubcategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WPRY232_WPRY234");
            });

            modelBuilder.Entity<Wpry232log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY232Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry232log_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry233>(entity =>
            {
                entity.HasKey(e => e.IdCategoria)
                    .HasName("PK_ICAcabadoCategorias");

                entity.ToTable("WPRY233");

                entity.HasComment("Maestro de categorias");

                entity.Property(e => e.IdCategoria).ValueGeneratedNever();

                entity.Property(e => e.CategoriaGeneral)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LineaProducto)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCategoria)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry234>(entity =>
            {
                entity.HasKey(e => e.IdSubcategoria);

                entity.ToTable("WPRY234");

                entity.HasComment("Maestro de subcategorias");

                entity.Property(e => e.IdSubcategoria).ValueGeneratedNever();

                entity.Property(e => e.FlagEliminado)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NombreSubcategoria)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry235>(entity =>
            {
                entity.HasKey(e => e.IdTipoCantidad);

                entity.ToTable("WPRY235");

                entity.HasComment("Maestro de tipo de cantidad");

                entity.Property(e => e.IdTipoCantidad).ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagExacta)
                    .IsRequired()
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<Wpry236>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitud, e.IdStatus, e.Fecha })
                    .HasName("PK_WPRY236_1");

                entity.ToTable("WPRY236");

                entity.HasComment("Estatus de las solicitudes");

                entity.Property(e => e.IdStatus)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Observacion).HasMaxLength(500);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wpry237>(entity =>
            {
                entity.HasKey(e => new { e.IdRol, e.IdEstatus });

                entity.ToTable("WPRY237");

                entity.HasComment("Maestro de botonera");

                entity.Property(e => e.IdEstatus)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wpry238>(entity =>
            {
                entity.HasKey(e => e.IdPliego);

                entity.ToTable("WPRY238");

                entity.HasComment("Maestro de Montaje");

                entity.Property(e => e.Diseño).HasMaxLength(4);

                entity.Property(e => e.Montaje).HasMaxLength(10);
            });

            modelBuilder.Entity<Wpry239>(entity =>
            {
                entity.HasKey(e => e.IdBarniz);

                entity.ToTable("WPRY239");

                entity.HasComment("Maestro de Barniz");

                entity.Property(e => e.IdBarniz).ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion).HasMaxLength(100);

                entity.Property(e => e.Nombre).HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry240>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdParte })
                    .HasName("PK_WPRY240_1");

                entity.ToTable("WPRY240");

                entity.HasComment("Tintas por tripa");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry240_Cotizacion");

                entity.HasIndex(e => e.Orden);

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WPRY240");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.AnchoCm).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagPlaneadaIcpp).HasColumnName("FlagPlaneadaICPP");

                entity.Property(e => e.FrasesMarginales)
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdPapel)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.LargoCm).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.MedidaBase)
                    .HasColumnName("Medida_Base")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MedidaOpuesta)
                    .HasColumnName("Medida_Opuesta")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.HasOne(d => d.CotizacionNavigation)
                    .WithMany(p => p.Wpry240)
                    .HasForeignKey(d => d.Cotizacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WPRY240_WSMY501");

                entity.HasOne(d => d.IdConstruccionNavigation)
                    .WithMany(p => p.Wpry240)
                    .HasForeignKey(d => d.IdConstruccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WPRY240_WPRY242");
            });

            modelBuilder.Entity<Wpry240log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY240Log");

                entity.HasComment("Tintas por tripa");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry240log_Cotizacion");

                entity.Property(e => e.AnchoCm).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FrasesMarginales).HasMaxLength(200);

                entity.Property(e => e.IdPapel)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.LargoCm).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.MedidaBase).HasColumnName("Medida_Base");

                entity.Property(e => e.MedidaOpuesta).HasColumnName("Medida_Opuesta");

                entity.Property(e => e.Orden).HasDefaultValueSql("((0))");

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry240logCantidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY240LogCantidad");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry240logcantidad_Cotizacion");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WPRY240LogCantidad")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdParte })
                    .HasName("IX_WPRY240LogCantidad_1");

                entity.Property(e => e.CantidadAnterior).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.CantidadNueva).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wpry241>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdParte, e.IdUbicacion, e.IdTinta });

                entity.ToTable("WPRY241");

                entity.HasComment("Tintas de la portada por solicitud");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry241_Cotizacion");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WPRY241");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdParte })
                    .HasName("IX_WPRY241_1");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.IdTinta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.HasOne(d => d.CotizacionNavigation)
                    .WithMany(p => p.Wpry241)
                    .HasForeignKey(d => d.Cotizacion)
                    .HasConstraintName("FK_WPRY241_WPRY229");

                entity.HasOne(d => d.Wpry240)
                    .WithMany(p => p.Wpry241)
                    .HasForeignKey(d => new { d.Cotizacion, d.Renglon, d.Propuesta, d.IdParte })
                    .HasConstraintName("FK_WPRY241_WPRY240");
            });

            modelBuilder.Entity<Wpry241log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY241Log");

                entity.HasComment("Tintas de la portada por solicitud");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry241log_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdTinta)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry242>(entity =>
            {
                entity.HasKey(e => e.IdConstruccion);

                entity.ToTable("WPRY242");

                entity.Property(e => e.IdConstruccion).ValueGeneratedNever();

                entity.Property(e => e.Abreviado)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NombreConstruccion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry243>(entity =>
            {
                entity.HasKey(e => e.IdUbicacion);

                entity.ToTable("WPRY243");

                entity.Property(e => e.IdUbicacion).ValueGeneratedNever();

                entity.Property(e => e.AbreviadoUbicacion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AbreviadoUbicacion2)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FlagFrente)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagGeneral)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagRespaldo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreUbicacion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NombreUbicacion2)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wpry244>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdParte, e.IdUbicacion, e.IdSubCategoria });

                entity.ToTable("WPRY244");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry244_Cotizacion");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry245>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.IdOficina });

                entity.ToTable("WPRY245");

                entity.Property(e => e.IdProducto)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdOficina).HasMaxLength(2);

                entity.Property(e => e.FechaInicio).HasColumnType("datetime");

                entity.Property(e => e.FlagIc)
                    .IsRequired()
                    .HasColumnName("FlagIC")
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreContrato)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry246>(entity =>
            {
                entity.HasKey(e => e.IdTipoMedida);

                entity.ToTable("WPRY246");

                entity.Property(e => e.IdTipoMedida).ValueGeneratedNever();

                entity.Property(e => e.FlagBasica)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagOpuesta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagOpuestaCarbon)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagTalonExtra)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.TipoMedida)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Wpry247>(entity =>
            {
                entity.HasKey(e => new { e.MedidaMascara, e.IdTipoMedida })
                    .HasName("PK_WPRY247_1");

                entity.ToTable("WPRY247");

                entity.Property(e => e.MedidaMascara)
                    .HasMaxLength(6)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdMedida).ValueGeneratedOnAdd();

                entity.Property(e => e.MedidaDecimal).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.MedidaFraccion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wpry248>(entity =>
            {
                entity.HasKey(e => e.IdVariable);

                entity.ToTable("WPRY248");

                entity.Property(e => e.IdVariable)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlagGralParte)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagInactiva)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagMultipleValor)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagObligatorio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdVariableMc)
                    .IsRequired()
                    .HasColumnName("IdVariableMC")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreVariable)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry249>(entity =>
            {
                entity.HasKey(e => new { e.IdVariable, e.Valor });

                entity.ToTable("WPRY249");

                entity.Property(e => e.IdVariable).HasMaxLength(20);

                entity.Property(e => e.Valor).HasMaxLength(100);

                entity.Property(e => e.Bd)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Campo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagInactivo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagTransformacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tabla)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorTransformacion)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wpry250>(entity =>
            {
                entity.HasKey(e => new { e.CodAplicacion, e.IdVariable })
                    .HasName("PK_WPRY250_1");

                entity.ToTable("WPRY250");

                entity.Property(e => e.CodAplicacion).HasColumnName("Cod_Aplicacion");

                entity.Property(e => e.IdVariable)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry251>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdVariable, e.IdParte, e.Valor });

                entity.ToTable("WPRY251");

                entity.HasComment("");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry251_Cotizacion");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WPRY251_2");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WPRY251_1");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdVariable, e.IdParte })
                    .HasName("IX_WPRY251");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.IdVariable).HasMaxLength(20);

                entity.Property(e => e.Valor)
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wpry251log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY251Log");

                entity.HasComment("");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry251log_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdVariable)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wpry252>(entity =>
            {
                entity.HasKey(e => e.IdReporte);

                entity.ToTable("WPRY252");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreReporte)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RutaReporte)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RutaReporteVenta)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Wpry253>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.FechaEntrega });

                entity.ToTable("WPRY253");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry253_Cotizacion");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.Formas).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wpry254>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.IdTipoDocumento, e.NombreArchivo, e.FechaCreacion });

                entity.ToTable("WPRY254");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_WPRY254_2");

                entity.HasIndex(e => e.FechaCreacion)
                    .HasName("IX_WPRY254_1");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WPRY254")
                    .IsUnique();

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.IdTipoDocumento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NombreArchivo).HasMaxLength(100);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.NoReplicar).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wpry255>(entity =>
            {
                entity.ToTable("WPRY255");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWpry255_Cotizacion");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.Estatus })
                    .HasName("IX_WPRY255");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.Estatus)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wpry256>(entity =>
            {
                entity.HasKey(e => new { e.IdRol, e.IdTipoDocumento });

                entity.ToTable("WPRY256");

                entity.Property(e => e.IdTipoDocumento).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wpry257>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WPRY257");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");

                entity.Property(e => e.IdTablaCpj)
                    .HasColumnName("IdTablaCPJ")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PorcCpjdesde)
                    .HasColumnName("PorcCPJDesde")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.PorcCpjhasta)
                    .HasColumnName("PorcCPJHasta")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.PorcCypjgob)
                    .HasColumnName("PorcCYPJGob")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCypjgobMinimo)
                    .HasColumnName("PorcCYPJGobMinimo")
                    .HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<Wsmy106>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY106");

                entity.Property(e => e.AnoRegistro).HasColumnName("ANO_REGISTRO");

                entity.Property(e => e.AtencionA)
                    .HasColumnName("ATENCION_A")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CantPonche).HasColumnName("CANT_PONCHE");

                entity.Property(e => e.CantidadOrigin).HasColumnName("CANTIDAD_ORIGIN");

                entity.Property(e => e.CargoResponsab)
                    .HasColumnName("CARGO_RESPONSAB")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ClasePonche).HasColumnName("CLASE_PONCHE");

                entity.Property(e => e.CodProduc)
                    .HasColumnName("COD_PRODUC")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.CodTeleop)
                    .HasColumnName("COD_TELEOP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodigBarras)
                    .HasColumnName("CODIG_BARRAS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ComentDeCredt)
                    .HasColumnName("COMENT_DE_CREDT")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Concesion)
                    .HasColumnName("CONCESION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .HasColumnName("CORREO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Creditos)
                    .HasColumnName("CREDITOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DenBase).HasColumnName("DEN_BASE");

                entity.Property(e => e.DenDiamPonche).HasColumnName("DEN_DIAM_PONCHE");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DiaRegistro).HasColumnName("DIA_REGISTRO");

                entity.Property(e => e.DistanCcPonch)
                    .HasColumnName("DISTAN_CC_PONCH")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Division).HasColumnName("DIVISION");

                entity.Property(e => e.EntBase).HasColumnName("ENT_BASE");

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ExistenciaDura)
                    .HasColumnName("EXISTENCIA_DURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FamilProduc)
                    .HasColumnName("FAMIL_PRODUC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAceptada)
                    .HasColumnName("FECHA_ACEPTADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaConcesion)
                    .HasColumnName("FECHA_CONCESION")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaCredito)
                    .HasColumnName("FECHA_CREDITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaDeOrden)
                    .HasColumnName("FECHA_DE_ORDEN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaNegocio)
                    .HasColumnName("FECHA_NEGOCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnName("FECHA_REGISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaTasa)
                    .HasColumnName("FECHA_TASA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaTomado)
                    .HasColumnName("FECHA_TOMADO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaVendedor)
                    .HasColumnName("FECHA_VENDEDOR")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaVenta)
                    .HasColumnName("FECHA_VENTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagContrato).HasColumnName("FLAG_CONTRATO");

                entity.Property(e => e.FlagPrimEntre)
                    .HasColumnName("FLAG_PRIM_ENTRE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReplicar)
                    .HasColumnName("FLAG_REPLICAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.GruposSpidiset).HasColumnName("GRUPOS_SPIDISET");

                entity.Property(e => e.InstruccProduc)
                    .HasColumnName("INSTRUCC_PRODUC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.KeenEdge)
                    .HasColumnName("KEEN_EDGE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LineaProduc)
                    .HasColumnName("LINEA_PRODUC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ListaOriginal)
                    .HasColumnName("LISTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.ListaTotDol)
                    .HasColumnName("LISTA_TOT_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ListaUniDol)
                    .HasColumnName("LISTA_UNI_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.MedidaEngrap)
                    .HasColumnName("MEDIDA_ENGRAP")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MesRegistro).HasColumnName("MES_REGISTRO");

                entity.Property(e => e.Micr)
                    .HasColumnName("MICR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Nc)
                    .HasColumnName("NC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NumBase).HasColumnName("NUM_BASE");

                entity.Property(e => e.NumDiamPonche).HasColumnName("NUM_DIAM_PONCHE");

                entity.Property(e => e.NumForma)
                    .HasColumnName("NUM_FORMA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.ObservaciRecha)
                    .HasColumnName("OBSERVACI_RECHA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OpcionAceptada).HasColumnName("OPCION_ACEPTADA");

                entity.Property(e => e.OperacionBasic).HasColumnName("OPERACION_BASIC");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrdenAnterior).HasColumnName("ORDEN_ANTERIOR");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.OrdenSiguiente)
                    .HasColumnName("ORDEN_SIGUIENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PerMarDer)
                    .HasColumnName("PER_MAR_DER")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerMarIzq)
                    .HasColumnName("PER_MAR_IZQ")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonDer)
                    .HasColumnName("PERF_TALON_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonDern)
                    .HasColumnName("PERF_TALON_DERN")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonIzq)
                    .HasColumnName("PERF_TALON_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonIzqn)
                    .HasColumnName("PERF_TALON_IZQN")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonNin)
                    .HasColumnName("PERF_TALON_NIN")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PerfTalonOpac)
                    .HasColumnName("PERF_TALON_OPAC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PersonaRespons)
                    .HasColumnName("PERSONA_RESPONS")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.PonchHojaNAl).HasColumnName("PONCH_HOJA_N_AL");

                entity.Property(e => e.PonchHojaNEl).HasColumnName("PONCH_HOJA_N_EL");

                entity.Property(e => e.PoncheEnHojas)
                    .HasColumnName("PONCHE_EN_HOJAS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PosicionPonche).HasColumnName("POSICION_PONCHE");

                entity.Property(e => e.PrfTalOpCarb)
                    .HasColumnName("PRF_TAL_OP_CARB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ProcesoBcs)
                    .HasColumnName("PROCESO_BCS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RazonAceptada).HasColumnName("RAZON_ACEPTADA");

                entity.Property(e => e.Rechazada)
                    .HasColumnName("RECHAZADA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.Region)
                    .HasColumnName("REGION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Reinsercion)
                    .HasColumnName("REINSERCION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RlistaOriginal)
                    .HasColumnName("RLISTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtasaCambio)
                    .HasColumnName("RTASA_CAMBIO")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtasaNegociacio)
                    .HasColumnName("RTASA_NEGOCIACIO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RventaOriginal)
                    .HasColumnName("RVENTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Seguridad)
                    .HasColumnName("SEGURIDAD")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SiColetilla)
                    .HasColumnName("SI_COLETILLA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SiDolares)
                    .HasColumnName("SI_DOLARES")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SiIndexado)
                    .HasColumnName("SI_INDEXADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SobrePago)
                    .HasColumnName("SOBRE_PAGO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpdsetSuelto)
                    .HasColumnName("SPDSET_SUELTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Speedmailer)
                    .HasColumnName("SPEEDMAILER")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpotCarbon)
                    .HasColumnName("SPOT_CARBON")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetCaratula)
                    .HasColumnName("SPSET_CARATULA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetEngomado)
                    .HasColumnName("SPSET_ENGOMADO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetEngraOpu)
                    .HasColumnName("SPSET_ENGRA_OPU")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetEngraTal)
                    .HasColumnName("SPSET_ENGRA_TAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetEngrapad)
                    .HasColumnName("SPSET_ENGRAPAD")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SpsetGrupos)
                    .HasColumnName("SPSET_GRUPOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujCarbEngoma)
                    .HasColumnName("SUJ_CARB_ENGOMA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujCarbIzq)
                    .HasColumnName("SUJ_CARB_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujCarbSplk)
                    .HasColumnName("SUJ_CARB_SPLK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujCarbonDer)
                    .HasColumnName("SUJ_CARBON_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacDer)
                    .HasColumnName("SUJ_OPAC_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacIzq)
                    .HasColumnName("SUJ_OPAC_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacSpfD)
                    .HasColumnName("SUJ_OPAC_SPF_D")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacSpfI)
                    .HasColumnName("SUJ_OPAC_SPF_I")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacSpflex)
                    .HasColumnName("SUJ_OPAC_SPFLEX")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SujOpacSplock)
                    .HasColumnName("SUJ_OPAC_SPLOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Supervisor)
                    .HasColumnName("SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TalonCabeza)
                    .HasColumnName("TALON_CABEZA")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.TalonPie)
                    .HasColumnName("TALON_PIE")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.TasaCambio)
                    .HasColumnName("TASA_CAMBIO")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TasaManual)
                    .HasColumnName("TASA_MANUAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TasaNegociacio)
                    .HasColumnName("TASA_NEGOCIACIO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TipoProduc).HasColumnName("TIPO_PRODUC");

                entity.Property(e => e.TipoProduccion)
                    .HasColumnName("TIPO_PRODUCCION")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRechazo)
                    .HasColumnName("TIPO_RECHAZO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TransferTape)
                    .HasColumnName("TRANSFER_TAPE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.VentaOriginal)
                    .HasColumnName("VENTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.VentaTotDol)
                    .HasColumnName("VENTA_TOT_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentaUniDol)
                    .HasColumnName("VENTA_UNI_DOL")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.WizPoncheArch)
                    .HasColumnName("WIZ_PONCHE_ARCH")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy107>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY107");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cantidad1)
                    .HasColumnName("CANTIDAD1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cantidad2)
                    .HasColumnName("CANTIDAD2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cantidad3)
                    .HasColumnName("CANTIDAD3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.CantidadOrigin)
                    .HasColumnName("CANTIDAD_ORIGIN")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.ClienteEntrega)
                    .HasColumnName("CLIENTE_ENTREGA")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ClienteFactura)
                    .HasColumnName("CLIENTE_FACTURA")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ClienteImprimi)
                    .HasColumnName("CLIENTE_IMPRIMI")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ClienteMalo)
                    .HasColumnName("CLIENTE_MALO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Comentarios)
                    .HasColumnName("COMENTARIOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Comision1)
                    .HasColumnName("COMISION1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Comision2)
                    .HasColumnName("COMISION2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Comision3)
                    .HasColumnName("COMISION3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.CondPago).HasColumnName("COND_PAGO");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasColumnName("DIRECCION")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion1)
                    .HasColumnName("DIRECCION1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion2)
                    .HasColumnName("DIRECCION2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEntr1)
                    .HasColumnName("DIRECCION_ENTR1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEntr2)
                    .HasColumnName("DIRECCION_ENTR2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionEntre)
                    .HasColumnName("DIRECCION_ENTRE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFact1)
                    .HasColumnName("DIRECCION_FACT1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFact2)
                    .HasColumnName("DIRECCION_FACT2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccionFactu)
                    .HasColumnName("DIRECCION_FACTU")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ListaOriginal)
                    .HasColumnName("LISTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.LugarAEnviar)
                    .HasColumnName("LUGAR_A_ENVIAR")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.LugarAEnviar1)
                    .HasColumnName("LUGAR_A_ENVIAR1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.LugarAEnviar2)
                    .HasColumnName("LUGAR_A_ENVIAR2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.MetodoLista)
                    .HasColumnName("METODO_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Nuevo)
                    .HasColumnName("NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PorcMc)
                    .HasColumnName("PORC_MC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Rcomision1)
                    .HasColumnName("RCOMISION1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Rcomision2)
                    .HasColumnName("RCOMISION2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Rcomision3)
                    .HasColumnName("RCOMISION3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.RifEntregar)
                    .HasColumnName("RIF_ENTREGAR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFacturar)
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifImprimir)
                    .HasColumnName("RIF_IMPRIMIR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RlistaOriginal)
                    .HasColumnName("RLISTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalLista)
                    .HasColumnName("RTOTAL_LISTA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalLista1)
                    .HasColumnName("RTOTAL_LISTA1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalLista2)
                    .HasColumnName("RTOTAL_LISTA2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalLista3)
                    .HasColumnName("RTOTAL_LISTA3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalVenta)
                    .HasColumnName("RTOTAL_VENTA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalVenta1)
                    .HasColumnName("RTOTAL_VENTA1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalVenta2)
                    .HasColumnName("RTOTAL_VENTA2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RtotalVenta3)
                    .HasColumnName("RTOTAL_VENTA3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RventaOriginal)
                    .HasColumnName("RVENTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalLista)
                    .HasColumnName("TOTAL_LISTA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalLista1)
                    .HasColumnName("TOTAL_LISTA1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalLista2)
                    .HasColumnName("TOTAL_LISTA2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalLista3)
                    .HasColumnName("TOTAL_LISTA3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalVenta)
                    .HasColumnName("TOTAL_VENTA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalVenta1)
                    .HasColumnName("TOTAL_VENTA1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalVenta2)
                    .HasColumnName("TOTAL_VENTA2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.TotalVenta3)
                    .HasColumnName("TOTAL_VENTA3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.VentaOriginal)
                    .HasColumnName("VENTA_ORIGINAL")
                    .HasColumnType("decimal(14, 4)");
            });

            modelBuilder.Entity<Wsmy108>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY108");

                entity.Property(e => e.ArchivoDiseno)
                    .HasColumnName("ARCHIVO_DISENO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BajoTiro)
                    .HasColumnName("BAJO_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Cambios)
                    .HasColumnName("CAMBIOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CambiosCopy)
                    .HasColumnName("CAMBIOS_COPY")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CambiosEspecif)
                    .HasColumnName("CAMBIOS_ESPECIF")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CantNumExt).HasColumnName("CANT_NUM_EXT");

                entity.Property(e => e.Cantidad1)
                    .HasColumnName("CANTIDAD1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cantidad2)
                    .HasColumnName("CANTIDAD2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cantidad3)
                    .HasColumnName("CANTIDAD3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("CODIGO_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.CondNumExtra)
                    .HasColumnName("COND_NUM_EXTRA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DenNoBase).HasColumnName("DEN_NO_BASE");

                entity.Property(e => e.EfectosDArte)
                    .HasColumnName("EFECTOS_D_ARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Embossing)
                    .HasColumnName("EMBOSSING")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.EntNoBase).HasColumnName("ENT_NO_BASE");

                entity.Property(e => e.Faltante)
                    .HasColumnName("FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FamiliaProduct)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Fiscal)
                    .HasColumnName("FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Foil)
                    .HasColumnName("FOIL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FraseMarginal)
                    .HasColumnName("FRASE_MARGINAL")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ImpresioDCons)
                    .HasColumnName("IMPRESIO_D_CONS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LineaProducto)
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Micr)
                    .HasColumnName("MICR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Muestra)
                    .HasColumnName("MUESTRA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NoForma)
                    .HasColumnName("NO_FORMA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.NombreDeForma)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.NuevaExacta)
                    .HasColumnName("NUEVA_EXACTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NumEnCarbon).HasColumnName("NUM_EN_CARBON");

                entity.Property(e => e.NumEnRojo).HasColumnName("NUM_EN_ROJO");

                entity.Property(e => e.NumNoBase).HasColumnName("NUM_NO_BASE");

                entity.Property(e => e.NumeracionDe)
                    .HasColumnName("NUMERACION_DE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumeracionHast)
                    .HasColumnName("NUMERACION_HAST")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones).HasColumnName("OBSERVACIONES");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.OrdenAnterior).HasColumnName("ORDEN_ANTERIOR");

                entity.Property(e => e.OrdenComb)
                    .HasColumnName("ORDEN_COMB")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Partes).HasColumnName("PARTES");

                entity.Property(e => e.PosNum)
                    .HasColumnName("POS_NUM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PrecioListM1)
                    .HasColumnName("PRECIO_LIST_M1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.PrecioListaM2)
                    .HasColumnName("PRECIO_LISTA_M2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.PrecioListaM3)
                    .HasColumnName("PRECIO_LISTA_M3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.PrecioVentaM1)
                    .HasColumnName("PRECIO_VENTA_M1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.PrecioVentaM2)
                    .HasColumnName("PRECIO_VENTA_M2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.PrecioVentaM3)
                    .HasColumnName("PRECIO_VENTA_M3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Prefijo)
                    .HasColumnName("PREFIJO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Prueba)
                    .HasColumnName("PRUEBA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.RprecioListaM2)
                    .HasColumnName("RPRECIO_LISTA_M2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RprecioListaM3)
                    .HasColumnName("RPRECIO_LISTA_M3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RprecioVentaM1)
                    .HasColumnName("RPRECIO_VENTA_M1")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RprecioVentaM2)
                    .HasColumnName("RPRECIO_VENTA_M2")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.RprecioVentaM3)
                    .HasColumnName("RPRECIO_VENTA_M3")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.SobreTiro)
                    .HasColumnName("SOBRE_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Sufijo)
                    .HasColumnName("SUFIJO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoNum)
                    .HasColumnName("TIPO_NUM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProducto).HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.UnNumRojo)
                    .HasColumnName("UN_NUM_ROJO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UnaPerforacion)
                    .HasColumnName("UNA_PERFORACION")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy109>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY109");

                entity.Property(e => e.Abreviado)
                    .HasColumnName("ABREVIADO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.BasePapel).HasColumnName("BASE_PAPEL");

                entity.Property(e => e.Carbon)
                    .HasColumnName("CARBON")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CarbonSpot)
                    .HasColumnName("CARBON_SPOT")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Codcarbon)
                    .HasColumnName("CODCARBON")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoPapel).HasColumnName("CODIGO_PAPEL");

                entity.Property(e => e.ColorPapel).HasColumnName("COLOR_PAPEL");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DenMedIrreglr).HasColumnName("DEN_MED_IRREGLR");

                entity.Property(e => e.DenTalonDer).HasColumnName("DEN_TALON_DER");

                entity.Property(e => e.DenTalonIzq).HasColumnName("DEN_TALON_IZQ");

                entity.Property(e => e.EntMedIrreglr).HasColumnName("ENT_MED_IRREGLR");

                entity.Property(e => e.EntTalonDer).HasColumnName("ENT_TALON_DER");

                entity.Property(e => e.EntTalonIzq).HasColumnName("ENT_TALON_IZQ");

                entity.Property(e => e.FraseMarginal)
                    .HasColumnName("FRASE_MARGINAL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Medcarbonent)
                    .HasColumnName("MEDCARBONENT")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.MedidaCarrbon)
                    .HasColumnName("MEDIDA_CARRBON")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.NoForma)
                    .HasColumnName("NO_FORMA")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.NoPartePapel).HasColumnName("NO_PARTE_PAPEL");

                entity.Property(e => e.NumMedIrreglr).HasColumnName("NUM_MED_IRREGLR");

                entity.Property(e => e.NumTalonDer).HasColumnName("NUM_TALON_DER");

                entity.Property(e => e.NumTalonIzq).HasColumnName("NUM_TALON_IZQ");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PerforacionHor).HasColumnName("PERFORACION_HOR");

                entity.Property(e => e.PerforacionVer).HasColumnName("PERFORACION_VER");

                entity.Property(e => e.PosicionTalon).HasColumnName("POSICION_TALON");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");

                entity.Property(e => e.TintaFrente1)
                    .HasColumnName("TINTA_FRENTE1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaFrente2)
                    .HasColumnName("TINTA_FRENTE2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaFrente3)
                    .HasColumnName("TINTA_FRENTE3")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaFrente4)
                    .HasColumnName("TINTA_FRENTE4")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaFrente5)
                    .HasColumnName("TINTA_FRENTE5")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaRespaldo1)
                    .HasColumnName("TINTA_RESPALDO1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaRespaldo2)
                    .HasColumnName("TINTA_RESPALDO2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaRespaldo3)
                    .HasColumnName("TINTA_RESPALDO3")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TintaRespaldo4)
                    .HasColumnName("TINTA_RESPALDO4")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TintaRespaldo5)
                    .HasColumnName("TINTA_RESPALDO5")
                    .HasMaxLength(6)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy110>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY110");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(14, 4)");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagActivo)
                    .HasColumnName("FLAG_ACTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Job)
                    .IsRequired()
                    .HasColumnName("JOB")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)");
            });

            modelBuilder.Entity<Wsmy124>(entity =>
            {
                entity.HasKey(e => new { e.Usuario, e.Oficina });

                entity.ToTable("WSMY124");

                entity.Property(e => e.Usuario).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy125>(entity =>
            {
                entity.HasKey(e => new { e.Usuario, e.Oficina });

                entity.ToTable("WSMY125");

                entity.Property(e => e.Usuario).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy168>(entity =>
            {
                entity.HasKey(e => new { e.IdAjuste, e.Documento, e.Linea, e.Producto });

                entity.ToTable("WSMY168");

                entity.Property(e => e.IdAjuste)
                    .HasColumnName("Id_Ajuste")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Documento).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Linea).HasColumnType("decimal(4, 0)");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.FechaAjuste).HasColumnType("datetime");

                entity.Property(e => e.IdMotivoAjuste)
                    .IsRequired()
                    .HasColumnName("Id_MotivoAjuste")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NombreMaquina)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Observacion).HasColumnType("text");

                entity.Property(e => e.PorcAjustadoCic)
                    .HasColumnName("PorcAjustadoCIC")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoGc)
                    .HasColumnName("PorcAjustadoGC")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoGic)
                    .HasColumnName("PorcAjustadoGIC")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoGo)
                    .HasColumnName("PorcAjustadoGO")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoGr)
                    .HasColumnName("PorcAjustadoGR")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoTl)
                    .HasColumnName("PorcAjustadoTL")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PorcAjustadoV).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.UsuarioRed)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioSistema)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy169>(entity =>
            {
                entity.HasKey(e => new { e.IdAuto, e.IdAjuste });

                entity.ToTable("WSMY169");

                entity.Property(e => e.IdAuto).ValueGeneratedOnAdd();

                entity.Property(e => e.IdAjuste)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DescAjuste)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy170>(entity =>
            {
                entity.ToTable("WSMY170");

                entity.HasIndex(e => new { e.Desde, e.Hasta })
                    .HasName("IX_WSMY170")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DescPeriodo)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Desde).HasColumnType("datetime");

                entity.Property(e => e.Hasta).HasColumnType("datetime");
            });

            modelBuilder.Entity<Wsmy171>(entity =>
            {
                entity.HasKey(e => e.IdTipoExcepcion);

                entity.ToTable("WSMY171");

                entity.Property(e => e.NombreExcepcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy172>(entity =>
            {
                entity.HasKey(e => e.IdDetalleTipoExcepecion);

                entity.ToTable("WSMY172");

                entity.Property(e => e.AliasCampo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BaseDatos)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CampoWcom111)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Control)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DescCampo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlagBusqueda)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCampo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tabla)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy173>(entity =>
            {
                entity.HasKey(e => e.IdExcepcion);

                entity.ToTable("WSMY173");

                entity.Property(e => e.IdExcepcion).ValueGeneratedNever();

                entity.Property(e => e.FactorCic)
                    .HasColumnName("FactorCIC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorCoordinadorJobbing)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorGteIc)
                    .HasColumnName("FactorGteIC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorGteOficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorGteOp)
                    .HasColumnName("FactorGteOP")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorGteRegion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorTeamLeader)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FactorVendedor)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FlagEliminada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagIncluye)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdExcepcionRemplaza).HasDefaultValueSql("(0)");

                entity.Property(e => e.NombreMaquina)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones).HasColumnType("text");

                entity.Property(e => e.SignoCic)
                    .HasColumnName("SignoCIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoCoordinadorJobbing)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGteIc)
                    .HasColumnName("SignoGteIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGteOficina)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGteOp)
                    .HasColumnName("SignoGteOP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGteRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoTeamLeader)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoVendedor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsuarioRed)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioSistema)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ValorCic)
                    .HasColumnName("ValorCIC")
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorCoordinadorJobbing)
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorGteIc)
                    .HasColumnName("ValorGteIC")
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGteOficina)
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGteOp)
                    .HasColumnName("ValorGteOP")
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGteRegion)
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorTeamLeader)
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorVendedor)
                    .HasColumnType("numeric(16, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.VigenteDesde).HasColumnType("datetime");

                entity.Property(e => e.VigenteHasta).HasColumnType("datetime");
            });

            modelBuilder.Entity<Wsmy174>(entity =>
            {
                entity.HasKey(e => e.IdDetalleExcepcion);

                entity.ToTable("WSMY174");

                entity.Property(e => e.Operador)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Valor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy175>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY175");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.IdCoordImpCom)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdCoordinadorJobbing)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdGteCanales)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdGteImpCom)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy260>(entity =>
            {
                entity.HasKey(e => e.NroCotizacion);

                entity.ToTable("WSMY260");

                entity.HasIndex(e => e.CotizacionOriginal)
                    .HasName("DepWsmy260_Cotizacion_Original");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy260_Nro_Cotizacion");

                entity.HasIndex(e => new { e.CotizacionOriginal, e.Renglon, e.Estacion })
                    .HasName("IX_WSMY260");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.AnoActual)
                    .HasColumnName("ANO_ACTUAL")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CargoContacto)
                    .HasColumnName("CARGO_CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasColumnName("CLIENTE_NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodTeleoperador)
                    .HasColumnName("COD_TELEOPERADOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CombGrupo)
                    .HasColumnName("COMB_GRUPO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ConsecutivoCot)
                    .HasColumnName("CONSECUTIVO_COT")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ConsecutivoOrd)
                    .HasColumnName("CONSECUTIVO_ORD")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Contacto)
                    .HasColumnName("CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CotizacionOriginal)
                    .HasColumnName("COTIZACION_ORIGINAL")
                    .HasMaxLength(18);

                entity.Property(e => e.DireccionClienteEnt)
                    .HasColumnName("DIRECCION_CLIENTE_ENT")
                    .HasMaxLength(240);

                entity.Property(e => e.DireccionClienteFact)
                    .HasColumnName("DIRECCION_CLIENTE_FACT")
                    .HasMaxLength(240);

                entity.Property(e => e.EmailContacto)
                    .HasColumnName("EMAIL_CONTACTO")
                    .HasMaxLength(80);

                entity.Property(e => e.Encabezado)
                    .HasColumnName("ENCABEZADO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCot)
                    .HasColumnName("FECHA_COT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTasa)
                    .HasColumnName("FECHA_TASA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdContactos)
                    .HasColumnName("ID_CONTACTOS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MarcaCondPago)
                    .HasColumnName("MARCA_COND_PAGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MesActual)
                    .HasColumnName("MES_ACTUAL")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NomClienteEnt)
                    .HasColumnName("NOM_CLIENTE_ENT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16);

                entity.Property(e => e.Renglon).HasDefaultValueSql("((0))");

                entity.Property(e => e.RifClienteEnt)
                    .HasColumnName("RIF_CLIENTE_ENT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.Rtasa)
                    .HasColumnName("RTASA")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.Tasa)
                    .HasColumnName("TASA")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.TipoPago).HasColumnName("TIPO_PAGO");

                entity.Property(e => e.ValidCotiz)
                    .HasColumnName("VALID_COTIZ")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.EncabezadoNavigation)
                    .WithMany(p => p.Wsmy260)
                    .HasForeignKey(d => d.Encabezado)
                    .HasConstraintName("FK_WSMY260_WSMY373");
            });

            modelBuilder.Entity<Wsmy261>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta });

                entity.ToTable("WSMY261");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy261_Nro_Cotizacion");

                entity.HasIndex(e => e.NroCotizacionAnt)
                    .HasName("DepWsmy261_Nro_Cotizacion_Ant");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodReferencia)
                    .HasColumnName("COD_REFERENCIA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("Codigo_Producto")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ControlCr)
                    .HasColumnName("CONTROL_CR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EstadoPro)
                    .HasColumnName("Estado_Pro")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagAprob)
                    .HasColumnName("FLAG_APROB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagAprobExcep)
                    .HasColumnName("FLAG_APROB_EXCEP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagAprobMc)
                    .HasColumnName("FLAG_APROB_MC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NroCotizacionAnt)
                    .HasColumnName("Nro_Cotizacion_ant")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuestaAnt).HasColumnName("Nro_Propuesta_ant");

                entity.Property(e => e.NumPc)
                    .HasColumnName("Num_PC")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OperacionBasica)
                    .HasColumnName("OPERACION_BASICA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqAprobExcep)
                    .HasColumnName("REQ_APROB_EXCEP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReqAprobMc)
                    .HasColumnName("REQ_APROB_MC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReqSoporteApro)
                    .HasColumnName("REQ_SOPORTE_APRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoProducto)
                    .HasColumnName("Tipo_Producto")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UnidadCosteo)
                    .HasColumnName("Unidad_Costeo")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy262>(entity =>
            {
                entity.HasKey(e => new { e.CodigoProspecto, e.RifCliente })
                    .HasName("PK_WSMY262_1");

                entity.ToTable("WSMY262");

                entity.Property(e => e.CodigoProspecto)
                    .HasColumnName("Codigo_Prospecto")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.RifCliente)
                    .HasColumnName("Rif_Cliente")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CargoContacto)
                    .HasColumnName("Cargo_Contacto")
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVend)
                    .HasColumnName("Cod_Vend")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Contacto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccionCliente)
                    .HasColumnName("Direccion_Cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccionCliente1)
                    .HasColumnName("Direccion_Cliente1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DireccionCliente2)
                    .HasColumnName("Direccion_Cliente2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EmailCliente)
                    .HasColumnName("email_cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EmailContacto)
                    .HasColumnName("email_contacto")
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fax)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCreacion)
                    .HasColumnName("Fecha_Creacion")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomCliente)
                    .HasColumnName("Nom_Cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones).HasColumnType("ntext");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PaginaWeb)
                    .HasColumnName("Pagina_Web")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RamoNegocio)
                    .HasColumnName("Ramo_Negocio")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SectorNegocio)
                    .HasColumnName("Sector_Negocio")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SinRif)
                    .HasColumnName("Sin_Rif")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Telefono)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCliente)
                    .HasColumnName("Tipo_Cliente")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy263>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY263");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MascaraMedida)
                    .HasColumnName("Mascara_Medida")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy281>(entity =>
            {
                entity.HasKey(e => new { e.CodCondicion, e.Codigo, e.IdEstatus })
                    .HasName("PK_WSMY281_1");

                entity.ToTable("WSMY281");

                entity.Property(e => e.CodCondicion)
                    .HasColumnName("COD_CONDICION")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Codigo).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.FlagCompetencia)
                    .HasColumnName("Flag_Competencia")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagPerdidaAuto)
                    .HasColumnName("Flag_Perdida_Auto")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy283>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY283");

                entity.Property(e => e.Codigo).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy284>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal });

                entity.ToTable("WSMY284");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy284_Nro_Cotizacion");

                entity.HasIndex(e => e.SinCotizacion)
                    .HasName("DepWsmy284_Sin_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.CalcValidado)
                    .HasColumnName("Calc_Validado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CambCompForm)
                    .HasColumnName("Camb_Comp_Form")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CambCompPart)
                    .HasColumnName("Camb_Comp_Part")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CambMill)
                    .HasColumnName("Camb_Mill")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CambTinta)
                    .HasColumnName("CAMB_TINTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CantFormas)
                    .HasColumnName("Cant_Formas")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantMillares)
                    .HasColumnName("Cant_Millares")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CantidadCalcular)
                    .HasColumnName("Cantidad_Calcular")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodCombinacion)
                    .HasColumnName("Cod_Combinacion")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodDescripCliente)
                    .HasColumnName("Cod_Descrip_Cliente")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEventoComb)
                    .HasColumnName("Cod_Evento_Comb")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CombinadaMatriz)
                    .HasColumnName("Combinada_Matriz")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Conversion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescLista)
                    .HasColumnName("Desc_Lista")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionCliente)
                    .HasColumnName("Descripcion_Cliente")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DocumentoFiscal)
                    .HasColumnName("Documento_Fiscal")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCalculo)
                    .HasColumnName("Fecha_Calculo")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("FECHA_REVISION")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagCompManual)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEtiqueta)
                    .HasColumnName("FLAG_ETIQUETA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("INDICADOR DEL PRODUCTO COMO ETIQUETA");

                entity.Property(e => e.FlagHoyos)
                    .HasColumnName("FLAG_HOYOS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagRestriccion)
                    .HasColumnName("flag_restriccion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FormasMedida)
                    .HasColumnName("FORMAS_MEDIDA")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Impresiones).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ListaUnitario)
                    .HasColumnName("Lista_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.MascBasica)
                    .HasColumnName("Masc_Basica")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MascOpuesta)
                    .HasColumnName("Masc_Opuesta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MascOpuesta01)
                    .HasColumnName("Masc_Opuesta_01")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MedBasica)
                    .HasColumnName("Med_Basica")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MedOpuesta)
                    .HasColumnName("Med_Opuesta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MedOpuesta01)
                    .HasColumnName("Med_Opuesta_01")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MetodoLista)
                    .HasColumnName("METODO_LISTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MillarEquival)
                    .HasColumnName("MILLAR_EQUIVAL")
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartes).HasColumnName("Nro_Partes");

                entity.Property(e => e.NroTintas)
                    .HasColumnName("Nro_Tintas")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Recalcular)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RifCliente)
                    .HasColumnName("Rif_Cliente")
                    .HasMaxLength(12);

                entity.Property(e => e.RlistaUnitario)
                    .HasColumnName("RLista_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.RventaUnitario)
                    .HasColumnName("RVenta_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.ShortRun)
                    .HasColumnName("Short_Run")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SinCotizacion)
                    .HasColumnName("Sin_Cotizacion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SobreBajoTiro)
                    .HasColumnName("Sobre_Bajo_Tiro")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpeediSet)
                    .HasColumnName("Speedi_Set")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoOrden)
                    .HasColumnName("tipo_orden")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.ValidPapelTinta)
                    .HasColumnName("Valid_Papel_Tinta")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.VentaUnitario)
                    .HasColumnName("Venta_Unitario")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<Wsmy285>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY285");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy285_Nro_Cotizacion");

                entity.HasIndex(e => new { e.Id, e.NroCotizacion, e.NroPropuesta, e.NroCalculo })
                    .HasName("IX_WSMY285")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AplicFijVar)
                    .HasColumnName("Aplic_Fij_Var")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Calculo)
                    .HasColumnName("CALCULO")
                    .HasComputedColumnSql("(CONVERT([int],right(ltrim(rtrim([Nro_Calculo])),(3)),0))");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Carbon)
                    .HasColumnName("CARBON")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Detalle)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagNtinta)
                    .HasColumnName("flag_ntinta")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.GeneroPapel)
                    .HasColumnName("GENERO_PAPEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MedOpuesta)
                    .HasColumnName("Med_Opuesta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("MEDIDA OPUESTA");

                entity.Property(e => e.MedOpuesta01)
                    .HasColumnName("Med_Opuesta_01")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("MEDIDA OPUESTA IRREGULAR");

                entity.Property(e => e.NroCalculo)
                    .IsRequired()
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.NroRegla)
                    .HasColumnName("Nro_Regla")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ParamBasica)
                    .HasColumnName("Param_Basica")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParamCantidad)
                    .HasColumnName("Param_Cantidad")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParamGeneral)
                    .HasColumnName("Param_General")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParamOpuesta)
                    .HasColumnName("Param_Opuesta")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParamPartes)
                    .HasColumnName("Param_Partes")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RValorEvento)
                    .HasColumnName("rValor_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Recalcular)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Spot)
                    .HasColumnName("SPOT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy286>(entity =>
            {
                entity.HasKey(e => e.CodMenu);

                entity.ToTable("WSMY286");

                entity.Property(e => e.CodMenu)
                    .HasColumnName("Cod_Menu")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy287>(entity =>
            {
                entity.HasKey(e => new { e.CodMenu, e.CodSubMenu, e.CodEvento });

                entity.ToTable("WSMY287");

                entity.Property(e => e.CodMenu).HasColumnName("Cod_Menu");

                entity.Property(e => e.CodSubMenu).HasColumnName("Cod_Sub_Menu");

                entity.Property(e => e.CodEvento).HasColumnName("Cod_Evento");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Detalle)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Enlace)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy288>(entity =>
            {
                entity.HasKey(e => new { e.Correlativo, e.NroOrden, e.CodigoProduct });

                entity.ToTable("WSMY288");

                entity.HasIndex(e => e.Correlativo)
                    .HasName("IX_WSMY288_1");

                entity.HasIndex(e => e.Factura)
                    .HasName("IX_WSMY288");

                entity.HasIndex(e => e.NroOrden)
                    .HasName("IX_WSMY288_2");

                entity.Property(e => e.Correlativo)
                    .HasColumnName("CORRELATIVO")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.NroOrden)
                    .HasColumnName("NRO_ORDEN")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodigoProduct)
                    .HasColumnName("CODIGO_PRODUCT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("CÓDIGO DEL PRODUCTO");

                entity.Property(e => e.AloContable)
                    .HasColumnName("ALO_CONTABLE")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.AspiracionCliente)
                    .HasColumnName("ASPIRACION_CLIENTE")
                    .HasColumnType("ntext");

                entity.Property(e => e.Calculado)
                    .HasColumnName("CALCULADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CantidadFormas)
                    .HasColumnName("CANTIDAD_FORMAS")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CantidadProcesar)
                    .HasColumnName("CANTIDAD_PROCESAR")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CausaIq)
                    .HasColumnName("CAUSA_IQ")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClubExcelencia)
                    .HasColumnName("CLUB_EXCELENCIA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(substring([FECHA_INGRESO],(7),(4)))");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodStatus)
                    .HasColumnName("COD_STATUS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSupervisor)
                    .HasColumnName("COD_SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ComentarioConsultor)
                    .HasColumnName("COMENTARIO_CONSULTOR")
                    .HasColumnType("ntext");

                entity.Property(e => e.ComentarioSupervisor)
                    .HasColumnName("COMENTARIO_SUPERVISOR")
                    .HasColumnType("ntext");

                entity.Property(e => e.Comision)
                    .HasColumnName("COMISION")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CostoRnc)
                    .HasColumnName("COSTO_RNC")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.DescripcionIq).HasColumnName("DESCRIPCION_IQ");

                entity.Property(e => e.DestinoMaterial)
                    .HasColumnName("DESTINO_MATERIAL")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DiasCerrado)
                    .HasColumnName("DIAS_CERRADO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiasIc)
                    .HasColumnName("DIAS_IC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiasProd)
                    .HasColumnName("DIAS_PROD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiasSic)
                    .HasColumnName("DIAS_SIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiasTotal)
                    .HasColumnName("DIAS_TOTAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DireccionRetiro)
                    .HasColumnName("DIRECCION_RETIRO")
                    .HasColumnType("ntext");

                entity.Property(e => e.EstatusFactura)
                    .HasColumnName("ESTATUS_FACTURA")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FacCr)
                    .HasColumnName("FAC_CR")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FacRe)
                    .HasColumnName("FAC_RE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Factura)
                    .HasColumnName("FACTURA")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecAprobIc)
                    .HasColumnName("FEC_APROB_IC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecAprobProd)
                    .HasColumnName("FEC_APROB_PROD")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecCerrado)
                    .HasColumnName("FEC_CERRADO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecDocCompletos)
                    .HasColumnName("FEC_DOC_COMPLETOS")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecDocCompletosPv)
                    .HasColumnName("FEC_DOC_COMPLETOS_PV")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecEnvioCarta)
                    .HasColumnName("FEC_ENVIO_CARTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecEsperaDoc)
                    .HasColumnName("FEC_ESPERA_DOC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecEsperaDocPv)
                    .HasColumnName("FEC_ESPERA_DOC_PV")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecIc)
                    .HasColumnName("FEC_IC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecIngreso)
                    .HasColumnName("FEC_INGRESO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecProd)
                    .HasColumnName("FEC_PROD")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecSic)
                    .HasColumnName("FEC_SIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecSolicitudNc)
                    .HasColumnName("FEC_SOLICITUD_NC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaCr)
                    .HasColumnName("FECHA_CR")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnName("FECHA_INGRESO")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaIr)
                    .HasColumnName("FECHA_IR")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaProd)
                    .HasColumnName("FECHA_PROD")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaSic)
                    .HasColumnName("FECHA_SIC")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaSupervisor)
                    .HasColumnName("FECHA_SUPERVISOR")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormasNumeradas)
                    .HasColumnName("FORMAS_NUMERADAS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FotoNum)
                    .HasColumnName("FOTO_NUM")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HorarioRetiro)
                    .HasColumnName("HORARIO_RETIRO")
                    .HasColumnType("ntext");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.Monto)
                    .HasColumnName("MONTO")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Muestras)
                    .HasColumnName("MUESTRAS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomCliente)
                    .HasColumnName("NOM_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomSupervisor)
                    .HasColumnName("NOM_SUPERVISOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasColumnName("NOM_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartes)
                    .HasColumnName("NRO_PARTES")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.NumDesde)
                    .HasColumnName("NUM_DESDE")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.NumHasta)
                    .HasColumnName("NUM_HASTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OficinaAnt)
                    .HasColumnName("OFICINA_ANT")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Otros)
                    .HasColumnName("OTROS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PersonaContacto)
                    .HasColumnName("PERSONA_CONTACTO")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ProductoProcesar)
                    .HasColumnName("PRODUCTO_PROCESAR")
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.RCompletos)
                    .HasColumnName("R_COMPLETOS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Reenvio)
                    .HasColumnName("REENVIO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Refact)
                    .HasColumnName("REFACT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RegEnMes)
                    .HasColumnName("REG_EN_MES")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rene)
                    .HasColumnName("RENE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Responsable)
                    .HasColumnName("RESPONSABLE")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ResponsableVentas)
                    .HasColumnName("RESPONSABLE_VENTAS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SolucionNc)
                    .HasColumnName("SOLUCION_NC")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SubCausa)
                    .HasColumnName("SUB_CAUSA")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Volumen)
                    .HasColumnName("VOLUMEN")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy289>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY289");

                entity.Property(e => e.Activo)
                    .HasColumnName("ACTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CausaIq)
                    .HasColumnName("CAUSA_IQ")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy290>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY290");

                entity.Property(e => e.IdSolucion)
                    .HasColumnName("ID_SOLUCION")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.SolucionIq)
                    .HasColumnName("SOLUCION_IQ")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy291>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY291");

                entity.Property(e => e.IdReenvio)
                    .HasColumnName("ID_REENVIO")
                    .HasColumnType("decimal(9, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Reenvio)
                    .HasColumnName("REENVIO")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy292>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY292");

                entity.Property(e => e.Destino)
                    .HasColumnName("DESTINO")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDestino)
                    .HasColumnName("ID_DESTINO")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy293>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY293");

                entity.Property(e => e.Activo)
                    .HasColumnName("ACTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCausa)
                    .HasColumnName("ID_CAUSA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdSubcausa)
                    .HasColumnName("ID_SUBCAUSA")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SubCausaRnc)
                    .HasColumnName("SUB_CAUSA_RNC")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy294>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY294");

                entity.HasIndex(e => e.NroRnc)
                    .HasName("IX_WSMY294");

                entity.Property(e => e.CostoVtas)
                    .HasColumnName("COSTO_VTAS")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Monto)
                    .HasColumnName("MONTO")
                    .HasColumnType("money");

                entity.Property(e => e.NroDocumento)
                    .HasColumnName("NRO_DOCUMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroRnc)
                    .HasColumnName("NRO_RNC")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PorcRespVtas)
                    .HasColumnName("PORC_RESP_VTAS")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.RcostoVtas)
                    .HasColumnName("RCOSTO_VTAS")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rmonto)
                    .HasColumnName("RMONTO")
                    .HasColumnType("money");

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy295>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY295");

                entity.Property(e => e.Costo).HasColumnType("money");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("decimal(10, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreResponsable)
                    .HasColumnName("Nombre_Responsable")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroReporte).HasColumnName("Nro_Reporte");

                entity.Property(e => e.NroRnc)
                    .HasColumnName("Nro_RNC")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.PorcResponsabilidad).HasColumnName("Porc_Responsabilidad");

                entity.Property(e => e.Rcosto)
                    .HasColumnName("RCosto")
                    .HasColumnType("money");

                entity.Property(e => e.Responsable)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoResponsable)
                    .HasColumnName("Tipo_Responsable")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy296>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroCalculo, e.NroPropuesta, e.IdEvento });

                entity.ToTable("WSMY296");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy296_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("ID_EVENTO")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Cantidad1).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Cantidad2).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Cobro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoEvento)
                    .HasColumnName("Codigo_Evento")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesEvento)
                    .HasColumnName("Des_Evento")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescTipoEvento)
                    .HasColumnName("Desc_Tipo_Evento")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroEvento)
                    .HasColumnName("Nro_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TipoEvento)
                    .HasColumnName("Tipo_Evento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy297>(entity =>
            {
                entity.HasKey(e => new { e.CodMenu, e.CodSubMenu, e.CodDetalle });

                entity.ToTable("WSMY297");

                entity.Property(e => e.CodMenu).HasColumnName("Cod_Menu");

                entity.Property(e => e.CodSubMenu).HasColumnName("Cod_Sub_Menu");

                entity.Property(e => e.CodDetalle).HasColumnName("Cod_Detalle");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Enlace)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Parametro01)
                    .HasColumnName("Parametro_01")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy320>(entity =>
            {
                entity.HasKey(e => new { e.CodEvento, e.CodSubEvento });

                entity.ToTable("WSMY320");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("COD_SUB_EVENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTipoOrden)
                    .HasColumnName("COD_TIPO_ORDEN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ConCambios)
                    .HasColumnName("CON_CAMBIOS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescEventoAbrev)
                    .HasColumnName("DESC_EVENTO_ABREV")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy321>(entity =>
            {
                entity.ToTable("WSMY321");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AplicFijVar)
                    .HasColumnName("Aplic_Fij_Var")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodGrupEvento)
                    .HasColumnName("Cod_Grup_Evento")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodGrupSubEvento)
                    .HasColumnName("Cod_Grup_SubEvento")
                    .HasColumnType("text");

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescEvento)
                    .HasColumnName("Desc_Evento")
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescEventoAbrev)
                    .HasColumnName("Desc_Evento_Abrev")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescFiVa)
                    .HasColumnName("Desc_Fi_Va")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecValidFin)
                    .HasColumnName("Fec_Valid_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecValidIni)
                    .HasColumnName("Fec_Valid_Ini")
                    .HasColumnType("datetime");

                entity.Property(e => e.TpEvento)
                    .HasColumnName("Tp_Evento")
                    .HasColumnType("text");

                entity.Property(e => e.TpEventoUtil)
                    .HasColumnName("Tp_Evento_Util")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<Wsmy322>(entity =>
            {
                entity.HasKey(e => e.RecordNumber);

                entity.ToTable("WSMY322");

                entity.Property(e => e.RecordNumber)
                    .HasColumnName("RECORD_NUMBER")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSeccLista)
                    .HasColumnName("Cod_Secc_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("Cod_Sub_Evento")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescFiVa)
                    .HasColumnName("DESC_FI_VA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecValidFin)
                    .HasColumnName("Fec_Valid_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecValidIni)
                    .HasColumnName("Fec_Valid_Ini")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("fecha_revision")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FijoVariable)
                    .HasColumnName("Fijo_Variable")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormato1).HasColumnName("Nro_Formato1");

                entity.Property(e => e.NroFormato2).HasColumnName("Nro_Formato2");

                entity.Property(e => e.NroFormato3).HasColumnName("Nro_Formato3");

                entity.Property(e => e.NroFormato4).HasColumnName("Nro_Formato4");

                entity.Property(e => e.NroFormato5).HasColumnName("Nro_Formato5");

                entity.Property(e => e.NroFormato6).HasColumnName("Nro_Formato6");

                entity.Property(e => e.NroFormula)
                    .HasColumnName("Nro_Formula")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RvalorEvento)
                    .HasColumnName("RValor_Evento")
                    .HasColumnType("numeric(19, 4)");

                entity.Property(e => e.ValorEvento)
                    .HasColumnName("Valor_Evento")
                    .HasColumnType("numeric(19, 4)");
            });

            modelBuilder.Entity<Wsmy323>(entity =>
            {
                entity.HasKey(e => e.CodLista);

                entity.ToTable("WSMY323");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFormBasica)
                    .HasColumnName("Cod_Form_Basica")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFormOpuesta)
                    .HasColumnName("Cod_Form_Opuesta")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFormPt)
                    .HasColumnName("Cod_Form_Pt")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescLista)
                    .HasColumnName("Desc_Lista")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecValidFin)
                    .HasColumnName("Fec_Valid_Fin")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecValidIni)
                    .HasColumnName("Fec_Valid_Ini")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<Wsmy324>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY324");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy325>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.EventoMatriz, e.CodEvento, e.IdEvento });

                entity.ToTable("WSMY325");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CobrarSiNo)
                    .HasColumnName("Cobrar_SI_NO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Desde).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FlagPrincipal)
                    .HasColumnName("Flag_Principal")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Formula1).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Hasta).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Parte).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Restriccion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SustAgreg)
                    .HasColumnName("Sust_Agreg")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy326>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.EventoMatriz, e.CodEvento, e.IdEvento });

                entity.ToTable("WSMY326");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CantJuego)
                    .HasColumnName("Cant_Juego")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Condicion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Formula1).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy327>(entity =>
            {
                entity.HasKey(e => new { e.CodEvento, e.IdEvento });

                entity.ToTable("WSMY327");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CobrarSiNo)
                    .HasColumnName("Cobrar_SI_No")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Combinacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PapelBasico)
                    .HasColumnName("Papel_Basico")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RestPartes)
                    .HasColumnName("Rest_Partes")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RestVarBas)
                    .HasColumnName("Rest_Var_Bas")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ShortRun)
                    .HasColumnName("Short_Run")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SubEvento)
                    .HasColumnName("sub_evento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValUltParte)
                    .HasColumnName("Val_Ult_Parte")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VarOpaco)
                    .HasColumnName("Var_Opaco")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VarQuimico)
                    .HasColumnName("Var_Quimico")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy328>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.Id });

                entity.ToTable("WSMY328");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodFormato)
                    .HasColumnName("Cod_Formato")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoMedida).HasColumnName("Formato_Medida");

                entity.Property(e => e.Mascara)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy329>(entity =>
            {
                entity.ToTable("WSMY329");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Factor).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Medida)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy330>(entity =>
            {
                entity.ToTable("WSMY330");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantMin01)
                    .HasColumnName("CANT_MIN_01")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantMin02)
                    .HasColumnName("CANT_MIN_02")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadFin)
                    .HasColumnName("Cantidad_Fin")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadIni)
                    .HasColumnName("Cantidad_Ini")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaFin)
                    .HasColumnName("FECHA_FIN")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaInicio)
                    .HasColumnName("FECHA_INICIO")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRevision)
                    .HasColumnName("FECHA_REVISION")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagRestriccion)
                    .HasColumnName("flag_restriccion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.IdPantalla)
                    .HasColumnName("id_pantalla")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Lista).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MetodoLista)
                    .HasColumnName("METODO_LISTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Unidad)
                    .HasColumnName("UNIDAD")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy332>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.EventoMatriz, e.CodEvento, e.IdEvento });

                entity.ToTable("WSMY332");

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato1)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Formula1).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SobreCargoSino)
                    .HasColumnName("Sobre_Cargo_SINO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoNumDesde)
                    .HasColumnName("Tipo_Num_Desde")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TipoNumHasta)
                    .HasColumnName("Tipo_Num_Hasta")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TipoNumeracion)
                    .HasColumnName("Tipo_Numeracion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy333>(entity =>
            {
                entity.HasKey(e => e.IdEvento);

                entity.ToTable("WSMY333");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadDesde)
                    .HasColumnName("Cantidad_Desde")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantidadHasta)
                    .HasColumnName("Cantidad_Hasta")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEventoDesde)
                    .HasColumnName("Cod_Evento_Desde")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEventoHasta)
                    .HasColumnName("Cod_Evento_Hasta")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RestRegistros)
                    .HasColumnName("Rest_Registros")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Validacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy334>(entity =>
            {
                entity.ToTable("WSMY334");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy335>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden });

                entity.ToTable("WSMY335");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy335orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Idemodeldecol)
                    .HasColumnName("IDEMODELDECOL")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Idmarcadecol)
                    .HasColumnName("IDMARCADECOL")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Idmarcadtch)
                    .HasColumnName("IDMARCADTCH")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Idmarcaimp)
                    .HasColumnName("IDMARCAIMP")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Idmodeldtch)
                    .HasColumnName("IDMODELDTCH")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Idmodelimp)
                    .HasColumnName("IDMODELIMP")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.MarcaDecollator)
                    .HasColumnName("MARCA_DECOLLATOR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MarcaDetacher)
                    .HasColumnName("MARCA_DETACHER")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MarcaMaquina)
                    .HasColumnName("MARCA_MAQUINA")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ModeloDecollator)
                    .HasColumnName("MODELO_DECOLLATOR")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ModeloDetacher)
                    .HasColumnName("MODELO_DETACHER")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ModeloMaquina)
                    .HasColumnName("MODELO_MAQUINA")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(ltrim(rtrim([NRO_COTIZACION])) + ltrim(rtrim(right(('00' + convert(nvarchar,[NUM_PROPUESTA])),2))) + ltrim(rtrim(right(('00' + convert(nvarchar,[NUM_CALCULO])),2))))");

                entity.Property(e => e.ObservCe)
                    .HasColumnName("OBSERV_CE")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')")
                    .HasComment("Observaciones para las instrucciones especiales a planta");

                entity.Property(e => e.TipoLlenado).HasColumnName("TIPO_LLENADO");

                entity.Property(e => e.TipoMaquina).HasColumnName("TIPO_MAQUINA");
            });

            modelBuilder.Entity<Wsmy336>(entity =>
            {
                entity.ToTable("WSMY336");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Campo1)
                    .HasColumnName("CAMPO1")
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(convert(varchar,[ID]) + '-' + [DESCRIPCION])");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy337>(entity =>
            {
                entity.ToTable("WSMY337");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Campo1)
                    .HasColumnName("CAMPO1")
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(convert(varchar,[ID]) + '-' + [DESCRIPCION])");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy338>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.CodTinta });

                entity.ToTable("WSMY338");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTinta)
                    .HasColumnName("COD_TINTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy339>(entity =>
            {
                entity.ToTable("WSMY339");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(4, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy340>(entity =>
            {
                entity.ToTable("WSMY340");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(4, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy341>(entity =>
            {
                entity.HasKey(e => new { e.TipoGuia, e.Item });

                entity.ToTable("WSMY341");

                entity.Property(e => e.TipoGuia)
                    .HasColumnName("TIPO_GUIA")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Item)
                    .HasColumnName("ITEM")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.DescripLinea)
                    .HasColumnName("DESCRIP_LINEA")
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Inactivo)
                    .HasColumnName("INACTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ItemRela)
                    .HasColumnName("ITEM_RELA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Titulo)
                    .HasColumnName("TITULO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy342>(entity =>
            {
                entity.ToTable("WSMY342");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagComp)
                    .HasColumnName("FLAG_COMP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Mascara)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy343>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.Propuesta, e.Calculo, e.Orden, e.TipoVobo, e.ItemEval, e.Usuario });

                entity.ToTable("WSMY343");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY343");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy343orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(14)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Propuesta)
                    .HasColumnName("PROPUESTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Calculo)
                    .HasColumnName("CALCULO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoVobo).HasColumnName("TIPO_VOBO");

                entity.Property(e => e.ItemEval)
                    .HasColumnName("ITEM_EVAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(18)
                    .HasComputedColumnSql("(ltrim(rtrim([NRO_COTIZACION])) + ltrim(rtrim(right(('00' + convert(nvarchar,[PROPUESTA])),2))) + ltrim(rtrim(right(('00' + convert(nvarchar,[CALCULO])),2))))");

                entity.Property(e => e.Opcion1)
                    .HasColumnName("OPCION1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Opcion2)
                    .HasColumnName("OPCION2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Opcion3)
                    .HasColumnName("OPCION3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy344>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY344");

                entity.Property(e => e.CheckVerif)
                    .HasColumnName("CHECK_VERIF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdN1)
                    .HasColumnName("ID_N1")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.IdN2)
                    .HasColumnName("ID_N2")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.IdN3)
                    .HasColumnName("ID_N3")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Orden)
                    .IsRequired()
                    .HasColumnName("ORDEN")
                    .HasMaxLength(14);

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.VoboDiseno)
                    .HasColumnName("VOBO_DISENO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VoboVend)
                    .HasColumnName("VOBO_VEND")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy345>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY345");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy346>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY346");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<Wsmy347>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY347");

                entity.Property(e => e.CodigoVobo)
                    .HasColumnName("CODIGO_VOBO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.IdRol).HasColumnName("ID_ROL");
            });

            modelBuilder.Entity<Wsmy348>(entity =>
            {
                entity.HasKey(e => new { e.IdFile, e.Cotizacion, e.Propuesta, e.Calculo, e.Orden, e.Archivo });

                entity.ToTable("WSMY348");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy348orden");

                entity.Property(e => e.IdFile)
                    .HasColumnName("ID_FILE")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Propuesta)
                    .HasColumnName("PROPUESTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Calculo)
                    .HasColumnName("CALCULO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Archivo)
                    .HasColumnName("ARCHIVO")
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaTrans)
                    .HasColumnName("FECHA_TRANS")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaTransPre)
                    .HasColumnName("FECHA_TRANS_PRE")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.HoraTrans)
                    .HasColumnName("HORA_TRANS")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HoraTrasnPre)
                    .HasColumnName("HORA_TRASN_PRE")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("(ltrim(rtrim([COTIZACION])) + ltrim(rtrim(right(('00' + convert(nvarchar,[PROPUESTA])),2))) + ltrim(rtrim(right(('00' + convert(nvarchar,[CALCULO])),2))))");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RutaActual)
                    .HasColumnName("RUTA_ACTUAL")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserDiseno)
                    .HasColumnName("USER_DISENO")
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy349>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY349");

                entity.Property(e => e.Color1)
                    .HasColumnName("COLOR1")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Color2)
                    .HasColumnName("COLOR2")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Color3)
                    .HasColumnName("COLOR3")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Color4)
                    .HasColumnName("COLOR4")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumParte)
                    .HasColumnName("NUM_PARTE")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasMaxLength(14);

                entity.Property(e => e.Respaldo)
                    .HasColumnName("RESPALDO")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy350>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY350");

                entity.Property(e => e.CodMenu)
                    .HasColumnName("COD_MENU")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50);

                entity.Property(e => e.Hijo)
                    .HasColumnName("HIJO")
                    .HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Padre)
                    .HasColumnName("PADRE")
                    .HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Vinculo)
                    .HasColumnName("VINCULO")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy351>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY351");

                entity.Property(e => e.CodRol)
                    .HasColumnName("COD_ROL")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodStatus)
                    .HasColumnName("COD_STATUS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdStatus)
                    .HasColumnName("ID_STATUS")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Sucesor)
                    .HasColumnName("SUCESOR")
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy352>(entity =>
            {
                entity.HasKey(e => new { e.CodEvento, e.CodLista });

                entity.ToTable("WSMY352");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("cod_lista")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Codigo de Lista de precio");

                entity.Property(e => e.CampoValid)
                    .HasColumnName("Campo_Valid")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DetalleRegla)
                    .HasColumnName("Detalle_Regla")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValidaCantidad)
                    .HasColumnName("Valida_Cantidad")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy353>(entity =>
            {
                entity.ToTable("WSMY353");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecValidDesde)
                    .HasColumnName("Fec_Valid_desde")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecValidHasta)
                    .HasColumnName("Fec_Valid_Hasta")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagRestriccion)
                    .HasColumnName("flag_restriccion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(24, 2)");

                entity.Property(e => e.VarBasico)
                    .HasColumnName("var_basico")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy354>(entity =>
            {
                entity.ToTable("WSMY354");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaVigencia)
                    .HasColumnName("FECHA_VIGENCIA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagOrion)
                    .HasColumnName("FLAG_ORION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Keenedge)
                    .HasColumnName("KEENEDGE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LineaProducto)
                    .HasColumnName("LINEA_PRODUCTO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ShortRun)
                    .HasColumnName("SHORT_RUN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy355>(entity =>
            {
                entity.ToTable("WSMY355");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abrev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad1)
                    .HasColumnName("Cantidad_1")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEvento)
                    .IsRequired()
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Inactivo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Parametro).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy356>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden });

                entity.ToTable("WSMY356");

                entity.HasIndex(e => e.FechaVenta)
                    .HasName("IX_WSMY356_1");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_Wsmy356_num_cot");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy356orden");

                entity.HasIndex(e => new { e.Estacion, e.CredAprob, e.SaprobCred })
                    .HasName("IX_WSMY356");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.An8entregar).HasColumnName("AN8ENTREGAR");

                entity.Property(e => e.An8facturar).HasColumnName("AN8FACTURAR");

                entity.Property(e => e.AnoActual)
                    .HasColumnName("ANO_ACTUAL")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.CalculoAnt).HasColumnName("CALCULO_ANT");

                entity.Property(e => e.CantCc)
                    .HasColumnName("CANT_CC")
                    .HasDefaultValueSql("((0))")
                    .HasComment("CANTIDAD DE CAMBIOS EN COMPOSICION");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.CodCombinada)
                    .HasColumnName("COD_COMBINADA")
                    .HasMaxLength(10);

                entity.Property(e => e.CodRetencion).HasColumnName("COD_RETENCION");

                entity.Property(e => e.CodTeleop)
                    .HasColumnName("COD_TELEOP")
                    .HasMaxLength(4);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ConsecutivoOrd)
                    .HasColumnName("CONSECUTIVO_ORD")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Contacto)
                    .HasColumnName("CONTACTO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CotizacionAnt)
                    .HasColumnName("COTIZACION_ANT")
                    .HasMaxLength(14);

                entity.Property(e => e.CotizacionDef)
                    .HasColumnName("COTIZACION_DEF")
                    .HasMaxLength(28)
                    .HasComputedColumnSql("((((ltrim(rtrim([NRO_COTIZACION]))+'-')+right('000'+ltrim(rtrim(CONVERT([char],[NUM_PROPUESTA],(0)))),(3)))+'-')+right('000'+ltrim(rtrim(CONVERT([char],[NUM_CALCULO],(0)))),(3)))");

                entity.Property(e => e.CredAprob)
                    .HasColumnName("CRED_APROB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("CREDITO AUTOMATICO APROBADO");

                entity.Property(e => e.CredAuto)
                    .HasColumnName("CRED_AUTO")
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')")
                    .HasComment("FLAG APROBACION DE CREDITO AUTOMATICA");

                entity.Property(e => e.DireccionClienteEnt)
                    .HasColumnName("DIRECCION_CLIENTE_ENT")
                    .HasMaxLength(240);

                entity.Property(e => e.DireccionClienteFact)
                    .HasColumnName("DIRECCION_CLIENTE_FACT")
                    .HasMaxLength(240);

                entity.Property(e => e.EmailContacto)
                    .HasColumnName("EMAIL_CONTACTO")
                    .HasMaxLength(80);

                entity.Property(e => e.EspecifD)
                    .HasColumnName("ESPECIF_D")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Estacion)
                    .HasColumnName("ESTACION")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EstadoEntregar).HasMaxLength(2);

                entity.Property(e => e.EstadoFacturar).HasMaxLength(2);

                entity.Property(e => e.FechaArchivo)
                    .HasColumnName("FECHA_ARCHIVO")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCal)
                    .HasColumnName("FECHA_CAL")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCalculo)
                    .HasColumnName("FECHA_CALCULO")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCot)
                    .HasColumnName("FECHA_COT")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaGanada)
                    .HasColumnName("FECHA_GANADA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaOrden)
                    .HasColumnName("FECHA_ORDEN")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaReorden)
                    .HasColumnName("FECHA_REORDEN")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaScob)
                    .HasColumnName("FECHA_SCOB")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaSventas)
                    .HasColumnName("FECHA_SVENTAS")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaVenta)
                    .HasColumnName("FECHA_VENTA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagAacal)
                    .HasColumnName("FLAG_AACAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagAdj)
                    .HasColumnName("FLAG_ADJ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagCaa)
                    .HasColumnName("FLAG_CAA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagContacto)
                    .HasColumnName("FLAG_CONTACTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagEtiqueta)
                    .HasColumnName("FLAG_ETIQUETA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("INDICADOR DEL PRODUCTO COMO ETIQUETA");

                entity.Property(e => e.FlagNuevo)
                    .HasColumnName("FLAG_NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagSdiseno)
                    .HasColumnName("FLAG_SDISENO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Indica que la orden no requiere diseño");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdContactos)
                    .HasColumnName("ID_CONTACTOS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdDireccion)
                    .HasColumnName("Id_direccion")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.InstDespacho)
                    .HasColumnName("INST_DESPACHO")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')")
                    .HasComment("INSTRUCCIONES ESPECIALES PARA DESPACHO");

                entity.Property(e => e.InstPlantaVe19)
                    .HasColumnName("INST_PLANTA_VE19")
                    .HasColumnType("ntext");

                entity.Property(e => e.IntsPlanta)
                    .HasColumnName("INTS_PLANTA")
                    .HasColumnType("ntext");

                entity.Property(e => e.IntsPlanta1)
                    .HasColumnName("INTS_PLANTA1")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LineaAnt)
                    .HasColumnName("LINEA_ANT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MesActual)
                    .HasColumnName("MES_ACTUAL")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.MunicipioEntregar).HasMaxLength(2);

                entity.Property(e => e.MunicipioFacturar).HasMaxLength(2);

                entity.Property(e => e.NomClienteEnt)
                    .HasColumnName("NOM_CLIENTE_ENT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.NombCliente)
                    .HasColumnName("NOMB_CLIENTE")
                    .HasMaxLength(80);

                entity.Property(e => e.NombClienteImp)
                    .HasColumnName("NOMB_CLIENTE_IMP")
                    .HasMaxLength(80);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.ObsRetencion)
                    .HasColumnName("OBS_RETENCION")
                    .HasMaxLength(250);

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.OperBasica)
                    .HasColumnName("OPER_BASICA")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.OrdenAnt)
                    .HasColumnName("ORDEN_ANT")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrdenCompra)
                    .HasColumnName("ORDEN_COMPRA")
                    .HasMaxLength(16);

                entity.Property(e => e.PorcMc)
                    .HasColumnName("PORC_MC")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PropuestaAnt).HasColumnName("PROPUESTA_ANT");

                entity.Property(e => e.Recibocob)
                    .HasColumnName("RECIBOCOB")
                    .HasColumnType("numeric(10, 0)")
                    .HasDefaultValueSql("((0))")
                    .HasComment("Numero de recibo de cobro");

                entity.Property(e => e.RetornoCal)
                    .HasColumnName("RETORNO_CAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteEnt)
                    .HasColumnName("RIF_CLIENTE_ENT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifImprimir)
                    .HasColumnName("RIF_IMPRIMIR")
                    .HasMaxLength(12);

                entity.Property(e => e.SaprobCred)
                    .HasColumnName("SAPROB_CRED")
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')")
                    .HasComment("FLAG SOLICITUD APROBACIÓN DE CREDITO");

                entity.Property(e => e.ShortRun)
                    .HasColumnName("SHORT_RUN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoMotivo)
                    .HasColumnName("TIPO_MOTIVO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoPago).HasColumnName("TIPO_PAGO");
            });

            modelBuilder.Entity<Wsmy357>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden });

                entity.ToTable("WSMY357");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY357");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy357orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CantFormRoll)
                    .HasColumnName("CANT_FORM_ROLL")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CantMillar)
                    .HasColumnName("CANT_MILLAR")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Concesion)
                    .HasColumnName("CONCESION")
                    .HasColumnType("decimal(38, 15)")
                    .HasComputedColumnSql("((([TOTAL_LISTA_BS]-[TOTAL_VENTA_BS])/[TOTAL_LISTA_BS])*(100))");

                entity.Property(e => e.DescProd)
                    .HasColumnName("DESC_PROD")
                    .HasMaxLength(100);

                entity.Property(e => e.FechaDolar)
                    .HasColumnName("FECHA_DOLAR")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagColetilla)
                    .HasColumnName("FLAG_COLETILLA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagDolares)
                    .HasColumnName("FLAG_DOLARES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagIndexado)
                    .HasColumnName("FLAG_INDEXADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdAplicacion).HasColumnName("ID_APLICACION");

                entity.Property(e => e.MetodoLista)
                    .HasColumnName("METODO_LISTA")
                    .HasMaxLength(2);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.PrecioListaUntBs)
                    .HasColumnName("PRECIO_LISTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioListaUntBsPre)
                    .HasColumnName("PRECIO_LISTA_UNT_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioListaUntDol)
                    .HasColumnName("PRECIO_LISTA_UNT_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioListaUntDolPre)
                    .HasColumnName("PRECIO_LISTA_UNT_DOL_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioVentaUntBs)
                    .HasColumnName("PRECIO_VENTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVentaUntBsPre)
                    .HasColumnName("PRECIO_VENTA_UNT_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioVentaUntDol)
                    .HasColumnName("PRECIO_VENTA_UNT_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioVentaUntDolPre)
                    .HasColumnName("PRECIO_VENTA_UNT_DOL_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioListaUntBs)
                    .HasColumnName("RPRECIO_LISTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RprecioListaUntBsPre)
                    .HasColumnName("RPRECIO_LISTA_UNT_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioVentaUntBs)
                    .HasColumnName("RPRECIO_VENTA_UNT_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RprecioVentaUntBsPre)
                    .HasColumnName("RPRECIO_VENTA_UNT_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtasa)
                    .HasColumnName("RTASA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RtotalListaBs)
                    .HasColumnName("RTOTAL_LISTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RtotalListaBsPre)
                    .HasColumnName("RTOTAL_LISTA_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalVentaBs)
                    .HasColumnName("RTOTAL_VENTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RtotalVentaBsPre)
                    .HasColumnName("RTOTAL_VENTA_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("TASA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalListaBs)
                    .HasColumnName("TOTAL_LISTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalListaBsPre)
                    .HasColumnName("TOTAL_LISTA_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalListaDol)
                    .HasColumnName("TOTAL_LISTA_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalListaDolPre)
                    .HasColumnName("TOTAL_LISTA_DOL_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentaBs)
                    .HasColumnName("TOTAL_VENTA_BS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaBsPre)
                    .HasColumnName("TOTAL_VENTA_BS_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentaDol)
                    .HasColumnName("TOTAL_VENTA_DOL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaDolPre)
                    .HasColumnName("TOTAL_VENTA_DOL_PRE")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wsmy358>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY358");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SinConversion)
                    .HasColumnName("SIN_CONVERSION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy359>(entity =>
            {
                entity.HasKey(e => e.IdEvento);

                entity.ToTable("WSMY359");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("Id_Evento")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("Cod_Lista")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Formula1).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Formula2).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Parte).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy360>(entity =>
            {
                entity.ToTable("WSMY360");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy361>(entity =>
            {
                entity.HasKey(e => e.Regla);

                entity.ToTable("WSMY361");

                entity.Property(e => e.Regla)
                    .HasColumnName("REGLA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantJuego)
                    .HasColumnName("CANT_JUEGO")
                    .HasColumnType("numeric(5, 0)");

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<Wsmy364>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden });

                entity.ToTable("WSMY364");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY364");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy364orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CantExacta)
                    .HasColumnName("CANT_EXACTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Cantcajas)
                    .HasColumnName("CANTCAJAS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CheckHoyos)
                    .HasColumnName("CHECK_HOYOS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CheckNum)
                    .HasColumnName("CHECK_NUM")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CheckNumMag)
                    .HasColumnName("CHECK_NUM_MAG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CheckPerf)
                    .HasColumnName("CHECK_PERF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Empaque)
                    .HasColumnName("EMPAQUE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagBajoTiro)
                    .HasColumnName("FLAG_BAJO_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagCodbarra)
                    .HasColumnName("FLAG_CODBARRA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("IDENTIFICADOR DE CODIGO DE BARRA");

                entity.Property(e => e.FlagEngrape)
                    .HasColumnName("FLAG_ENGRAPE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFaltante)
                    .HasColumnName("FLAG_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagFiscal)
                    .HasColumnName("FLAG_FISCAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagNumMagnetica)
                    .HasColumnName("FLAG_NUM_MAGNETICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagPrueba)
                    .HasColumnName("FLAG_PRUEBA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagSobreTiro)
                    .HasColumnName("FLAG_SOBRE_TIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagVe19)
                    .HasColumnName("FLAG_VE19")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formasxcajas)
                    .HasColumnName("FORMASXCAJAS")
                    .HasColumnType("numeric(10, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Formaxpaq)
                    .HasColumnName("FORMAXPAQ")
                    .HasColumnType("numeric(10, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Mascara)
                    .HasColumnName("MASCARA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumCalComb).HasColumnName("NUM_CAL_COMB");

                entity.Property(e => e.NumCliDesde)
                    .HasColumnName("NUM_CLI_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumCliHasta)
                    .HasColumnName("NUM_CLI_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumControlD)
                    .HasColumnName("NUM_CONTROL_D")
                    .HasMaxLength(20);

                entity.Property(e => e.NumControlH)
                    .HasColumnName("NUM_CONTROL_H")
                    .HasMaxLength(20);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24);

                entity.Property(e => e.NumPartes).HasColumnName("NUM_PARTES");

                entity.Property(e => e.NumPlanillaCn)
                    .HasColumnName("NUM_PLANILLA_CN")
                    .HasColumnType("numeric(10, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumPropComb).HasColumnName("NUM_PROP_COMB");

                entity.Property(e => e.OrientaNum)
                    .HasColumnName("ORIENTA_NUM")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.ParteNumMag)
                    .HasColumnName("PARTE_NUM_MAG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PieImp)
                    .HasColumnName("PIE_IMP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PosNum)
                    .HasColumnName("POS_NUM")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.PrefCli)
                    .HasColumnName("PREF_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Prefijo)
                    .HasColumnName("PREFIJO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ReferForma)
                    .HasColumnName("REFER_FORMA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SufiCli)
                    .HasColumnName("SUFI_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Sufijo)
                    .HasColumnName("SUFIJO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoDocumento)
                    .HasColumnName("TIPO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoNum)
                    .HasColumnName("TIPO_NUM")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.TipoOrden)
                    .HasColumnName("TIPO_ORDEN")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tipocaja)
                    .HasColumnName("TIPOCAJA")
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Totalpaq)
                    .HasColumnName("TOTALPAQ")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValidaPlanilla)
                    .HasColumnName("VALIDA_PLANILLA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy365>(entity =>
            {
                entity.HasKey(e => e.IdEvento);

                entity.ToTable("WSMY365");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("ID_EVENTO")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CantFin)
                    .HasColumnName("CANT_FIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantIni)
                    .HasColumnName("CANT_INI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cargo)
                    .HasColumnName("CARGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("EVENTO_MATRIZ")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasColumnName("FORMATO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato1)
                    .HasColumnName("FORMATO1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Porcentaje)
                    .HasColumnName("PORCENTAJE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RestPapel)
                    .HasColumnName("REST_PAPEL")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RestParte)
                    .HasColumnName("REST_PARTE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RestTinta)
                    .HasColumnName("REST_TINTA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RestVarBasico)
                    .HasColumnName("REST_VAR_BASICO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy366>(entity =>
            {
                entity.ToTable("WSMY366");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CantFin)
                    .HasColumnName("CANT_FIN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantIni)
                    .HasColumnName("CANT_INI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cargo)
                    .HasColumnName("CARGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(150)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("EVENTO_MATRIZ")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Porcentaje)
                    .HasColumnName("PORCENTAJE")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy368>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.NroCotizacion, e.NroCalculo, e.CorrelativoCal });

                entity.ToTable("WSMY368");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY368_1");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY368_3");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy368orden");

                entity.HasIndex(e => new { e.NroCotizacion, e.NroPropuesta, e.NroCalculo })
                    .HasName("IX_WSMY368_2");

                entity.HasIndex(e => new { e.NroCotizacion, e.NroPropuesta, e.CodigoTinta, e.CalcRevisado })
                    .HasName("IX_WSMY368");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.CalcRevisado)
                    .HasColumnName("Calc_Revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodigoTinta)
                    .HasColumnName("Codigo_Tinta")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroImpresion).HasColumnName("Nro_Impresion");

                entity.Property(e => e.NroParte).HasColumnName("Nro_Parte");

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.NroTinta).HasColumnName("Nro_Tinta");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24);

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Posicion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoTinta)
                    .HasColumnName("Tipo_Tinta")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy369>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden, e.Parte });

                entity.ToTable("WSMY369");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY369");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy369orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(50);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Parte)
                    .HasColumnName("PARTE")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CantPerfAdicH)
                    .HasColumnName("CANT_PERF_ADIC_H")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CantPerfAdicV)
                    .HasColumnName("CANT_PERF_ADIC_V")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Clase)
                    .HasColumnName("CLASE")
                    .HasMaxLength(3)
                    .HasComputedColumnSql("(substring([COD_PAPEL],(1),(3)))");

                entity.Property(e => e.CodCarbon)
                    .HasColumnName("COD_CARBON")
                    .HasMaxLength(10);

                entity.Property(e => e.CodPapel)
                    .HasColumnName("COD_PAPEL")
                    .HasMaxLength(8)
                    .HasDefaultValueSql("('00000000')");

                entity.Property(e => e.Color)
                    .HasColumnName("COLOR")
                    .HasMaxLength(2)
                    .HasComputedColumnSql("(substring([COD_PAPEL],(7),(2)))");

                entity.Property(e => e.DescPapel)
                    .HasColumnName("DESC_PAPEL")
                    .HasMaxLength(20);

                entity.Property(e => e.FlagCarbonSpot)
                    .HasColumnName("FLAG_CARBON_SPOT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagIgualaFm)
                    .HasColumnName("FLAG_IGUALA_FM")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagIgualaHa)
                    .HasColumnName("FLAG_IGUALA_HA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagIgualaPa)
                    .HasColumnName("FLAG_IGUALA_PA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagIgualaPm)
                    .HasColumnName("FLAG_IGUALA_PM")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagMedOpuestaI)
                    .HasColumnName("FLAG_MED_OPUESTA_I")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FraseMarg)
                    .HasColumnName("FRASE_MARG")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MascMedBasica)
                    .HasColumnName("MASC_MED_BASICA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedCacHoyos)
                    .HasColumnName("MASC_MED_CAC_HOYOS")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedCarbon)
                    .HasColumnName("MASC_MED_CARBON")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedDiamHoyos)
                    .HasColumnName("MASC_MED_DIAM_HOYOS")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedOpuesta)
                    .HasColumnName("MASC_MED_OPUESTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedOpuestaI)
                    .HasColumnName("MASC_MED_OPUESTA_I")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedPerfMargD)
                    .HasColumnName("MASC_MED_PERF_MARG_D")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascMedPerfMargI)
                    .HasColumnName("MASC_MED_PERF_MARG_I")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedBasica)
                    .HasColumnName("MED_BASICA")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedCacHoyos)
                    .HasColumnName("MED_CAC_HOYOS")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedCarbon)
                    .HasColumnName("MED_CARBON")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedDiamHoyos)
                    .HasColumnName("MED_DIAM_HOYOS")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedOpuesta)
                    .HasColumnName("MED_OPUESTA")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedOpuestaI)
                    .HasColumnName("MED_OPUESTA_I")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedPerfMargD)
                    .HasColumnName("MED_PERF_MARG_D")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedPerfMargI)
                    .HasColumnName("MED_PERF_MARG_I")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24);

                entity.Property(e => e.NumHoyos)
                    .HasColumnName("NUM_HOYOS")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Peso)
                    .HasColumnName("PESO")
                    .HasMaxLength(3)
                    .HasComputedColumnSql("(substring([COD_PAPEL],(4),(3)))");

                entity.Property(e => e.PosHoyos)
                    .HasColumnName("POS_HOYOS")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoFmarg)
                    .HasColumnName("TIPO_FMARG")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UbicaFmarg)
                    .HasColumnName("UBICA_FMARG")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wsmy370>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.IdPropuesta, e.CorrelativoCal });

                entity.ToTable("WSMY370");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy370_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.IdPropuesta).HasColumnName("Id_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.BolivComis)
                    .HasColumnName("Boliv_Comis")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivMc)
                    .HasColumnName("Boliv_MC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantFormas).HasColumnName("Cant_Formas");

                entity.Property(e => e.CantTransferExtra)
                    .HasColumnName("Cant_Transfer_Extra")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTransferPerm)
                    .HasColumnName("Cant_Transfer_Perm")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTransferRem)
                    .HasColumnName("Cant_Transfer_Rem")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("Codigo_Producto")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MedidaBasica)
                    .HasColumnName("Medida_Basica")
                    .HasColumnType("numeric(10, 2)");

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartes).HasColumnName("Nro_Partes");

                entity.Property(e => e.NroTintas)
                    .HasColumnName("Nro_Tintas")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PorcComis)
                    .HasColumnName("Porc_Comis")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcMc)
                    .HasColumnName("Porc_MC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValor_Lista")
                    .HasColumnType("money");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValor_Venta")
                    .HasColumnType("money");

                entity.Property(e => e.TransferExtra)
                    .HasColumnName("Transfer_Extra")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TransferPerm)
                    .HasColumnName("Transfer_Perm")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TransferRem)
                    .HasColumnName("Transfer_Rem")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("money");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("Valor_Venta")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<Wsmy371>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal, e.Id });

                entity.ToTable("WSMY371");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy371_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CarbonSpot)
                    .HasColumnName("Carbon_Spot")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCarbon)
                    .HasColumnName("Cod_Carbon")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodPapel)
                    .HasColumnName("Cod_Papel")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Gramaje)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Medida).HasColumnType("numeric(10, 2)");

                entity.Property(e => e.NroCalculo)
                    .HasColumnName("Nro_Calculo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPartePapel).HasColumnName("Nro_Parte_Papel");

                entity.Property(e => e.TintaFrente)
                    .HasColumnName("Tinta_Frente")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TintaRespaldo)
                    .HasColumnName("Tinta_Respaldo")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy372>(entity =>
            {
                entity.HasKey(e => new { e.CodEvento, e.SubEvento });

                entity.ToTable("WSMY372");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("Cod_Evento")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SubEvento)
                    .HasColumnName("Sub_Evento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Papel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TapeExtra)
                    .HasColumnName("Tape_Extra")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TapePerm)
                    .HasColumnName("Tape_Perm")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TapeRemov)
                    .HasColumnName("Tape_Remov")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy373>(entity =>
            {
                entity.ToTable("WSMY373");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion).HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy374>(entity =>
            {
                entity.HasKey(e => e.IdCuota);

                entity.ToTable("WSMY374");

                entity.HasIndex(e => new { e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdProductoCuota })
                    .HasName("IX_WSMY374")
                    .IsUnique();

                entity.Property(e => e.IdCuota)
                    .HasColumnName("ID_CUOTA")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AnoContable)
                    .HasColumnName("ANO_CONTABLE")
                    .HasColumnType("decimal(5, 0)");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoSupervisor)
                    .HasColumnName("CODIGO_SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaPiesCuadrado)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CuotaVentas)
                    .HasColumnName("CUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreSupervisor)
                    .HasColumnName("NOMBRE_SUPERVISOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProductoCuota)
                    .HasColumnName("PRODUCTO_CUOTA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Sub Clasificacion de producto");

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RcuotaVentas)
                    .HasColumnName("RCUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.TipoCuota)
                    .HasColumnName("TIPO_CUOTA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy374Temp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wsmy374Temp");

                entity.Property(e => e.AñoContable).HasColumnName("AÑO_CONTABLE");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoSupervisor)
                    .HasColumnName("CODIGO_SUPERVISOR")
                    .HasMaxLength(255);

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(255);

                entity.Property(e => e.CuotaVentas).HasColumnName("CUOTA_VENTAS");

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(255);

                entity.Property(e => e.NombreSupervisor)
                    .HasColumnName("NOMBRE_SUPERVISOR")
                    .HasMaxLength(255);

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductoCuota)
                    .HasColumnName("PRODUCTO_CUOTA")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(255);

                entity.Property(e => e.RcuotaVentas)
                    .HasColumnName("RCUOTA_VENTAS")
                    .HasMaxLength(255);

                entity.Property(e => e.TipoCuota)
                    .HasColumnName("TIPO_CUOTA")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<Wsmy375>(entity =>
            {
                entity.HasKey(e => new { e.Id1, e.Id2 });

                entity.ToTable("WSMY375");

                entity.Property(e => e.Id1)
                    .HasColumnName("ID1")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Id2)
                    .HasColumnName("ID2")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Referncia)
                    .HasColumnName("REFERNCIA")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy376>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden });

                entity.ToTable("WSMY376");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy376orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Actualizado)
                    .HasColumnName("ACTUALIZADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CheckSset)
                    .HasColumnName("CHECK_SSET")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DcoreMasc)
                    .HasColumnName("DCORE_MASC")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("DIAMETRO DEL CORE MASCARA");

                entity.Property(e => e.DcoreMed)
                    .HasColumnName("DCORE_MED")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))")
                    .HasComment("DIAMETRO DEL CORE MEDIDA");

                entity.Property(e => e.DetiquetMasc)
                    .HasColumnName("DETIQUET_MASC")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("DIAMETRO DE LA ETIQUETA MASCARA");

                entity.Property(e => e.DetiquetMed)
                    .HasColumnName("DETIQUET_MED")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))")
                    .HasComment("DIAMETRO DE LA ETIQUETA DECIMAL");

                entity.Property(e => e.Etiqxrollos)
                    .HasColumnName("ETIQXROLLOS")
                    .HasDefaultValueSql("((0))")
                    .HasComment("CANTIDAD DE ETIQUETAS POR ROLLOS");

                entity.Property(e => e.FlagCabTalon)
                    .HasColumnName("FLAG_CAB_TALON")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagDerTalon)
                    .HasColumnName("FLAG_DER_TALON")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagHoyosmDer)
                    .HasColumnName("FLAG_HOYOSM_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagHoyosmIzq)
                    .HasColumnName("FLAG_HOYOSM_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagIzqTalon)
                    .HasColumnName("FLAG_IZQ_TALON")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagPieTalon)
                    .HasColumnName("FLAG_PIE_TALON")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSflexDer)
                    .HasColumnName("FLAG_SFLEX_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSflexIzq)
                    .HasColumnName("FLAG_SFLEX_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSlockDer)
                    .HasColumnName("FLAG_SLOCK_DER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSlockIzq)
                    .HasColumnName("FLAG_SLOCK_IZQ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSsetCartenv)
                    .HasColumnName("FLAG_SSET_CARTENV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSsetEngomado)
                    .HasColumnName("FLAG_SSET_ENGOMADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSsetEngrap)
                    .HasColumnName("FLAG_SSET_ENGRAP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagSsetSuelto)
                    .HasColumnName("FLAG_SSET_SUELTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Impout)
                    .HasColumnName("IMPOUT")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Impvar)
                    .HasColumnName("IMPVAR")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MascDoblez)
                    .HasColumnName("MASC_DOBLEZ")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MascMedTalonCab)
                    .HasColumnName("MASC_MED_TALON_CAB")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascMedTalonDer)
                    .HasColumnName("MASC_MED_TALON_DER")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascMedTalonIzq)
                    .HasColumnName("MASC_MED_TALON_IZQ")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascMedTalonPie)
                    .HasColumnName("MASC_MED_TALON_PIE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascTalonExtra)
                    .HasColumnName("MASC_TALON_EXTRA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MedDoblez)
                    .HasColumnName("MED_DOBLEZ")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedTalonCab)
                    .HasColumnName("MED_TALON_CAB")
                    .HasColumnType("decimal(10, 6)");

                entity.Property(e => e.MedTalonDer)
                    .HasColumnName("MED_TALON_DER")
                    .HasColumnType("decimal(10, 6)");

                entity.Property(e => e.MedTalonExtra)
                    .HasColumnName("MED_TALON_EXTRA")
                    .HasColumnType("decimal(10, 6)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedTalonIzq)
                    .HasColumnName("MED_TALON_IZQ")
                    .HasColumnType("decimal(10, 6)");

                entity.Property(e => e.MedTalonPie)
                    .HasColumnName("MED_TALON_PIE")
                    .HasColumnType("decimal(10, 6)");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("((ltrim(rtrim([NRO_COTIZACION]))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_PROPUESTA],0),(2)))))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_CALCULO],0),(2)))))");

                entity.Property(e => e.NumParte).HasColumnName("NUM_PARTE");

                entity.Property(e => e.NumTirasTt)
                    .HasColumnName("NUM_TIRAS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Opcionp)
                    .HasColumnName("OPCIONP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("DIAMETRO Ó CANTIDADES DE FORMAS POR ROLLOS DEFINIDO POR PLANTA");

                entity.Property(e => e.Partesengom)
                    .HasColumnName("PARTESENGOM")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PosTt)
                    .HasColumnName("POS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Posengocarb)
                    .HasColumnName("POSENGOCARB")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ReglaSset)
                    .HasColumnName("REGLA_SSET")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Salidaetiq)
                    .HasColumnName("SALIDAETIQ")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("SALIDA DE LA ETIQUETA");

                entity.Property(e => e.SsetCantBlock)
                    .HasColumnName("SSET_CANT_BLOCK")
                    .HasColumnType("numeric(5, 0)");

                entity.Property(e => e.SsetTipoEngrap).HasColumnName("SSET_TIPO_ENGRAP");

                entity.Property(e => e.TipoConts)
                    .HasColumnName("TIPO_CONTS")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoPerf)
                    .HasColumnName("TIPO_PERF")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoTt)
                    .HasColumnName("TIPO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tipoetiq)
                    .HasColumnName("TIPOETIQ")
                    .HasDefaultValueSql("((0))")
                    .HasComment("TIPO DE ETIQUETA");
            });

            modelBuilder.Entity<Wsmy377>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden, e.Id });

                entity.ToTable("WSMY377");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy377orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(6, 0)");

                entity.Property(e => e.CantMillar)
                    .HasColumnName("CANT_MILLAR")
                    .HasColumnType("decimal(10, 4)");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnName("FECHA_ENTREGA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FlagEspecial)
                    .HasColumnName("FLAG_ESPECIAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Idcalendario)
                    .HasColumnName("IDCALENDARIO")
                    .HasDefaultValueSql("((0))")
                    .HasComment("ID CALENDARIO DE ENTREGA");

                entity.Property(e => e.Idtitulo)
                    .HasColumnName("IDTITULO")
                    .HasDefaultValueSql("((0))")
                    .HasComment("ID TITULO CALENDARIO DE ENTREGA");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("((ltrim(rtrim([NRO_COTIZACION]))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_PROPUESTA],0),(2)))))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_CALCULO],0),(2)))))");

                entity.Property(e => e.NumJob)
                    .HasColumnName("NUM_JOB")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Observ)
                    .HasColumnName("OBSERV")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy378>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NumPropuesta, e.NumCalculo, e.Orden, e.NumCopy })
                    .HasName("PK_WSMY278");

                entity.ToTable("WSMY378");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy378orden");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.NumPropuesta).HasColumnName("NUM_PROPUESTA");

                entity.Property(e => e.NumCalculo).HasColumnName("NUM_CALCULO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumCopy)
                    .HasColumnName("NUM_COPY")
                    .HasColumnType("numeric(6, 0)");

                entity.Property(e => e.CantMillarCopy)
                    .HasColumnName("CANT_MILLAR_COPY")
                    .HasColumnType("decimal(10, 4)");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("COD_CLIENTE")
                    .HasMaxLength(10);

                entity.Property(e => e.DirClienteEnt)
                    .HasColumnName("DIR_CLIENTE_ENT")
                    .HasMaxLength(240);

                entity.Property(e => e.DirClienteFact)
                    .HasColumnName("DIR_CLIENTE_FACT")
                    .HasMaxLength(240);

                entity.Property(e => e.IdAplicacion).HasColumnName("ID_APLICACION");

                entity.Property(e => e.InstrucProd)
                    .HasColumnName("INSTRUC_PROD")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Mascara)
                    .HasColumnName("MASCARA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NomClienteEnt)
                    .HasColumnName("NOM_CLIENTE_ENT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteFact)
                    .HasColumnName("NOM_CLIENTE_FACT")
                    .HasMaxLength(80);

                entity.Property(e => e.NomClienteImp)
                    .HasColumnName("NOM_CLIENTE_IMP")
                    .HasMaxLength(80);

                entity.Property(e => e.NumCliDesde)
                    .HasColumnName("NUM_CLI_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumCliHasta)
                    .HasColumnName("NUM_CLI_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NumControlDesde)
                    .HasColumnName("NUM_CONTROL_DESDE")
                    .HasMaxLength(20);

                entity.Property(e => e.NumControlHasta)
                    .HasColumnName("NUM_CONTROL_HASTA")
                    .HasMaxLength(20);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("((ltrim(rtrim([NRO_COTIZACION]))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_PROPUESTA],0),(2)))))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NUM_CALCULO],0),(2)))))");

                entity.Property(e => e.NumJob)
                    .HasColumnName("NUM_JOB")
                    .HasColumnType("numeric(10, 0)");

                entity.Property(e => e.NumPlanilla)
                    .HasColumnName("NUM_PLANILLA")
                    .HasColumnType("numeric(10, 0)");

                entity.Property(e => e.PrefCli)
                    .HasColumnName("PREF_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Prefijo)
                    .HasColumnName("PREFIJO")
                    .HasMaxLength(6);

                entity.Property(e => e.RifClienteEnt)
                    .HasColumnName("RIF_CLIENTE_ENT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteFact)
                    .HasColumnName("RIF_CLIENTE_FACT")
                    .HasMaxLength(12);

                entity.Property(e => e.RifClienteImp)
                    .HasColumnName("RIF_CLIENTE_IMP")
                    .HasMaxLength(12);

                entity.Property(e => e.SufiCli)
                    .HasColumnName("SUFI_CLI")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Sufijo)
                    .HasColumnName("SUFIJO")
                    .HasMaxLength(6);

                entity.Property(e => e.TipoDocumento)
                    .HasColumnName("TIPO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy379>(entity =>
            {
                entity.ToTable("WSMY379");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagConcesion)
                    .HasColumnName("FLAG_CONCESION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagExcepGeneral)
                    .HasColumnName("FLAG_EXCEP_GENERAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("MARCA DE EXCEPCIONES GENERALES");

                entity.Property(e => e.FlagExcepcion)
                    .HasColumnName("FLAG_EXCEPCION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("MARCA EXCEPCIONES");

                entity.Property(e => e.NivelAprob01)
                    .HasColumnName("NIVEL_APROB_01")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NivelAprob02)
                    .HasColumnName("NIVEL_APROB_02")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NivelMc)
                    .HasColumnName("NIVEL_MC")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext")
                    .HasDefaultValueSql("('')")
                    .HasComment("OBSERVACIONES NIVEL APROBACION");
            });

            modelBuilder.Entity<Wsmy380>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY380");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy380_Nro_Cotizacion");

                entity.HasIndex(e => e.NumCot)
                    .HasName("IX_WSMY380_1");

                entity.HasIndex(e => new { e.Id, e.NroCotizacion, e.NroPropuesta, e.NroCalculo })
                    .HasName("IX_WSMY380")
                    .IsClustered();

                entity.Property(e => e.CodigoEstatus)
                    .HasColumnName("CODIGO_ESTATUS")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Complemento)
                    .HasColumnName("COMPLEMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Hora)
                    .HasColumnName("HORA")
                    .HasMaxLength(20);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NroCalculo).HasColumnName("NRO_CALCULO");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("NRO_PROPUESTA");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Observacion)
                    .HasColumnName("OBSERVACION")
                    .HasColumnType("ntext");

                entity.Property(e => e.OrigenObserv).HasColumnName("ORIGEN_OBSERV");

                entity.Property(e => e.TipoObservacion).HasColumnName("TIPO_OBSERVACION");

                entity.Property(e => e.TipoRechazo)
                    .HasColumnName("TIPO_RECHAZO")
                    .HasDefaultValueSql("((0))")
                    .HasComment("CODIGO TIPO DE RECHAZO");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy381>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY381");

                entity.Property(e => e.Comentario)
                    .HasColumnName("COMENTARIO")
                    .HasColumnType("ntext");

                entity.Property(e => e.ComentarioSistema)
                    .HasColumnName("COMENTARIO_SISTEMA")
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Correlativo)
                    .HasColumnName("CORRELATIVO")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FecComentario)
                    .HasColumnName("FEC_COMENTARIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaComentario)
                    .HasColumnName("FECHA_COMENTARIO")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Recaudos)
                    .HasColumnName("RECAUDOS")
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rol)
                    .HasColumnName("ROL")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy382>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal, e.IdPropuesta, e.IdCalculo });

                entity.ToTable("WSMY382");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy382_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("NRO_PROPUESTA");

                entity.Property(e => e.CorrelativoCal).HasColumnName("CORRELATIVO_CAL");

                entity.Property(e => e.IdPropuesta).HasColumnName("ID_PROPUESTA");

                entity.Property(e => e.IdCalculo).HasColumnName("ID_CALCULO");

                entity.Property(e => e.CodCompetencia).HasColumnName("COD_COMPETENCIA");

                entity.Property(e => e.CodigoMotivo).HasColumnName("CODIGO_MOTIVO");

                entity.Property(e => e.FechaGrabacion)
                    .HasColumnName("FECHA_GRABACION")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaPerdGan)
                    .HasColumnName("FECHA_PERD_GAN")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRecotiz)
                    .HasColumnName("FECHA_RECOTIZ")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("((ltrim(rtrim([NRO_COTIZACION]))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[NRO_PROPUESTA],0),(2)))))+ltrim(rtrim(right('00'+CONVERT([nvarchar],[CORRELATIVO_CAL],0),(2)))))");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");

                entity.Property(e => e.TipoMotivo).HasColumnName("TIPO_MOTIVO");
            });

            modelBuilder.Entity<Wsmy383>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.CodCompetidor });

                entity.ToTable("WSMY383");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodCompetidor).HasColumnName("COD_COMPETIDOR");

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy384>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY384");

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy386>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal, e.IdPropuesta, e.IdCalculo });

                entity.ToTable("WSMY386");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy386_Nro_Cotizacion");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.IdPropuesta).HasColumnName("Id_Propuesta");

                entity.Property(e => e.IdCalculo).HasColumnName("Id_Calculo");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BolivGerImpCom)
                    .HasColumnName("Boliv_Ger_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivGerOfic)
                    .HasColumnName("Boliv_Ger_Ofic")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivGerRegion)
                    .HasColumnName("Boliv_Ger_Region")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivSupImpCom)
                    .HasColumnName("Boliv_Sup_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivTeamLider)
                    .HasColumnName("Boliv_Team_Lider")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BolivVendedor)
                    .HasColumnName("Boliv_Vendedor")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnName("Fecha_Creacion")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Observacion).HasColumnType("ntext");

                entity.Property(e => e.PorcGerImpCom)
                    .HasColumnName("Porc_Ger_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcGerOfic)
                    .HasColumnName("Porc_Ger_Ofic")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcGerRegion)
                    .HasColumnName("Porc_Ger_Region")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcSupImpCom)
                    .HasColumnName("Porc_Sup_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcTeamLider)
                    .HasColumnName("Porc_Team_Lider")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcVendedor)
                    .HasColumnName("Porc_Vendedor")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivGerImpCom)
                    .HasColumnName("RBoliv_Ger_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivGerOfic)
                    .HasColumnName("RBoliv_Ger_Ofic")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivGerRegion)
                    .HasColumnName("RBoliv_Ger_Region")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivSupImpCom)
                    .HasColumnName("RBoliv_Sup_ImpCom")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivTeamLider)
                    .HasColumnName("RBoliv_Team_Lider")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbolivVendedor)
                    .HasColumnName("RBoliv_Vendedor")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Tabla).HasDefaultValueSql("((0))");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy387>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY387");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodDesc)
                    .HasColumnName("COD_DESC")
                    .HasMaxLength(63)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(convert(varchar,[CODIGO]) + ' - ' + convert(varchar,[DESCRIPCION]))");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagComp)
                    .HasColumnName("FLAG_COMP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagCotiz)
                    .HasColumnName("FLAG_COTIZ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy388>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY388");

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy389>(entity =>
            {
                entity.HasKey(e => new { e.Codigo, e.Cliente, e.Rif });

                entity.ToTable("WSMY389");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY389")
                    .IsUnique();

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy389orden");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasColumnName("RIF")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasColumnName("CLIENTE_NUEVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaUltNum)
                    .HasColumnName("FECHA_ULT_NUM")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NumCopy)
                    .HasColumnName("NUM_COPY")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UltimaNumDesde)
                    .HasColumnName("ULTIMA_NUM_DESDE")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.UltimaNumHasta)
                    .HasColumnName("ULTIMA_NUM_HASTA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy390>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal, e.IdCalculo })
                    .HasName("PK_WSMY391");

                entity.ToTable("WSMY390");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy390_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.IdCalculo).HasColumnName("ID_Calculo");

                entity.Property(e => e.CantFormas)
                    .HasColumnName("Cant_Formas")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantImpresiones)
                    .HasColumnName("Cant_Impresiones")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantMillares)
                    .HasColumnName("Cant_Millares")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ListaTotal)
                    .HasColumnName("Lista_Total")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ListaUnitario)
                    .HasColumnName("Lista_Unitario")
                    .HasColumnType("money");

                entity.Property(e => e.RlistaUnitario)
                    .HasColumnName("RLista_Unitario")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<Wsmy391>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal, e.IdPropuesta, e.IdCalculo })
                    .HasName("PK_WSMY391_1");

                entity.ToTable("WSMY391");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy391_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("Nro_Cotizacion")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("Nro_Propuesta");

                entity.Property(e => e.CorrelativoCal).HasColumnName("Correlativo_Cal");

                entity.Property(e => e.IdPropuesta).HasColumnName("Id_Propuesta");

                entity.Property(e => e.IdCalculo).HasColumnName("Id_Calculo");

                entity.Property(e => e.CantPresent)
                    .HasColumnName("Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CantidadMedida)
                    .HasColumnName("Cantidad_Medida")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CodUnidad)
                    .HasColumnName("Cod_Unidad")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CotizaDol)
                    .HasColumnName("Cotiza_Dol")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ganado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ListaTotPresDol)
                    .HasColumnName("Lista_Tot_Pres_dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaTotal)
                    .HasColumnName("Lista_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaTotalDol)
                    .HasColumnName("Lista_Total_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaTotalPres)
                    .HasColumnName("Lista_Total_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaUnitPres)
                    .HasColumnName("Lista_Unit_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaUnitPresDol)
                    .HasColumnName("Lista_Unit_Pres_dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaUnitario)
                    .HasColumnName("Lista_Unitario")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ListaUnitarioDol)
                    .HasColumnName("Lista_Unitario_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NoImprimir)
                    .HasColumnName("No_Imprimir")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecTotPres)
                    .HasColumnName("Prec_Tot_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecTotPresDol)
                    .HasColumnName("Prec_Tot_Pres_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecUnitPres)
                    .HasColumnName("Prec_Unit_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecUnitPresDol)
                    .HasColumnName("Prec_Unit_Pres_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioCertificado)
                    .HasColumnName("Precio_Certificado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RlistaTotal)
                    .HasColumnName("RLista_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RlistaTotalPres)
                    .HasColumnName("RLista_Total_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RlistaUnitPres)
                    .HasColumnName("RLista_Unit_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RlistaUnitario)
                    .HasColumnName("RLista_Unitario")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecTotPres)
                    .HasColumnName("RPrec_Tot_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecUnitPres)
                    .HasColumnName("RPrec_Unit_Pres")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RventaTotal)
                    .HasColumnName("RVenta_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RventaUnitario)
                    .HasColumnName("RVenta_Unitario")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SinConversion)
                    .HasColumnName("Sin_Conversion")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotalCantPresent)
                    .HasColumnName("Total_Cant_Present")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UserCertificado)
                    .HasColumnName("User_Certificado")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VentaTotal)
                    .HasColumnName("Venta_Total")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.VentaTotalDol)
                    .HasColumnName("Venta_Total_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.VentaUnitario)
                    .HasColumnName("Venta_Unitario")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.VentaUnitarioDol)
                    .HasColumnName("Venta_Unitario_Dol")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wsmy392>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY392");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy392orden");

                entity.Property(e => e.AloContable)
                    .HasColumnName("ALO_CONTABLE")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.CodTeleop)
                    .HasColumnName("COD_TELEOP")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FecRegTeleop)
                    .HasColumnName("FEC_REG_TELEOP")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(10, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NroNotaCambio)
                    .HasColumnName("NRO_NOTA_CAMBIO")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Usuariored)
                    .HasColumnName("USUARIORED")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy393>(entity =>
            {
                entity.HasKey(e => new { e.IdDoc, e.Cotizacion, e.Propuesta, e.Calculo });

                entity.ToTable("WSMY393");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy393orden");

                entity.Property(e => e.IdDoc)
                    .HasColumnName("ID_DOC")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Propuesta)
                    .HasColumnName("PROPUESTA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Calculo)
                    .HasColumnName("CALCULO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Blob)
                    .HasColumnName("BLOB")
                    .HasColumnType("image");

                entity.Property(e => e.Diseno)
                    .HasColumnName("DISENO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Hora)
                    .HasColumnName("HORA")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NomArchivo)
                    .HasColumnName("NOM_ARCHIVO")
                    .HasMaxLength(100);

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(24)
                    .HasComputedColumnSql("(ltrim(rtrim([COTIZACION])) + ltrim(rtrim(right(('00' + convert(nvarchar,[PROPUESTA])),2))) + ltrim(rtrim(right(('00' + convert(nvarchar,[CALCULO])),2))))");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(10, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Referencia)
                    .HasColumnName("REFERENCIA")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Ubicacion)
                    .HasColumnName("UBICACION")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(30)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy395>(entity =>
            {
                entity.ToTable("WSMY395");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy396>(entity =>
            {
                entity.ToTable("WSMY396");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CantidadMinima)
                    .HasColumnName("CANTIDAD_MINIMA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Medida)
                    .HasColumnName("MEDIDA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy397>(entity =>
            {
                entity.ToTable("WSMY397");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Equivalente)
                    .HasColumnName("EQUIVALENTE")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Mascara)
                    .HasColumnName("MASCARA")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Medida)
                    .HasColumnName("MEDIDA")
                    .HasColumnType("numeric(18, 4)");
            });

            modelBuilder.Entity<Wsmy398>(entity =>
            {
                entity.HasKey(e => new { e.CodReferencia, e.CodigoProduct });

                entity.ToTable("WSMY398");

                entity.Property(e => e.CodReferencia).HasColumnName("COD_REFERENCIA");

                entity.Property(e => e.CodigoProduct)
                    .HasColumnName("CODIGO_PRODUCT")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(60)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy399>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY399");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy399orden");

                entity.Property(e => e.AloContable)
                    .HasColumnName("Alo_Contable")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.ComentarioSistema)
                    .HasColumnName("Comentario_Sistema")
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ComentarioUsuario)
                    .HasColumnName("Comentario_Usuario")
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Correlativo).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.FechaBitacora)
                    .HasColumnName("Fecha_Bitacora")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdBitacora)
                    .HasColumnName("Id_Bitacora")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable)
                    .HasColumnName("Mes_Contable")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NombreAplicacion)
                    .HasColumnName("Nombre_Aplicacion")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Orden).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Renglon).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.TipoTransaccion)
                    .HasColumnName("Tipo_Transaccion")
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioRed)
                    .HasColumnName("Usuario_Red")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioSistema)
                    .HasColumnName("Usuario_Sistema")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy400>(entity =>
            {
                entity.HasKey(e => new { e.IdAutorizacion, e.Oficina });

                entity.ToTable("WSMY400");

                entity.Property(e => e.IdAutorizacion).HasColumnName("Id_Autorizacion");

                entity.Property(e => e.Autoriza)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Autorizado)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Conc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Mc)
                    .HasColumnName("MC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NivelAprob)
                    .HasColumnName("NIVEL_APROB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("NIVEL DE APROBACIÓN");
            });

            modelBuilder.Entity<Wsmy401>(entity =>
            {
                entity.ToTable("WSMY401");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(5, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Critico)
                    .HasColumnName("CRITICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy402>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY402");

                entity.Property(e => e.CodigoProduct)
                    .HasColumnName("CODIGO_PRODUCT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Correlativo)
                    .HasColumnName("CORRELATIVO")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.NroOrden)
                    .HasColumnName("NRO_ORDEN")
                    .HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy403>(entity =>
            {
                entity.HasKey(e => new { e.IdControl, e.MesCon, e.AnoCon });

                entity.ToTable("WSMY403");

                entity.Property(e => e.IdControl)
                    .HasColumnName("ID_CONTROL")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesCon)
                    .HasColumnName("MES_CON")
                    .HasColumnType("numeric(5, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AnoCon)
                    .HasColumnName("ANO_CON")
                    .HasColumnType("numeric(5, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cerrado)
                    .HasColumnName("CERRADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaDesde)
                    .HasColumnName("FECHA_DESDE")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHasta)
                    .HasColumnName("FECHA_HASTA")
                    .HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<Wsmy404>(entity =>
            {
                entity.HasKey(e => new { e.Lista, e.Evento, e.Correlativo, e.TipoPapel });

                entity.ToTable("WSMY404");

                entity.Property(e => e.Lista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Evento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Correlativo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TipoPapel)
                    .HasColumnName("Tipo_Papel")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion).HasColumnType("ntext");

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("Evento_Matriz")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormasRollo)
                    .HasColumnName("Formas_Rollo")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FormulaFijo)
                    .HasColumnName("Formula_Fijo")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.FormulaVar)
                    .HasColumnName("Formula_Var")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.MedBasica)
                    .HasColumnName("Med_basica")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Partes).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy405>(entity =>
            {
                entity.HasKey(e => new { e.TipoPapel, e.NroPapel, e.Lista });

                entity.ToTable("WSMY405");

                entity.Property(e => e.TipoPapel)
                    .HasColumnName("TIPO_PAPEL")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPapel)
                    .HasColumnName("NRO_PAPEL")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Lista)
                    .HasColumnName("LISTA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoEvento)
                    .HasColumnName("CODIGO_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoPapel)
                    .HasColumnName("CODIGO_PAPEL")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy406>(entity =>
            {
                entity.HasKey(e => e.CodAplicacion)
                    .HasName("WSMY406_INDEX01");

                entity.ToTable("WSMY406");

                entity.HasIndex(e => e.IdProducto)
                    .HasName("IX_WSMY406_1");

                entity.HasIndex(e => e.Recnum)
                    .HasName("WSMY406_INDEX00")
                    .IsUnique();

                entity.HasIndex(e => new { e.Linea, e.CodAplicacion, e.Recnum })
                    .HasName("WSMY406_INDEX02")
                    .IsUnique();

                entity.Property(e => e.CodAplicacion)
                    .HasColumnName("COD_APLICACION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Familia)
                    .HasColumnName("FAMILIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlagEliminado)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdProducto)
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Linea)
                    .IsRequired()
                    .HasColumnName("LINEA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Unidad)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UnidadConstruccion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Wsmy407>(entity =>
            {
                entity.HasKey(e => e.IdRecaudos);

                entity.ToTable("WSMY407");

                entity.Property(e => e.IdRecaudos)
                    .HasColumnName("ID_RECAUDOS")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.EsCompleto)
                    .HasColumnName("ES_COMPLETO")
                    .HasDefaultValueSql("(0)")
                    .HasComment("Indica si el estatus Documento completo");

                entity.Property(e => e.Ic)
                    .HasColumnName("IC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Pv)
                    .HasColumnName("PV")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Recaudos)
                    .HasColumnName("RECAUDOS")
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy408>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY408");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdFm)
                    .HasColumnName("ID_FM")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy409>(entity =>
            {
                entity.HasKey(e => e.IdArchivo);

                entity.ToTable("WSMY409");

                entity.Property(e => e.IdArchivo).HasColumnName("ID_ARCHIVO");

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime")
                    .HasComputedColumnSql("(getdate())");

                entity.Property(e => e.Nombre)
                    .HasColumnName("NOMBRE")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy410>(entity =>
            {
                entity.HasKey(e => new { e.NumCotizacion, e.NumerCopya, e.Producto });

                entity.ToTable("WSMY410");

                entity.HasIndex(e => e.NumCotizacion)
                    .HasName("IX_WSMY410");

                entity.HasIndex(e => e.NumOrden)
                    .HasName("dep_wsmy410num_orden");

                entity.Property(e => e.NumCotizacion)
                    .HasColumnName("NUM_COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NumerCopya).HasColumnName("NUMER_COPYA");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Bsmc)
                    .HasColumnName("BSMC")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CantEntregar).HasColumnName("CANT_ENTREGAR");

                entity.Property(e => e.CantMillEnt)
                    .HasColumnName("CANT_MILL_ENT")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CantMillFact).HasColumnName("CANT_MILL_FACT");

                entity.Property(e => e.CantUnidEmb).HasColumnName("CANT_UNID_EMB");

                entity.Property(e => e.CodAplicacion)
                    .HasColumnName("COD_APLICACION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodigoCliente)
                    .IsRequired()
                    .HasColumnName("CODIGO_CLIENTE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.CtdEntregada).HasColumnName("CTD_ENTREGADA");

                entity.Property(e => e.CtdFacturada).HasColumnName("CTD_FACTURADA");

                entity.Property(e => e.DireccEntrega1)
                    .IsRequired()
                    .HasColumnName("DIRECC_ENTREGA1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntrega2)
                    .IsRequired()
                    .HasColumnName("DIRECC_ENTREGA2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccEntregar)
                    .IsRequired()
                    .HasColumnName("DIRECC_ENTREGAR")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura1)
                    .IsRequired()
                    .HasColumnName("DIRECC_FACTURA1")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFactura2)
                    .IsRequired()
                    .HasColumnName("DIRECC_FACTURA2")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.DireccFacturar)
                    .IsRequired()
                    .HasColumnName("DIRECC_FACTURAR")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FechaFactura)
                    .HasColumnName("FECHA_FACTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagCopyNuevo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagFacturacionEntrega)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagOrdenCopyAnterior)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdDireccionFacturar)
                    .HasColumnName("Id_direccionFacturar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ImprimirA)
                    .IsRequired()
                    .HasColumnName("IMPRIMIR_A")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.InstrucProd)
                    .IsRequired()
                    .HasColumnName("INSTRUC_PROD")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LongitudMascara)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NombEntregar)
                    .IsRequired()
                    .HasColumnName("NOMB_ENTREGAR")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombFacturar)
                    .IsRequired()
                    .HasColumnName("NOMB_FACTURAR")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombForma)
                    .IsRequired()
                    .HasColumnName("NOMB_FORMA")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NumCliDesde).HasColumnName("NUM_CLI_DESDE");

                entity.Property(e => e.NumCliHasta).HasColumnName("NUM_CLI_HASTA");

                entity.Property(e => e.NumClieDEnt).HasColumnName("NUM_CLIE_D_ENT");

                entity.Property(e => e.NumClieDFact).HasColumnName("NUM_CLIE_D_FACT");

                entity.Property(e => e.NumClieHEnt).HasColumnName("NUM_CLIE_H_ENT");

                entity.Property(e => e.NumClieHFact).HasColumnName("NUM_CLIE_H_FACT");

                entity.Property(e => e.NumContDEnt).HasColumnName("NUM_CONT_D_ENT");

                entity.Property(e => e.NumContDFact).HasColumnName("NUM_CONT_D_FACT");

                entity.Property(e => e.NumContDesde).HasColumnName("NUM_CONT_DESDE");

                entity.Property(e => e.NumContHEnt).HasColumnName("NUM_CONT_H_ENT");

                entity.Property(e => e.NumContHFact).HasColumnName("NUM_CONT_H_FACT");

                entity.Property(e => e.NumContHasta).HasColumnName("NUM_CONT_HASTA");

                entity.Property(e => e.NumJob).HasColumnName("NUM_JOB");

                entity.Property(e => e.NumOrden).HasColumnName("NUM_ORDEN");

                entity.Property(e => e.NumerCopyb).HasColumnName("NUMER_COPYB");

                entity.Property(e => e.Pormc)
                    .HasColumnName("PORMC")
                    .HasColumnType("decimal(4, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrefCliDesde)
                    .IsRequired()
                    .HasColumnName("PREF_CLI_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrefCliHasta)
                    .IsRequired()
                    .HasColumnName("PREF_CLI_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrefClieDEnt)
                    .IsRequired()
                    .HasColumnName("PREF_CLIE_D_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefClieDFac)
                    .IsRequired()
                    .HasColumnName("PREF_CLIE_D_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefClieHEnt)
                    .IsRequired()
                    .HasColumnName("PREF_CLIE_H_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefClieHFac)
                    .IsRequired()
                    .HasColumnName("PREF_CLIE_H_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContDEnt)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_D_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContDFac)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_D_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContDesde)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContHEnt)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_H_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContHFac)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_H_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PrefContHasta)
                    .IsRequired()
                    .HasColumnName("PREF_CONT_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Rbsmc)
                    .HasColumnName("RBSMC")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RifEntregar)
                    .IsRequired()
                    .HasColumnName("RIF_ENTREGAR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifFacturar)
                    .IsRequired()
                    .HasColumnName("RIF_FACTURAR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RifImprimir)
                    .IsRequired()
                    .HasColumnName("RIF_IMPRIMIR")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieDEnt)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_D_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieDFac)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_D_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieDesde)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieHEnt)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_H_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieHFac)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_H_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufClieHasta)
                    .IsRequired()
                    .HasColumnName("SUF_CLIE_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SufContDEnt)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_D_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufContDFac)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_D_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufContDesde)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_DESDE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SufContHEnt)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_H_ENT")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufContHFac)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_H_FAC")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SufContHasta)
                    .IsRequired()
                    .HasColumnName("SUF_CONT_HASTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UltimaFactura).HasColumnName("ULTIMA_FACTURA");
            });

            modelBuilder.Entity<Wsmy411>(entity =>
            {
                entity.ToTable("WSMY411");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Imprime)
                    .HasColumnName("IMPRIME")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy412>(entity =>
            {
                entity.HasKey(e => new { e.IdTipoMaq, e.IdMarca });

                entity.ToTable("WSMY412");

                entity.Property(e => e.IdTipoMaq)
                    .HasColumnName("ID_TIPO_MAQ")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdMarca)
                    .HasColumnName("ID_MARCA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MarcaMaq)
                    .HasColumnName("MARCA_MAQ")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy413>(entity =>
            {
                entity.HasKey(e => new { e.IdTipoMaq, e.IdMarcaMaq, e.IdModeloMaq });

                entity.ToTable("WSMY413");

                entity.Property(e => e.IdTipoMaq)
                    .HasColumnName("ID_TIPO_MAQ")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IdMarcaMaq)
                    .HasColumnName("ID_MARCA_MAQ")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.IdModeloMaq)
                    .HasColumnName("ID_MODELO_MAQ")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy414>(entity =>
            {
                entity.HasKey(e => new { e.Tipo, e.Id });

                entity.ToTable("WSMY414");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy415>(entity =>
            {
                entity.HasKey(e => new { e.NroCotizacion, e.NroPropuesta, e.CorrelativoCal });

                entity.ToTable("WSMY415");

                entity.HasIndex(e => e.NroCotizacion)
                    .HasName("DepWsmy415_Nro_Cotizacion");

                entity.Property(e => e.NroCotizacion)
                    .HasColumnName("NRO_COTIZACION")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("NRO_PROPUESTA");

                entity.Property(e => e.CorrelativoCal).HasColumnName("CORRELATIVO_CAL");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EventoMatriz)
                    .HasColumnName("EVENTO_MATRIZ")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy416>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.CodEvento, e.CodSubEvento, e.Formula });

                entity.ToTable("WSMY416");

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSubEvento)
                    .HasColumnName("COD_SUB_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula)
                    .HasColumnName("FORMULA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cargo)
                    .HasColumnName("CARGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy417>(entity =>
            {
                entity.HasKey(e => e.Dpto);

                entity.ToTable("WSMY417");

                entity.Property(e => e.Dpto)
                    .HasColumnName("DPTO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("DESCRIP")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy418>(entity =>
            {
                entity.HasKey(e => new { e.IdEmail, e.Dpto });

                entity.ToTable("WSMY418");

                entity.Property(e => e.IdEmail)
                    .HasColumnName("ID_EMAIL")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Dpto)
                    .HasColumnName("DPTO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("EMAIL")
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Oficina).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy419>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY419");

                entity.Property(e => e.CausaDepura)
                    .HasColumnName("CAUSA_DEPURA")
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(25)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnName("FECHA_REGISTRO")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy420>(entity =>
            {
                entity.HasKey(e => e.Idte);

                entity.ToTable("WSMY420");

                entity.Property(e => e.Idte)
                    .HasColumnName("IDTE")
                    .HasComment("CODIGO");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')")
                    .HasComment("DESCRIPCION");
            });

            modelBuilder.Entity<Wsmy421>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY421");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy422>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.Codigo, e.Troquel });

                entity.ToTable("WSMY422");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Troquel)
                    .HasColumnName("TROQUEL")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantMaxima)
                    .HasColumnName("CANT_MAXIMA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CantMinima)
                    .HasColumnName("CANT_MINIMA")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagLaser)
                    .HasColumnName("FLAG_LASER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSintroquel)
                    .HasColumnName("FLAG_SINTROQUEL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormasPaquete)
                    .HasColumnName("FORMAS_PAQUETE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FormulaFijo)
                    .HasColumnName("FORMULA_FIJO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MascBasica)
                    .HasColumnName("MASC_BASICA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascOpuesta)
                    .HasColumnName("MASC_OPUESTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MascOpuesta1)
                    .HasColumnName("MASC_OPUESTA_1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MedBasica)
                    .HasColumnName("MED_BASICA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.MedOpuesta)
                    .HasColumnName("MED_OPUESTA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.MedOpuesta1)
                    .HasColumnName("MED_OPUESTA_1")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.RangoVariable)
                    .HasColumnName("RANGO_VARIABLE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SubEvento)
                    .HasColumnName("SUB_EVENTO")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy423>(entity =>
            {
                entity.HasKey(e => new { e.CodVariable, e.Codigo, e.CodPapel });

                entity.ToTable("WSMY423");

                entity.Property(e => e.CodVariable)
                    .HasColumnName("COD_VARIABLE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodPapel)
                    .HasColumnName("COD_PAPEL")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagLaser)
                    .HasColumnName("FLAG_LASER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MarcaRecargo)
                    .HasColumnName("MARCA_RECARGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecargoFijo)
                    .HasColumnName("RECARGO_FIJO")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RecargoVariable)
                    .HasColumnName("RECARGO_VARIABLE")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy424>(entity =>
            {
                entity.HasKey(e => e.NumCot);

                entity.ToTable("WSMY424");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Colectora).HasColumnName("COLECTORA");

                entity.Property(e => e.DiasAcab).HasColumnName("DIAS_ACAB");

                entity.Property(e => e.DiasCole).HasColumnName("DIAS_COLE");

                entity.Property(e => e.DiasEmb).HasColumnName("DIAS_EMB");

                entity.Property(e => e.DiasPlan).HasColumnName("DIAS_PLAN");

                entity.Property(e => e.DiasPre).HasColumnName("DIAS_PRE");

                entity.Property(e => e.DiasPrensa).HasColumnName("DIAS_PRENSA");

                entity.Property(e => e.DiasProg).HasColumnName("DIAS_PROG");

                entity.Property(e => e.Prensa).HasColumnName("PRENSA");

                entity.Property(e => e.Total)
                    .HasColumnName("TOTAL")
                    .HasComputedColumnSql("([DIAS_PLAN] + [DIAS_PRE] + [DIAS_PROG] + [DIAS_PRENSA] + [DIAS_COLE] + [DIAS_ACAB] + [DIAS_EMB])");
            });

            modelBuilder.Entity<Wsmy425>(entity =>
            {
                entity.HasKey(e => new { e.Lista, e.CodEvento, e.Formula });

                entity.ToTable("WSMY425");

                entity.Property(e => e.Lista)
                    .HasColumnName("LISTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula)
                    .HasColumnName("FORMULA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy426>(entity =>
            {
                entity.HasKey(e => e.NumCot);

                entity.ToTable("WSMY426");

                entity.Property(e => e.NumCot)
                    .HasColumnName("NUM_COT")
                    .HasMaxLength(20);

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.DirEntregar)
                    .HasColumnName("DIR_ENTREGAR")
                    .HasMaxLength(240);

                entity.Property(e => e.DirFacturar)
                    .HasColumnName("DIR_FACTURAR")
                    .HasMaxLength(240);

                entity.Property(e => e.Recibocob)
                    .HasColumnName("RECIBOCOB")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.RifEntrega)
                    .HasColumnName("RIF_ENTREGA")
                    .HasMaxLength(12);

                entity.Property(e => e.RifFactura)
                    .HasColumnName("RIF_FACTURA")
                    .HasMaxLength(12);

                entity.Property(e => e.Rtotalventa)
                    .HasColumnName("RTOTALVENTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totalventa)
                    .HasColumnName("TOTALVENTA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy428>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.CodigoProducto, e.CodLista });

                entity.ToTable("WSMY428");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoProducto)
                    .HasColumnName("CODIGO_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ExcepcionParte)
                    .HasColumnName("EXCEPCION_PARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NivelAprob01)
                    .HasColumnName("NIVEL_APROB_01")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NivelAprob02)
                    .HasColumnName("NIVEL_APROB_02")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NroParte)
                    .HasColumnName("NRO_PARTE")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy429>(entity =>
            {
                entity.HasKey(e => e.Cotizacion);

                entity.ToTable("WSMY429");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy429_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Alo)
                    .HasColumnName("ALO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dadmond)
                    .HasColumnName("DADMOND")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Darch)
                    .HasColumnName("DARCH")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dcal)
                    .HasColumnName("DCAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dcxc)
                    .HasColumnName("DCXC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Ddis)
                    .HasColumnName("DDIS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dnegocio)
                    .HasColumnName("DNEGOCIO")
                    .HasDefaultValueSql("(0)")
                    .HasComment("DIAS DE NEGOCIACION");

                entity.Property(e => e.Dplan)
                    .HasColumnName("DPLAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dprog)
                    .HasColumnName("DPROG")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dsup)
                    .HasColumnName("DSUP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Dventas)
                    .HasColumnName("DVENTAS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Mes)
                    .HasColumnName("MES")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Noaprobcxcauto)
                    .HasColumnName("NOAPROBCXCAUTO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PaseEntesp)
                    .HasColumnName("PASE_ENTESP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Radmond)
                    .HasColumnName("RADMOND")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rcal)
                    .HasColumnName("RCAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rcxc)
                    .HasColumnName("RCXC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rdis)
                    .HasColumnName("RDIS")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rprog)
                    .HasColumnName("RPROG")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Rsup)
                    .HasColumnName("RSUP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .HasComputedColumnSql("(left([COTIZACION],4))");

                entity.Property(e => e.Web)
                    .IsRequired()
                    .HasColumnName("WEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("COTIZACIONES SISTEMA ORION");
            });

            modelBuilder.Entity<Wsmy430>(entity =>
            {
                entity.HasKey(e => e.TipoDoc);

                entity.ToTable("WSMY430");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("TIPO_DOC")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(30);

                entity.Property(e => e.MaxLinea)
                    .HasColumnName("MAX_LINEA")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<Wsmy431>(entity =>
            {
                entity.HasKey(e => new { e.Documento, e.TipoDoc, e.Linea, e.Cotizacion });

                entity.ToTable("WSMY431");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_WSMY431");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy431orden");

                entity.Property(e => e.Documento)
                    .HasColumnName("DOCUMENTO")
                    .HasColumnType("decimal(10, 0)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("NÚMERO DEL DOCUMENTO RC Ó SDF");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("TIPO_DOC")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("TIPO DE DOCUMENTO");

                entity.Property(e => e.Linea)
                    .HasColumnName("LINEA")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("LINEA DEL DOCUMENTO");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')")
                    .HasComment("NUMERO DE LA COTIZACIÓN");

                entity.Property(e => e.DocumentoJde)
                    .HasColumnName("DOCUMENTO_JDE")
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LineaJde)
                    .HasColumnName("LINEA_JDE")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Monto)
                    .HasColumnName("MONTO")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("MONTO DEL DOCUMENTO");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("NUMERO DE LA ORDEN");

                entity.Property(e => e.Rmonto)
                    .HasColumnName("RMONTO")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)")
                    .HasComment("MONTO DEL DOCUMENTO");
            });

            modelBuilder.Entity<Wsmy432>(entity =>
            {
                entity.HasKey(e => new { e.CodLista, e.CodEvento, e.NroParte, e.NroFormula });

                entity.ToTable("WSMY432");

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroParte)
                    .HasColumnName("NRO_PARTE")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroFormula)
                    .HasColumnName("NRO_FORMULA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cargo)
                    .HasColumnName("CARGO")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MedidaOpuesta)
                    .HasColumnName("MEDIDA_OPUESTA")
                    .HasColumnType("numeric(18, 4)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy433>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY433");

                entity.Property(e => e.CodEvento)
                    .HasColumnName("COD_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLista)
                    .HasColumnName("COD_LISTA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodPapel)
                    .IsRequired()
                    .HasColumnName("COD_PAPEL")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formato)
                    .HasColumnName("FORMATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Formula)
                    .HasColumnName("FORMULA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy434>(entity =>
            {
                entity.HasKey(e => e.Usuario);

                entity.ToTable("WSMY434");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AlertaRnc).HasColumnName("AlertaRNC");
            });

            modelBuilder.Entity<Wsmy435>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY435");

                entity.HasIndex(e => new { e.NombreUsuario, e.Oficina })
                    .HasName("IX_WSMY435")
                    .IsUnique();

                entity.Property(e => e.FecReg)
                    .HasColumnName("Fec_Reg")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.General)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SoloRnc)
                    .HasColumnName("Solo_RNC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy436>(entity =>
            {
                entity.HasKey(e => e.IdCategoria);

                entity.ToTable("WSMY436");

                entity.Property(e => e.IdCategoria).ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrint).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy437>(entity =>
            {
                entity.HasKey(e => e.IdSubCategoria);

                entity.ToTable("WSMY437");

                entity.Property(e => e.IdSubCategoria).ValueGeneratedNever();

                entity.Property(e => e.CategoriaValoracion).HasMaxLength(4);

                entity.Property(e => e.CentroDeBeneficio).HasMaxLength(10);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GrupoArticulo).HasMaxLength(10);

                entity.Property(e => e.GrupoMaterial).HasMaxLength(2);

                entity.Property(e => e.GrupoMaterial1).HasMaxLength(3);

                entity.Property(e => e.GrupoMaterial2).HasMaxLength(3);

                entity.Property(e => e.GrupoMaterial3).HasMaxLength(3);

                entity.Property(e => e.Imputacion).HasMaxLength(2);

                entity.Property(e => e.IndicadorAbc)
                    .HasColumnName("IndicadorABC")
                    .HasMaxLength(1);

                entity.Property(e => e.IndicadorControldePrecios).HasMaxLength(1);

                entity.Property(e => e.PlanificacionNecesidades).HasMaxLength(3);

                entity.Property(e => e.PorcCypj)
                    .HasColumnName("PorcCYPJ")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCypjgob)
                    .HasColumnName("PorcCYPJGob")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCypjgobMinimo)
                    .HasColumnName("PorcCYPJGobMinimo")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCypjminimo)
                    .HasColumnName("PorcCYPJMinimo")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Sector).HasMaxLength(2);

                entity.Property(e => e.TipoMaterialSap)
                    .HasColumnName("TipoMaterialSAP")
                    .HasMaxLength(10);

                entity.Property(e => e.TipoPosicion).HasMaxLength(4);

                entity.Property(e => e.TipoValoracion).HasMaxLength(1);

                entity.Property(e => e.ValidaMc)
                    .HasColumnName("ValidaMC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')")
                    .HasComment("Flag validación mc");

                entity.HasOne(d => d.IdCategoriaNavigation)
                    .WithMany(p => p.Wsmy437)
                    .HasForeignKey(d => d.IdCategoria)
                    .HasConstraintName("FK_WSMY437_WSMY436");

                entity.HasOne(d => d.IdProductoCuotaNavigation)
                    .WithMany(p => p.Wsmy437)
                    .HasForeignKey(d => d.IdProductoCuota)
                    .HasConstraintName("FK_WSMY437_WSMY438");
            });

            modelBuilder.Entity<Wsmy43702222017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY43702222017");

                entity.Property(e => e.CategoriaValoracion).HasMaxLength(4);

                entity.Property(e => e.CentroDeBeneficio).HasMaxLength(10);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GrupoArticulo).HasMaxLength(10);

                entity.Property(e => e.GrupoMaterial).HasMaxLength(2);

                entity.Property(e => e.GrupoMaterial1).HasMaxLength(3);

                entity.Property(e => e.GrupoMaterial2).HasMaxLength(3);

                entity.Property(e => e.GrupoMaterial3).HasMaxLength(3);

                entity.Property(e => e.Imputacion).HasMaxLength(2);

                entity.Property(e => e.IndicadorAbc)
                    .HasColumnName("IndicadorABC")
                    .HasMaxLength(1);

                entity.Property(e => e.IndicadorControldePrecios).HasMaxLength(1);

                entity.Property(e => e.PlanificacionNecesidades).HasMaxLength(3);

                entity.Property(e => e.PorcCypj)
                    .HasColumnName("PorcCYPJ")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.PorcCypjminimo)
                    .HasColumnName("PorcCYPJMinimo")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Sector).HasMaxLength(2);

                entity.Property(e => e.TipoMaterialSap)
                    .HasColumnName("TipoMaterialSAP")
                    .HasMaxLength(10);

                entity.Property(e => e.TipoPosicion).HasMaxLength(4);

                entity.Property(e => e.TipoValoracion).HasMaxLength(1);

                entity.Property(e => e.ValidaMc)
                    .HasColumnName("ValidaMC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy438>(entity =>
            {
                entity.HasKey(e => e.IdProductoCuota);

                entity.ToTable("WSMY438");

                entity.Property(e => e.IdProductoCuota).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasMaxLength(30);

                entity.HasOne(d => d.IdCuotaPadreNavigation)
                    .WithMany(p => p.InverseIdCuotaPadreNavigation)
                    .HasForeignKey(d => d.IdCuotaPadre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY438_WSMY438");
            });

            modelBuilder.Entity<Wsmy43802222017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY43802222017");

                entity.Property(e => e.Descripcion).HasMaxLength(30);
            });

            modelBuilder.Entity<Wsmy439>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY439");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.PorAfecta)
                    .HasColumnName("POR_AFECTA")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.TituloOficina)
                    .IsRequired()
                    .HasColumnName("TITULO_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy440>(entity =>
            {
                entity.HasKey(e => new { e.IdOficina, e.Mes, e.Año, e.Tipo });

                entity.ToTable("WSMY440");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Costos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rcostos)
                    .HasColumnName("RCostos")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValor_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("Valor_Venta")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy441>(entity =>
            {
                entity.HasKey(e => new { e.IdOficina, e.Mes, e.Año });

                entity.ToTable("WSMY441");

                entity.Property(e => e.Costos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rcostos)
                    .HasColumnName("RCostos")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValor_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("Valor_Venta")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy442>(entity =>
            {
                entity.HasKey(e => new { e.IdVendedor, e.Mes, e.Año });

                entity.ToTable("WSMY442");

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ClientesAtendidos).HasColumnName("Clientes_Atendidos");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy443>(entity =>
            {
                entity.HasKey(e => e.IdCuota);

                entity.ToTable("WSMY443");

                entity.HasIndex(e => new { e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdProductoCuota })
                    .HasName("IX_WSMY443_2");

                entity.HasIndex(e => new { e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdSubCategoria })
                    .HasName("IX_WSMY443_1");

                entity.HasIndex(e => new { e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdProductoCuota, e.IdSubCategoria })
                    .HasName("IX_WSMY443_3")
                    .IsUnique();

                entity.HasIndex(e => new { e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdSubCategoria, e.IdCuota })
                    .HasName("IX_WSMY443")
                    .IsUnique();

                entity.HasIndex(e => new { e.CuotaFinal, e.AnoContable, e.MesContable, e.CodigoVendedor, e.IdCuota, e.ProductoMayor, e.SubCategoria })
                    .HasName("_dta_index_WSMY443_34_1045682873__K3_K2_K4_K1_K10_K18_16");

                entity.HasIndex(e => new { e.CuotaFinal, e.ProductoMayor, e.TipoCuota, e.SubCategoria, e.IdCuota, e.CodigoVendedor, e.AnoContable, e.MesContable })
                    .HasName("_dta_index_WSMY443_34_1045682873__K3_K2_1_4_10_12_16_18");

                entity.Property(e => e.IdCuota)
                    .HasColumnName("ID_CUOTA")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AnoContable).HasColumnName("ANO_CONTABLE");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoSupervisor)
                    .HasColumnName("CODIGO_SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaAcumulada)
                    .HasColumnName("CUOTA_ACUMULADA")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CuotaFinal)
                    .HasColumnName("Cuota_Final")
                    .HasColumnType("money");

                entity.Property(e => e.CuotaPiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CuotaPiesCuadradoFinal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CuotaVentas)
                    .HasColumnName("CUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.GerenteOficina)
                    .HasColumnName("GERENTE_OFICINA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreSupervisor)
                    .HasColumnName("NOMBRE_SUPERVISOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Porcentaje).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RcuotaAcumulada)
                    .HasColumnName("RCUOTA_ACUMULADA")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcuotaFinal)
                    .HasColumnName("RCuota_Final")
                    .HasColumnType("money");

                entity.Property(e => e.RcuotaVentas)
                    .HasColumnName("RCUOTA_VENTAS")
                    .HasColumnType("money");

                entity.Property(e => e.SubCategoria)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCuota)
                    .HasColumnName("TIPO_CUOTA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("TITULO_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy444>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Orden, e.CodProducto, e.TipoMc, e.Documento, e.Job, e.Copy, e.Id });

                entity.ToTable("WSMY444");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy444orden");

                entity.HasIndex(e => new { e.Orden, e.CodProducto, e.TipoMc })
                    .HasName("IX_WSMY444");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TipoMc)
                    .HasColumnName("TIPO_MC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Documento)
                    .HasColumnName("DOCUMENTO")
                    .HasColumnType("decimal(10, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Job)
                    .HasColumnName("JOB")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AloOrden)
                    .HasColumnName("ALO_ORDEN")
                    .HasColumnType("numeric(4, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinan)
                    .HasColumnName("BS_MC_FINAN")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnName("BS_MC_FINANSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnName("BS_MC_PAPEL")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Execpcion)
                    .HasColumnName("EXECPCION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.McValidado)
                    .HasColumnName("MC_VALIDADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MesOrden)
                    .HasColumnName("MES_ORDEN")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnName("PORC_MC_FINAN")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnName("RBS_MC_FINAN")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TipoProduct)
                    .HasColumnName("TIPO_PRODUCT")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Web)
                    .HasColumnName("WEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy445>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.CodProducto });

                entity.ToTable("WSMY445");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy445_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoCic)
                    .HasColumnName("SIGNO_CIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGic)
                    .HasColumnName("SIGNO_GIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGo)
                    .HasColumnName("SIGNO_GO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGop)
                    .HasColumnName("SIGNO_GOP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoGr)
                    .HasColumnName("SIGNO_GR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoTl)
                    .HasColumnName("SIGNO_TL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SignoV)
                    .HasColumnName("SIGNO_V")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorCic)
                    .HasColumnName("VALOR_CIC")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGic)
                    .HasColumnName("VALOR_GIC")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGo)
                    .HasColumnName("VALOR_GO")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGop)
                    .HasColumnName("VALOR_GOP")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorGr)
                    .HasColumnName("VALOR_GR")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorTl)
                    .HasColumnName("VALOR_TL")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ValorV)
                    .HasColumnName("VALOR_V")
                    .HasColumnType("numeric(2, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy446>(entity =>
            {
                entity.HasKey(e => new { e.IdArchivo, e.Cotizacion, e.CodProd });

                entity.ToTable("WSMY446");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy446_Cotizacion");

                entity.Property(e => e.IdArchivo)
                    .HasColumnName("ID_ARCHIVO")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodProd)
                    .HasColumnName("COD_PROD")
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Referencia)
                    .IsRequired()
                    .HasColumnName("REFERENCIA")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RutaLocal)
                    .IsRequired()
                    .HasColumnName("RUTA_LOCAL")
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy447>(entity =>
            {
                entity.HasKey(e => new { e.IdReg, e.Cotizacion, e.Producto });

                entity.ToTable("WSMY447");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy447_Cotizacion");

                entity.Property(e => e.IdReg)
                    .HasColumnName("ID_REG")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion)
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20);

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(20);

                entity.Property(e => e.Estado)
                    .HasColumnName("ESTADO")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha)
                    .HasColumnName("FECHA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Observaciones)
                    .HasColumnName("OBSERVACIONES")
                    .HasColumnType("text");

                entity.Property(e => e.TipoEstado)
                    .HasColumnName("TIPO_ESTADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy448>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimSubCategoria");

                entity.ToTable("WSMY448");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaIni).HasColumnType("datetime");

                entity.Property(e => e.SubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy449>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimProductoCategoria");

                entity.ToTable("WSMY449");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaIni).HasColumnType("datetime");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("NOMBRE")
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecSubCategoria).HasColumnName("Rec_SubCategoria");
            });

            modelBuilder.Entity<Wsmy450>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimVendedorOficina");

                entity.ToTable("WSMY450");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClientesAsignados)
                    .HasColumnName("Clientes_Asignados")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CoberturaClienteMes)
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CoberturaClienteTrimestre)
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DiasCalleActual).HasDefaultValueSql("(0)");

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaIni).HasColumnType("datetime");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RcoberturaClienteMes)
                    .HasColumnName("RCoberturaClienteMes")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcoberturaClienteTrimestre)
                    .HasColumnName("RCoberturaClienteTrimestre")
                    .HasColumnType("decimal(10, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy451>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimCuotas");

                entity.ToTable("WSMY451");

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_WSMY451");

                entity.HasIndex(e => new { e.Año, e.Mes, e.CodVendedor, e.Subcategoria })
                    .HasName("IX_WSMY451_2");

                entity.HasIndex(e => new { e.Año, e.Mes, e.RecVendedor, e.RecSubCategoria })
                    .HasName("IX_WSMY451_1");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Año).HasColumnType("decimal(5, 0)");

                entity.Property(e => e.Categoria)
                    .HasColumnName("CATEGORIA")
                    .HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaAcumulada)
                    .HasColumnName("Cuota_Acumulada")
                    .HasColumnType("money");

                entity.Property(e => e.CuotaProducto)
                    .HasColumnName("Cuota_Producto")
                    .HasColumnType("money");

                entity.Property(e => e.Mes).HasColumnType("decimal(2, 0)");

                entity.Property(e => e.RcuotaAcumulada)
                    .HasColumnName("RCuota_Acumulada")
                    .HasColumnType("money");

                entity.Property(e => e.RcuotaProducto)
                    .HasColumnName("RCuota_Producto")
                    .HasColumnType("money");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");

                entity.Property(e => e.RecSubCategoria).HasColumnName("Rec_SubCategoria");

                entity.Property(e => e.RecVendedor).HasColumnName("Rec_Vendedor");

                entity.Property(e => e.Subcategoria)
                    .HasColumnName("SUBCATEGORIA")
                    .HasMaxLength(50);

                entity.Property(e => e.Teamleader)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy452>(entity =>
            {
                entity.HasKey(e => e.RecnumFactTable)
                    .HasName("PK_FactVentas");

                entity.ToTable("WSMY452");

                entity.Property(e => e.RecnumFactTable).HasColumnName("RECNUM_FactTable");

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsMcfinanEmb)
                    .HasColumnName("BsMCFinanEmb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Categoria)
                    .HasColumnName("CATEGORIA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnName("Fecha_Ingreso")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaIni).HasColumnType("datetime");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Idprintnoprint).HasColumnName("IDPRINTNOPRINT");

                entity.Property(e => e.Orden).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.PorCons)
                    .HasColumnName("Por_Cons")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorMc)
                    .HasColumnName("Por_MC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorMcFinan)
                    .HasColumnName("Por_MC_Finan")
                    .HasColumnType("numeric(16, 2)");

                entity.Property(e => e.RbsMc)
                    .HasColumnName("RBsMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");

                entity.Property(e => e.RecProducto).HasColumnName("Rec_Producto");

                entity.Property(e => e.RecVendedor).HasColumnName("Rec_Vendedor");

                entity.Property(e => e.RecnumOriginal).HasColumnName("RECNUM_Original");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValor_Lista")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValor_Venta")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Subcategoria)
                    .HasColumnName("SUBCATEGORIA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeader1)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("TITULO_OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("Valor_Venta")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.RecOficinaNavigation)
                    .WithMany(p => p.Wsmy452)
                    .HasForeignKey(d => d.RecOficina)
                    .HasConstraintName("FK_FactVentas_DimOficina");
            });

            modelBuilder.Entity<Wsmy453>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimOficina");

                entity.ToTable("WSMY453");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.FechaFin).HasColumnType("datetime");

                entity.Property(e => e.FechaIni).HasColumnType("datetime");

                entity.Property(e => e.PorAfecta)
                    .HasColumnName("Por_Afecta")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy454>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_FactRNC");

                entity.ToTable("WSMY454");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Costos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorAfecta)
                    .HasColumnName("Por_Afecta")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Rcostos)
                    .HasColumnName("RCostos")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");

                entity.Property(e => e.RecOrigen).HasColumnName("REC_Origen");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RValor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RValor_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("Valor_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.RecOficinaNavigation)
                    .WithMany(p => p.Wsmy454)
                    .HasForeignKey(d => d.RecOficina)
                    .HasConstraintName("FK_FactRNC_DimOficina");
            });

            modelBuilder.Entity<Wsmy455>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_FactCoberturaClientes");

                entity.ToTable("WSMY455");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.ClientesAtendidos).HasColumnName("Clientes_Atendidos");

                entity.Property(e => e.RecVendedor).HasColumnName("Rec_Vendedor");

                entity.Property(e => e.RecnumOrigen).HasColumnName("RECNUM_Origen");
            });

            modelBuilder.Entity<Wsmy456>(entity =>
            {
                entity.HasKey(e => e.IdCliente)
                    .HasName("PK_DimClientesDimension");

                entity.ToTable("WSMY456");

                entity.Property(e => e.IdCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_Cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");
            });

            modelBuilder.Entity<Wsmy457>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_DimClientes");

                entity.ToTable("WSMY457");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.BsMc).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RbsMc)
                    .HasColumnName("RBsMc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");

                entity.Property(e => e.RtotalVentas)
                    .HasColumnName("RTotalVentas")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvolumenVenta)
                    .HasColumnName("RVolumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaDol)
                    .HasColumnName("Volumen_Venta_Dol")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.RecOficinaNavigation)
                    .WithMany(p => p.Wsmy457)
                    .HasForeignKey(d => d.RecOficina)
                    .HasConstraintName("FK_DimClientes_DimOficina");
            });

            modelBuilder.Entity<Wsmy458>(entity =>
            {
                entity.HasKey(e => new { e.DescripRango, e.Año, e.Mes })
                    .HasName("PK_FactRangoVentas");

                entity.ToTable("WSMY458");

                entity.Property(e => e.DescripRango)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PorCliente)
                    .HasColumnName("Por_Cliente")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PorVenta)
                    .HasColumnName("Por_Venta")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.RTotalVenta)
                    .HasColumnName("rTotalVenta")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TotalVentAct).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentActDol).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentAnt).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentAntDol).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy459>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_FactTotVend");

                entity.ToTable("WSMY459");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Bsmc)
                    .HasColumnName("BSMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Categoria)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaAcumulada)
                    .HasColumnName("Cuota_Acumulada")
                    .HasColumnType("money");

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("Nombre_Vendedor")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Rbsmc)
                    .HasColumnName("RBSMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RcuotaAcumulada)
                    .HasColumnName("RCuota_Acumulada")
                    .HasColumnType("money");

                entity.Property(e => e.RvolumenVenta)
                    .HasColumnName("RVolumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvolumenVentaAnt)
                    .HasColumnName("RVolumen_Venta_Ant")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalOrdPp).HasColumnName("TotalOrdPP");

                entity.Property(e => e.TotalOrdPpant).HasColumnName("TotalOrdPPAnt");

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaAnt)
                    .HasColumnName("Volumen_Venta_Ant")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaDol)
                    .HasColumnName("Volumen_Venta_Dol")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy460>(entity =>
            {
                entity.HasKey(e => e.RecNum)
                    .HasName("PK_DimPrintNoPrint");

                entity.ToTable("WSMY460");

                entity.Property(e => e.PrintNoPrint)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy461>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY461");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Costos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RecVendedor).HasColumnName("REC_Vendedor");

                entity.Property(e => e.ValorLista)
                    .HasColumnName("Valor_Lista")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy462>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY462");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy462orden");

                entity.Property(e => e.Archivo)
                    .HasColumnName("ARCHIVO")
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasColumnName("COTIZACION")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Idreg)
                    .HasColumnName("IDREG")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy463>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY463");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Causa)
                    .HasColumnName("CAUSA")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Correlativo).HasColumnName("CORRELATIVO");

                entity.Property(e => e.Costo)
                    .HasColumnName("COSTO")
                    .HasColumnType("money");

                entity.Property(e => e.PorRes).HasColumnName("POR_RES");

                entity.Property(e => e.RecVendedor).HasColumnName("REC_Vendedor");

                entity.Property(e => e.Subcausa)
                    .HasColumnName("SUBCAUSA")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy464>(entity =>
            {
                entity.HasKey(e => new { e.RecOficina, e.IdRango, e.Año, e.Mes });

                entity.ToTable("WSMY464");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");

                entity.Property(e => e.PorCliente)
                    .HasColumnName("Por_Cliente")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PorVenta)
                    .HasColumnName("Por_Venta")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.RTotalVenta)
                    .HasColumnName("rTotalVenta")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Recnum)
                    .HasColumnName("RECNUM")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.TotalVentAct).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentActDol).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentAnt).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVentAntDol).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy465>(entity =>
            {
                entity.HasKey(e => e.IdRango);

                entity.ToTable("WSMY465");

                entity.Property(e => e.IdRango).ValueGeneratedNever();

                entity.Property(e => e.DescripRango)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy466>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY466");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.BsMc).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RBsMc)
                    .HasColumnName("rBsMc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RTotalVentas)
                    .HasColumnName("rTotalVentas")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RVolumenVenta)
                    .HasColumnName("rVolumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaDol)
                    .HasColumnName("Volumen_Venta_Dol")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy467>(entity =>
            {
                entity.HasKey(e => new { e.RecVendedor, e.Mes, e.Año });

                entity.ToTable("WSMY467");

                entity.Property(e => e.RecVendedor).HasColumnName("Rec_Vendedor");

                entity.Property(e => e.Facturado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rfacturado)
                    .HasColumnName("RFacturado")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rsaldo)
                    .HasColumnName("RSaldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Saldo).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy468>(entity =>
            {
                entity.HasKey(e => new { e.RecOficina, e.Mes, e.Año });

                entity.ToTable("WSMY468");

                entity.Property(e => e.RecOficina).HasColumnName("Rec_Oficina");
            });

            modelBuilder.Entity<Wsmy469>(entity =>
            {
                entity.ToTable("WSMY469");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy469orden");

                entity.HasIndex(e => e.Rif)
                    .HasName("IX_WSMY469_3");

                entity.HasIndex(e => new { e.Rif, e.NumeroSerieControlDesde, e.NumeroControlDesde })
                    .HasName("IX_WSMY469_2");

                entity.HasIndex(e => new { e.Id, e.Rif, e.NumeroSerieControlDesde, e.NumeroControlDesde, e.NumeroSerieControlHasta, e.NumeroControlHasta })
                    .HasName("IX_WSMY469")
                    .IsUnique();

                entity.HasIndex(e => new { e.Rif, e.Fecha, e.NumeroSerieControlDesde, e.NumeroControlDesde, e.NumeroSerieControlHasta, e.NumeroControlHasta })
                    .HasName("IX_WSMY469_1");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Copy).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraAgrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraModifica).HasColumnType("smalldatetime");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdDireccionFacturar)
                    .HasColumnName("Id_direccionFacturar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumeroControlDesde)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroControlHasta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSdf)
                    .HasColumnName("NumeroSDF")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieControlDesde)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieControlHasta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NumeroSerieFormatoDesde)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Orden).HasDefaultValueSql("((0))");

                entity.Property(e => e.Producto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioAgrega)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy469bk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY469bk");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraAgrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraModifica).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdDireccionFacturar)
                    .HasColumnName("Id_direccionFacturar")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumeroControlDesde)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroControlHasta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSdf).HasColumnName("NumeroSDF");

                entity.Property(e => e.NumeroSerieControlDesde)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieControlHasta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoDesde)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioAgrega)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy470>(entity =>
            {
                entity.HasKey(e => e.TipoDocumento);

                entity.ToTable("WSMY470");

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValidaNumero)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy471>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY471");

                entity.HasIndex(e => e.Año)
                    .HasName("IX_WSMY471_1");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy471orden");

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_WSMY471");

                entity.HasIndex(e => new { e.Año, e.Mes, e.TituloOficina, e.CodVendedor })
                    .HasName("IX_WSMY471_3");

                entity.HasIndex(e => new { e.Año, e.Mes, e.CodVendedor, e.Categoria, e.SubCategoria })
                    .HasName("IX_WSMY471_2");

                entity.Property(e => e.AñoMes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BsMcNoPrint).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsMcPrint).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsMcfinanEmb)
                    .HasColumnName("BsMCFinanEmb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Bsmc)
                    .HasColumnName("BSMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsmcActual)
                    .HasColumnName("BSMC_Actual")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CargoVendedor).HasMaxLength(25);

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .IsRequired()
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaProducto)
                    .HasColumnName("Cuota_Producto")
                    .HasColumnType("money");

                entity.Property(e => e.CuotaVendedor)
                    .HasMaxLength(100)
                    .IsFixedLength();

                entity.Property(e => e.DsoCia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DsoOficina).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DsoVendedor).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdTeamLeader)
                    .HasColumnName("IdTEAM_LEADER")
                    .HasMaxLength(4);

                entity.Property(e => e.NombreMes)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.OrdenActual)
                    .HasColumnName("Orden_Actual")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.OrdenAnterior)
                    .HasColumnName("Orden_Anterior")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Pie2Cuota).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Pie2Venta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbsMcNoPrint)
                    .HasColumnName("RBsMcNoPrint")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbsMcPrint)
                    .HasColumnName("RBsMcPrint")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbsMcfinanEmb)
                    .HasColumnName("RBsMCFinanEmb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rbsmc)
                    .HasColumnName("RBSMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbsmcActual)
                    .HasColumnName("RBSMC_Actual")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RvalorLista)
                    .HasColumnName("RVALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RvalorListaActual)
                    .HasColumnName("RValorListaActual")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnName("RVALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RventasActuales)
                    .HasColumnName("RVentasActuales")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RventasAnteriores)
                    .HasColumnName("RVentasAnteriores")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RventasNoPrint)
                    .HasColumnName("RVentasNoPrint")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RventasPrint)
                    .HasColumnName("RVentasPrint")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.TasaActual).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader1)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListaActual).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.VentasActuales).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasAnteriores).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasNoPrint).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasPrint).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Wsmy471temp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY471Temp");

                entity.HasIndex(e => e.IdTeamLeader)
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K37");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy471Temporden");

                entity.HasIndex(e => new { e.Año, e.CodVendedor })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_K3");

                entity.HasIndex(e => new { e.Categoria, e.Año })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_4");

                entity.HasIndex(e => new { e.SubCategoria, e.Año })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_5");

                entity.HasIndex(e => new { e.Bsmc, e.ValorLista, e.Año })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_8_10");

                entity.HasIndex(e => new { e.ValorVenta, e.Orden, e.Año })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_7_9");

                entity.HasIndex(e => new { e.Mes, e.IdOficina, e.Año, e.CodVendedor })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_K3_2_36");

                entity.HasIndex(e => new { e.Año, e.Mes, e.CodVendedor, e.Categoria, e.SubCategoria })
                    .HasName("_dta_index_WSMY471Temp_34_1157683272__K1_K2_K3_K4_K5");

                entity.HasIndex(e => new { e.Año, e.Mes, e.Vendedor, e.Categoria, e.SubCategoria })
                    .HasName("IX_WSMY471Temp");

                entity.Property(e => e.AñoMes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BsMcNoPrint).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsMcPrint).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsMcfinanEmb)
                    .HasColumnName("BsMCFinanEmb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Bsmc)
                    .HasColumnName("BSMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.BsmcActual)
                    .HasColumnName("BSMC_Actual")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.CargoVendedor).HasMaxLength(25);

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CuotaProducto)
                    .HasColumnName("Cuota_Producto")
                    .HasColumnType("money");

                entity.Property(e => e.CuotaVendedor)
                    .HasMaxLength(100)
                    .IsFixedLength();

                entity.Property(e => e.DsoCia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DsoOficina).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DsoVendedor).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdTeamLeader)
                    .HasColumnName("IdTEAM_LEADER")
                    .HasMaxLength(4);

                entity.Property(e => e.NombreMes)
                    .HasMaxLength(40)
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.OrdenActual)
                    .HasColumnName("Orden_Actual")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.OrdenAnterior)
                    .HasColumnName("Orden_Anterior")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Pie2Cuota).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Pie2Venta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.TasaActual).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader1)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista)
                    .HasColumnName("VALOR_LISTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorListaActual).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ValorVenta)
                    .HasColumnName("VALOR_VENTA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.VentasActuales).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasAnteriores).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasNoPrint).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasPrint).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Wsmy472>(entity =>
            {
                entity.ToTable("WSMY472");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasColumnName("Nombre_Cliente")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotalMc)
                    .HasColumnName("TotalMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaDol).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaDol)
                    .HasColumnName("Volumen_Venta_Dol")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy473>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY473");

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TotalMc)
                    .HasColumnName("TotalMC")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalVentaDol).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VolumenVentaDol)
                    .HasColumnName("Volumen_Venta_Dol")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy474>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY474");

                entity.Property(e => e.DirectorFinanzaEmail)
                    .HasColumnName("Director_Finanza_email")
                    .HasMaxLength(50);

                entity.Property(e => e.DirectorVentasEmail)
                    .HasColumnName("Director_Ventas_email")
                    .HasMaxLength(50);

                entity.Property(e => e.JefeCreditoCobranzaEmail)
                    .HasColumnName("Jefe_Credito_Cobranza_email")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy475>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY475");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy475orden");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraAgrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraModifica).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdDireccionFacturar)
                    .HasColumnName("Id_direccionFacturar")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumeroControlDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroControlHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieControlDesde)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieControlHasta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoDesde)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioAgrega)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy476>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY476");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy476orden");

                entity.Property(e => e.Contador)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EnviarEmail)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraAgrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaHoraModifica).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdBloqueador).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.LongitudMascara).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NumeroControlDesde)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroControlHasta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoDesde)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroFormatoHasta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieControlDesde)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieControlHasta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoDesde)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumeroSerieFormatoHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDocumento)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioAgrega)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioModifica)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy477>(entity =>
            {
                entity.HasKey(e => new { e.Anticipo, e.Linea });

                entity.ToTable("WSMY477");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy477orden");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Orden).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy482>(entity =>
            {
                entity.ToTable("WSMY482");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AñoMes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantidadActual).HasColumnName("Cantidad_Actual");

                entity.Property(e => e.CantidadAnterior).HasColumnName("Cantidad_Anterior");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CostosActuales).HasColumnType("money");

                entity.Property(e => e.CostosAnteriores).HasColumnType("money");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NombreMes)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Proveedor)
                    .HasColumnName("PROVEEDOR")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader1)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorListaActual).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy483>(entity =>
            {
                entity.ToTable("WSMY483");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AñoMes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantidadActual).HasColumnName("Cantidad_Actual");

                entity.Property(e => e.CantidadAnterior).HasColumnName("Cantidad_Anterior");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CostosActuales).HasColumnType("money");

                entity.Property(e => e.CostosAnteriores).HasColumnType("money");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NombreMes)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.SubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader1)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorListaActual).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy484>(entity =>
            {
                entity.ToTable("WSMY484");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AñoMes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantidadActual).HasColumnName("Cantidad_Actual");

                entity.Property(e => e.CantidadAnterior).HasColumnName("Cantidad_Anterior");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CostosActuales).HasColumnType("money");

                entity.Property(e => e.CostosAnteriores).HasColumnType("money");

                entity.Property(e => e.Gerente)
                    .HasColumnName("GERENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NombreMes)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Responsable)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SubCategoria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeader)
                    .HasColumnName("TEAM_LEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Teamleader1)
                    .HasColumnName("TEAMLEADER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TituloOficina)
                    .HasColumnName("Titulo_Oficina")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValorListaActual).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy485>(entity =>
            {
                entity.HasKey(e => new { e.IdMaquina, e.FechaProceso, e.NombreProductos });

                entity.ToTable("WSMY485");

                entity.Property(e => e.FechaProceso).HasColumnType("datetime");

                entity.Property(e => e.NombreProductos)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(10, 3)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Eficienca).HasColumnType("decimal(14, 3)");

                entity.Property(e => e.FechaPronostico).HasColumnType("datetime");

                entity.Property(e => e.FlagListo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.HorasTrabajo).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Linea)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TotalDias)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TotalPies)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TotalVenta)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy486>(entity =>
            {
                entity.HasKey(e => new { e.IdPronostico, e.Orden, e.Job, e.IdMaquina });

                entity.ToTable("WSMY486");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy486orden");

                entity.Property(e => e.IdPronostico).HasDefaultValueSql("('')");

                entity.Property(e => e.Dias).HasColumnType("numeric(12, 3)");

                entity.Property(e => e.FechaPronostico).HasColumnType("datetime");

                entity.Property(e => e.FlagFuera)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagListo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Pies).HasColumnType("numeric(12, 3)");

                entity.Property(e => e.PiesPrensa).HasColumnType("numeric(12, 3)");
            });

            modelBuilder.Entity<Wsmy489>(entity =>
            {
                entity.HasKey(e => new { e.Producto, e.Año, e.Mes, e.AñoPronostico, e.MesPronostico });

                entity.ToTable("WSMY489");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.VentasPro).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.VentasReales).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Wsmy490>(entity =>
            {
                entity.HasKey(e => new { e.Linea, e.Familia, e.Codigo, e.MedidaBasica });

                entity.ToTable("WSMY490");

                entity.Property(e => e.Linea)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Codigo)
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy491>(entity =>
            {
                entity.HasKey(e => new { e.Tipo, e.Año, e.Mes, e.CodVendedor });

                entity.ToTable("WSMY491");

                entity.HasIndex(e => e.Año)
                    .HasName("IX_WSMY491");

                entity.Property(e => e.Tipo).HasColumnName("tipo");

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy492>(entity =>
            {
                entity.HasKey(e => new { e.Tipo, e.Año, e.Mes, e.Oficina, e.CodVendedor });

                entity.ToTable("WSMY492");

                entity.Property(e => e.Oficina)
                    .HasColumnName("OFICINA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("COD_VENDEDOR")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VolumenVenta)
                    .HasColumnName("Volumen_Venta")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy494>(entity =>
            {
                entity.ToTable("WSMY494");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy494cotizacion");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aplicacion)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion).HasMaxLength(20);

                entity.Property(e => e.Evento).HasColumnType("ntext");

                entity.Property(e => e.FechaHora).HasColumnType("datetime");

                entity.Property(e => e.Orden).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RespuestaUsuario)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy495>(entity =>
            {
                entity.ToTable("WSMY495");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy495orden");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.CodigoRazon).HasColumnName("CODIGO_RAZON");

                entity.Property(e => e.Fechaagrega)
                    .HasColumnName("FECHAAGREGA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fechahorad)
                    .HasColumnName("FECHAHORAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fechahoram)
                    .HasColumnName("FECHAHORAM")
                    .HasColumnType("datetime");

                entity.Property(e => e.Grupo).HasColumnName("GRUPO");

                entity.Property(e => e.NroExcepcion).HasColumnName("NRO_EXCEPCION");

                entity.Property(e => e.Orden)
                    .HasColumnName("ORDEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Producto)
                    .HasColumnName("PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Razon)
                    .HasColumnName("RAZON")
                    .HasColumnType("ntext");

                entity.Property(e => e.Tratada)
                    .HasColumnName("TRATADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy496>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY496");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Agregado)
                    .HasColumnName("AGREGADO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Aplicacion)
                    .HasColumnName("APLICACION")
                    .HasMaxLength(30);

                entity.Property(e => e.Campo)
                    .HasColumnName("CAMPO")
                    .HasMaxLength(50);

                entity.Property(e => e.Condicion)
                    .HasColumnName("CONDICION")
                    .HasMaxLength(50);

                entity.Property(e => e.FechaHora)
                    .HasColumnName("FECHA_HORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Grupo).HasColumnName("GRUPO");

                entity.Property(e => e.Tabla)
                    .HasColumnName("TABLA")
                    .HasMaxLength(15);

                entity.Property(e => e.Valor1)
                    .HasColumnName("VALOR1")
                    .HasMaxLength(30);

                entity.Property(e => e.Valor2)
                    .HasColumnName("VALOR2")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<Wsmy497>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY497");

                entity.Property(e => e.Codigo)
                    .HasColumnName("CODIGO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50);

                entity.Property(e => e.Tipo).HasColumnName("TIPO");
            });

            modelBuilder.Entity<Wsmy498>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY498");

                entity.Property(e => e.Dias)
                    .HasMaxLength(7)
                    .IsFixedLength();

                entity.Property(e => e.Email)
                    .HasColumnName("email")
                    .HasMaxLength(50)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy499>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Producto });

                entity.ToTable("WSMY499");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy499_Cotizacion");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.PorcentajeMc)
                    .HasColumnName("PorcentajeMC")
                    .HasColumnType("decimal(10, 4)");

                entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(16, 2)");
            });

            modelBuilder.Entity<Wsmy500>(entity =>
            {
                entity.HasKey(e => new { e.Producto, e.FechaIni, e.FechaFin });

                entity.ToTable("WSMY500");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.FechaIni).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaFin).HasColumnType("smalldatetime");

                entity.Property(e => e.BsMcbase)
                    .HasColumnName("BsMCBase")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.FormasTotalesDisponibles).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Wsmy501>(entity =>
            {

              

                entity.HasKey(e => e.Cotizacion);

                entity.ToTable("WSMY501");

                entity.HasIndex(e => e.CodCliente)
                    .HasName("IX_WSMY501");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy501_Cotizacion");

                entity.HasIndex(e => e.Estatus)
                    .HasName("IX_WSMY501_1");

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_WSMY501_2");

                entity.HasIndex(e => new { e.CodVendedor, e.Fecha })
                    .HasName("IX_Vendedor_fecha");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.CambioPrecio).HasDefaultValueSql("((0))");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4);

                entity.Property(e => e.DireccionEntregar).HasMaxLength(240);

                entity.Property(e => e.DireccionFacturar).HasMaxLength(240);

                entity.Property(e => e.EmailCliente)
                    .HasColumnName("Email_Cliente")
                    .HasMaxLength(60);

                entity.Property(e => e.EmailContacto).HasMaxLength(250);

                entity.Property(e => e.EstadoEntregar).HasMaxLength(2);

                entity.Property(e => e.EstadoFacturar).HasMaxLength(2);

                entity.Property(e => e.EvaluadaAdministradora).HasDefaultValueSql("((0))");

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaActualiza).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCaducidad)
                    .HasColumnName("Fecha_Caducidad")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCerrada)
                    .HasColumnName("Fecha_Cerrada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaEnEspera)
                    .HasColumnName("Fecha_EnEspera")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaPago).HasColumnType("datetime");

                entity.Property(e => e.FechaPostergada)
                    .HasColumnName("Fecha_Postergada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaReactivacion).HasColumnType("datetime");

                entity.Property(e => e.FijarPrecioBs).HasDefaultValueSql("((0))");

                entity.Property(e => e.FijarPrecioBsAprobado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagActualizado)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagValidado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagWebSite)
                    .HasMaxLength(2)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                

                entity.Property(e => e.IdClienteProspecto)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdContacto).HasColumnName("Id_Contacto");

                entity.Property(e => e.IdDireccion)
                    .HasColumnName("Id_direccion")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdMedio).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdTipoTransaccion)
                    .IsRequired()
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdsolicitudCredito)
                    .HasColumnName("idsolicitudCredito")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ImprimirFacturaEnUsd)
                    .HasColumnName("ImprimirFacturaEnUSD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MunicipioEntregar).HasMaxLength(2);

                entity.Property(e => e.MunicipioFacturar).HasMaxLength(2);

                entity.Property(e => e.NegocioEnUsd).HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreContacto).HasMaxLength(250);

                entity.Property(e => e.Noreplicar).HasDefaultValueSql("((0))");

                entity.Property(e => e.ObservacionPago).HasDefaultValueSql("('')");

                entity.Property(e => e.ObservacionPostergar)
                    .HasColumnName("Observacion_Postergar")
                    .HasMaxLength(500);

                entity.Property(e => e.Observaciones).HasMaxLength(250);

                entity.Property(e => e.OrdenCompra)
                    .HasMaxLength(16)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Prospecto).HasMaxLength(1);

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("Razon_Social")
                    .HasMaxLength(80);

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.RifEntregar)
                    .HasMaxLength(12)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TasaExcepcion)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TelefonoContacto).HasMaxLength(250);

                entity.Property(e => e.UltimoEvaluadorCredito).HasMaxLength(40);

                entity.Property(e => e.UsuarioActualiza).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy501log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY501Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy501log_Cotizacion");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.DireccionEntregar).HasMaxLength(240);

                entity.Property(e => e.DireccionFacturar).HasMaxLength(240);

                entity.Property(e => e.EmailCliente)
                    .HasColumnName("Email_Cliente")
                    .HasMaxLength(60);

                entity.Property(e => e.EmailContacto).HasMaxLength(250);

                entity.Property(e => e.EstadoEntregar).HasMaxLength(2);

                entity.Property(e => e.EstadoFacturar).HasMaxLength(2);

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaActualiza).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCaducidad)
                    .HasColumnName("Fecha_Caducidad")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaCerrada)
                    .HasColumnName("Fecha_Cerrada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaEnEspera)
                    .HasColumnName("Fecha_EnEspera")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaPostergada)
                    .HasColumnName("Fecha_Postergada")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaReactivacion).HasColumnType("datetime");

                entity.Property(e => e.FlagActualizado).HasMaxLength(1);

                entity.Property(e => e.FlagValidado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagWebSite).HasMaxLength(2);

                entity.Property(e => e.IdContacto).HasColumnName("Id_Contacto");

                entity.Property(e => e.IdDireccion)
                    .HasColumnName("Id_direccion")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdDireccionEntregar)
                    .HasColumnName("Id_direccionEntregar")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MunicipioEntregar).HasMaxLength(2);

                entity.Property(e => e.MunicipioFacturar).HasMaxLength(2);

                entity.Property(e => e.NombreContacto).HasMaxLength(250);

                entity.Property(e => e.ObservacionPostergar)
                    .HasColumnName("Observacion_Postergar")
                    .HasMaxLength(500);

                entity.Property(e => e.Observaciones).HasMaxLength(250);

                entity.Property(e => e.OrdenCompra).HasMaxLength(16);

                entity.Property(e => e.Prospecto).HasMaxLength(1);

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("Razon_Social")
                    .HasMaxLength(80);

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.RifEntregar).HasMaxLength(12);

                entity.Property(e => e.TelefonoContacto).HasMaxLength(250);

                entity.Property(e => e.UsuarioActualiza).HasMaxLength(50);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy502>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon })
                    .HasName("PK_WSMY502_1");

                entity.ToTable("WSMY502");

                entity.HasComment("Renglones de Cotizacion");

                entity.HasIndex(e => e.CodProducto)
                    .HasName("IX_WSMY502_5");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_cotizacion");

                entity.HasIndex(e => e.Estatus)
                    .HasName("IX_WSMY502");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY502_2");

                entity.HasIndex(e => e.IdCombinada)
                    .HasName("IX_WSMY502_4");

                entity.HasIndex(e => e.LoteAct)
                    .HasName("ix_LOTE");

                entity.HasIndex(e => e.RazonGanadaPerdida)
                    .HasName("IX_WSMY502_1");

                entity.HasIndex(e => new { e.CodProducto, e.FechaRegistro })
                    .HasName("IX_WSMY502_6");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon })
                    .HasName("IX_WSMY502_3");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.AlertaCalidad)
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("Cod_Producto")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Combinada)
                    .HasMaxLength(4000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CotizacionDestino)
                    .HasColumnName("Cotizacion_Destino")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EstatusPlanta)
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnName("Fecha_Entrega")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagActualizado)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('X')");

                entity.Property(e => e.FlagImpContrato)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("(N'X')");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdReferenciaProducto).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdTituloCalendario).HasDefaultValueSql("((0))");

                entity.Property(e => e.LoteAct)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ObservacionesGanarPerder)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.RtotalGanado)
                    .HasColumnName("RTotal_Ganado")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalRenglon)
                    .HasColumnName("RTotal_Renglon")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalGanado)
                    .HasColumnName("Total_Ganado")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalGanadoUsd)
                    .HasColumnName("Total_GanadoUsd")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalRenglon)
                    .HasColumnName("Total_Renglon")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalRenglonUsd)
                    .HasColumnName("Total_RenglonUsd")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UnidadCotizacion)
                    .HasColumnName("Unidad_Cotizacion")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.HasOne(d => d.CotizacionNavigation)
                    .WithMany(p => p.Wsmy502)
                    .HasForeignKey(d => d.Cotizacion)
                    .HasConstraintName("FK_WSMY502_WSMY502");
            });

            modelBuilder.Entity<Wsmy502log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY502Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy502Logcotizacion");

                entity.Property(e => e.AlertaCalidad).HasMaxLength(1000);

                entity.Property(e => e.CodProducto)
                    .HasColumnName("Cod_Producto")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Combinada).HasMaxLength(40);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.CotizacionDestino)
                    .HasColumnName("Cotizacion_Destino")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EstatusPlanta).HasMaxLength(4);

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnName("Fecha_Entrega")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FechaReorden).HasColumnType("datetime");

                entity.Property(e => e.FlagActualizado).HasMaxLength(1);

                entity.Property(e => e.FlagImpContrato).HasMaxLength(1);

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.LoteAct).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ObservacionesGanarPerder)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.TotalGanado)
                    .HasColumnName("Total_Ganado")
                    .HasColumnType("decimal(20, 2)");

                entity.Property(e => e.TotalRenglon)
                    .HasColumnName("Total_Renglon")
                    .HasColumnType("decimal(20, 2)");

                entity.Property(e => e.UnidadCotizacion)
                    .HasColumnName("Unidad_Cotizacion")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy503>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY503");

                entity.HasIndex(e => e.Abreviado)
                    .HasName("IX_WSMY503")
                    .IsUnique();

                entity.Property(e => e.Codigo).ValueGeneratedNever();

                entity.Property(e => e.Abreviado)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CondicionRazonId).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlagActiva)
                    .HasColumnName("Flag_Activa")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagCaducaInactiva)
                    .HasColumnName("Flag_CaducaInactiva")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.FlagCaducada)
                    .HasColumnName("Flag_Caducada")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagEnEspera)
                    .HasColumnName("Flag_EnEspera")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagGanada)
                    .HasColumnName("Flag_Ganada")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagModificar)
                    .HasColumnName("Flag_Modificar")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagPerdida)
                    .HasColumnName("Flag_Perdida")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlagPostergada)
                    .HasColumnName("Flag_Postergada")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrimeraEstacion).HasMaxLength(1);
            });

            modelBuilder.Entity<Wsmy504>(entity =>
            {
                entity.HasKey(e => e.Porcentaje);

                entity.ToTable("WSMY504");

                entity.Property(e => e.Porcentaje).ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy505>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY505");

                entity.Property(e => e.Codigo).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy506>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY506");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy507>(entity =>
            {
                entity.HasKey(e => e.Id)
                    .IsClustered(false);

                entity.ToTable("WSMY507");

                entity.HasIndex(e => new { e.Año, e.Mes, e.Semana, e.Categoria, e.SubCategoria })
                    .HasName("IX_WSMY507")
                    .IsClustered();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.DescCategoria)
                    .HasColumnName("Desc_Categoria")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DescSubCategoria)
                    .HasColumnName("Desc_SubCAtegoria")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Estimado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SubCategoria).HasColumnName("Sub_Categoria");
            });

            modelBuilder.Entity<Wsmy508>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY508");

                entity.HasIndex(e => e.Semana)
                    .HasName("_dta_index_WSMY508_34_1278015684__K4");

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_WSMY508");

                entity.HasIndex(e => new { e.Mes, e.Semana, e.Año })
                    .HasName("_dta_index_WSMY508_c_34_1278015684__K3_K4_K2")
                    .IsClustered();

                entity.Property(e => e.DescCategoria).HasMaxLength(50);

                entity.Property(e => e.DescSubCategoria).HasMaxLength(50);

                entity.Property(e => e.Desde)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DiaHabil).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasHabiles).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.EstimadoAcumulado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstimadoDiario).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstimadoTotal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualizacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Hasta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SubCategoria).HasColumnName("Sub_Categoria");

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaAcumulada).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy509>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY509");

                entity.Property(e => e.DescCategoria).HasMaxLength(50);

                entity.Property(e => e.DescSubCategoria).HasMaxLength(50);

                entity.Property(e => e.Desde)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DiaHabil).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasHabiles).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.EstimadoAcumulado).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstimadoDiario).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstimadoTotal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualizacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Hasta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SubCategoria).HasColumnName("Sub_Categoria");

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaAcumulada).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy510>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY510");

                entity.Property(e => e.Desde)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DiaHabil).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasHabiles)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EstimadoAcumulado)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EstimadoDiario)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EstimadoTotal).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualizacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Hasta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentaAcumulada)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy511>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.ToTable("WSMY511");

                entity.Property(e => e.Codigo).ValueGeneratedNever();

                entity.Property(e => e.TextoColetilla)
                    .HasColumnName("Texto_Coletilla")
                    .HasColumnType("ntext");
            });

            modelBuilder.Entity<Wsmy512>(entity =>
            {
                entity.HasKey(e => e.CodigoMedida);

                entity.ToTable("WSMY512");

                entity.Property(e => e.CodigoMedida)
                    .HasColumnName("CODIGO_MEDIDA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descripcion)
                    .HasColumnName("DESCRIPCION")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy515>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta });

                entity.ToTable("WSMY515");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy515cotizacion");

                entity.HasIndex(e => e.CotizacionRenglonPropuesta)
                    .HasName("IX_WSMY515");

                entity.HasIndex(e => e.FechaRegistro)
                    .HasName("IX_WSMY515_3");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY515_2");

                entity.HasIndex(e => new { e.Cotizacion, e.Estatus })
                    .HasName("IX_WSMY515_4");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WSMY515_1")
                    .IsUnique();

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.BsListaCpj)
                    .HasColumnName("BsListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsListaCpjminimo)
                    .HasColumnName("BsListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cajas).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.CambComposicion).HasDefaultValueSql("((0))");

                entity.Property(e => e.CambioPrecio).HasDefaultValueSql("((0))");

                entity.Property(e => e.CantFormas)
                    .HasColumnName("Cant_Formas")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantMill).HasColumnName("Cant_Mill");

                entity.Property(e => e.CantXCaja)
                    .HasColumnName("Cant_x_Caja")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(16, 3)");

                entity.Property(e => e.CotizacionRenglonPropuesta).HasMaxLength(20);

                entity.Property(e => e.EstatusPlanta)
                    .HasMaxLength(4)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EvaluadoCambioPrecio).HasDefaultValueSql("((0))");

                entity.Property(e => e.EvaluarCredito).HasDefaultValueSql("((0))");

                entity.Property(e => e.FactorSdf).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagAprobado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagTipoRechazo)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagVolumen).HasDefaultValueSql("((0))");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdPresentacion)
                    .HasMaxLength(5)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdSolicitud)
                    .IsRequired()
                    .HasMaxLength(9)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdTablaCpj)
                    .HasColumnName("IdTablaCPJ")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ImpresionRetiro).HasMaxLength(100);

                entity.Property(e => e.ImpresionTiro).HasMaxLength(100);

                entity.Property(e => e.LoteAct)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MedidaTexto)
                    .HasColumnName("Medida_Texto")
                    .HasMaxLength(50);

                entity.Property(e => e.MensajeError).HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones).HasMaxLength(200);

                entity.Property(e => e.Papel).HasMaxLength(50);

                entity.Property(e => e.PorMc)
                    .HasColumnName("PorMC")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorMcBruto).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PorMcFinan)
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComRegulada)
                    .HasColumnType("numeric(5, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PorcCpj)
                    .HasColumnName("PorcCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcIva).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PorcLista)
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcMinimo).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PorcRespSocial)
                    .HasColumnType("numeric(5, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcTolerancia)
                    .HasColumnType("numeric(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioEtiqueta)
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioUnitario).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.RbsListaCpj)
                    .HasColumnName("RBsListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsListaCpjminimo)
                    .HasColumnName("RBsListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMc)
                    .HasColumnName("RBsMC")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RecalcularMargen)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Respaldo).HasMaxLength(100);

                entity.Property(e => e.RprecioEtiqueta)
                    .HasColumnName("RPrecioEtiqueta")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioUnitario)
                    .HasColumnName("RPrecioUnitario")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.RtotalBsListaCpj)
                    .HasColumnName("RTotalBsListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsListaCpjminimo)
                    .HasColumnName("RTotalBsListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalPropuesta)
                    .HasColumnName("RTotalPropuesta")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.TotalBsListaCpj)
                    .HasColumnName("TotalBsListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsListaCpjminimo)
                    .HasColumnName("TotalBsListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalPropuesta).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.TotalPropuestaUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.TotalUsdListaCpj)
                    .HasColumnName("TotalUsdListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalUsdListaCpjminimo)
                    .HasColumnName("TotalUsdListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UnidadCosteo).HasDefaultValueSql("((0))");

                entity.Property(e => e.UsdListaCpj)
                    .HasColumnName("UsdListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UsdListaCpjminimo)
                    .HasColumnName("UsdListaCPJMinimo")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Wsmy515log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY515Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy515Logcotizacion");

                entity.Property(e => e.BsMc)
                    .HasColumnName("BsMC")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.Cajas).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.CantFormas)
                    .HasColumnName("Cant_Formas")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantMill).HasColumnName("Cant_Mill");

                entity.Property(e => e.CantXCaja)
                    .HasColumnName("Cant_x_Caja")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(16, 3)");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.CotizacionRenglonPropuesta).HasMaxLength(20);

                entity.Property(e => e.EstatusPlanta).HasMaxLength(4);

                entity.Property(e => e.FactorSdf).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Id).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdPresentacion).HasMaxLength(5);

                entity.Property(e => e.IdSolicitud).HasMaxLength(9);

                entity.Property(e => e.ImpresionRetiro).HasMaxLength(100);

                entity.Property(e => e.ImpresionTiro).HasMaxLength(100);

                entity.Property(e => e.LoteAct).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MedidaTexto)
                    .HasColumnName("Medida_Texto")
                    .HasMaxLength(50);

                entity.Property(e => e.Observaciones).HasMaxLength(200);

                entity.Property(e => e.Papel).HasMaxLength(50);

                entity.Property(e => e.PorMc)
                    .HasColumnName("PorMC")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PorMcBruto).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.PorMcFinan).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.PorcComRegulada).HasColumnType("numeric(5, 3)");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.PorcMcMinimo).HasColumnType("numeric(5, 3)");

                entity.Property(e => e.PorcRespSocial).HasColumnType("numeric(5, 3)");

                entity.Property(e => e.PorcTolerancia).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.PrecioUnitario).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.RecalcularMargen).HasMaxLength(1);

                entity.Property(e => e.Respaldo).HasMaxLength(100);

                entity.Property(e => e.TotalPropuesta).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy516>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Cotizacion, e.Renglon, e.FechaArchivo });

                entity.ToTable("WSMY516");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy516cotizacion");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon })
                    .HasName("IX_WSMY516");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.FechaArchivo).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaSalidaArchivo).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.UsuarioArchivo).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy517>(entity =>
            {
                entity.HasKey(e => new { e.Requisicion, e.IdComentario });

                entity.ToTable("WSMY517");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(4000);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Hora).HasColumnType("datetime");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy518>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY518");

                entity.HasIndex(e => new { e.IdOficina, e.Ano, e.Mes })
                    .HasName("IX_WSMY518");

                entity.Property(e => e.BsMcAno).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.BsMcMes).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.CuotaMes).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.CuotaYtd)
                    .HasColumnName("CuotaYTD")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.DsoYtd).HasColumnName("DsoYTD");

                entity.Property(e => e.FechaActualizacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NombreOficina).HasMaxLength(100);

                entity.Property(e => e.PorcCuotaMes).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCuotaYtd)
                    .HasColumnName("PorcCuotaYTD")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMcAno).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMcMes).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntoAddCuota).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntoAddMc)
                    .HasColumnName("PuntoAddMC")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntoCoverCuota).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntoDso).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntoMc)
                    .HasColumnName("PuntoMC")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.VentasMesBolivar).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.VentasMesDolar).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.VentasYtdbolivar)
                    .HasColumnName("VentasYTDBolivar")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.VentasYtddolar)
                    .HasColumnName("VentasYTDDolar")
                    .HasColumnType("numeric(18, 3)");
            });

            modelBuilder.Entity<Wsmy519>(entity =>
            {
                entity.HasKey(e => new { e.Desde, e.Hasta });

                entity.ToTable("WSMY519");

                entity.Property(e => e.Desde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Hasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.IdRango).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreRango)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Wsmy520>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.Desde, e.Hasta });

                entity.ToTable("WSMY520");

                entity.Property(e => e.Desde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Hasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FechaActualizacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NombreRango)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.VentasActual).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.VentasAnterior).HasColumnType("numeric(18, 3)");
            });

            modelBuilder.Entity<Wsmy521>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.Oficina, e.AñoEmbarque, e.MesEmbarque })
                    .HasName("PK_wsmy521");

                entity.ToTable("WSMY521");

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy522>(entity =>
            {
                entity.ToTable("WSMY522");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy522orden");

                entity.HasIndex(e => new { e.Transaccion, e.Documento, e.Linea, e.CodigoProducto, e.Id })
                    .HasName("IX_WSMY522")
                    .IsUnique();

                entity.Property(e => e.BolivaresMc)
                    .HasColumnName("BolivaresMC")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.BolivaresMcanterior)
                    .HasColumnName("BolivaresMCAnterior")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BolivaresPagado).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.CodigoVendedor).HasMaxLength(4);

                entity.Property(e => e.DiferenciaOverrideGerenteOficina)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiferenciaOverrideGerenteRegion)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiferenciaOverrideSupervisor)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiferenciaPagar).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Documento).HasColumnType("decimal(10, 0)");

                entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Linea).HasColumnType("decimal(4, 0)");

                entity.Property(e => e.MontoDocumento).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.NuevoOverrideGerenteOficina).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.NuevoOverrideGerenteRegion)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NuevoOverrideSupervisor)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NuevoPorcentajeComision).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.NuevosBolivaresPagar).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.Observaciones).HasMaxLength(4000);

                entity.Property(e => e.OverrideGerenteOficina)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OverrideGerenteRegion)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OverrideSupervisor)
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PagaCadenaVentas).HasMaxLength(1);

                entity.Property(e => e.PorcentajeComision).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcentajeMc)
                    .HasColumnName("PorcentajeMC")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcentajeMcauditado)
                    .HasColumnName("PorcentajeMCAuditado")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcentajeOverrideGerenteOficina)
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeOverrideGerenteRegion)
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeOverrideSupervisor)
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Transaccion).HasMaxLength(2);

                entity.Property(e => e.TransaccionOriginal).HasMaxLength(2);

                entity.Property(e => e.UsuarioAprueba).HasMaxLength(40);

                entity.Property(e => e.UsuarioRegistra).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy523>(entity =>
            {
                entity.HasKey(e => new { e.Mes, e.Año, e.Fecha });

                entity.ToTable("WSMY523");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.EquipoRed).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreRol).HasMaxLength(50);

                entity.Property(e => e.NombreUsuario).HasMaxLength(100);

                entity.Property(e => e.Observaciones).HasMaxLength(4000);

                entity.Property(e => e.Usuario).HasMaxLength(40);

                entity.Property(e => e.UsuarioRed).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy524>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.CuentaHfm });

                entity.ToTable("WSMY524");

                entity.HasIndex(e => new { e.Compañia, e.Año, e.Mes, e.Forecast, e.CuentaHfm })
                    .HasName("IX_WSMY524");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NombreCuenta)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.HasOne(d => d.ForecastNavigation)
                    .WithMany(p => p.Wsmy524)
                    .HasForeignKey(d => d.Forecast)
                    .HasConstraintName("FK_WSMY524_WSMY527");

                entity.HasOne(d => d.MesNavigation)
                    .WithMany(p => p.Wsmy524)
                    .HasForeignKey(d => d.Mes)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY524_WSMY535");

                entity.HasOne(d => d.TipoLibroNavigation)
                    .WithMany(p => p.Wsmy524)
                    .HasForeignKey(d => d.TipoLibro)
                    .HasConstraintName("FK_WSMY524_WSMY528");
            });

            modelBuilder.Entity<Wsmy525>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.CuentaHfm, e.CuentaCorta });

                entity.ToTable("WSMY525");

                entity.HasIndex(e => new { e.Compañia, e.Año, e.Mes, e.Forecast, e.CuentaHfm })
                    .HasName("IX_WSMY525");

                entity.HasIndex(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.CuentaHfm })
                    .HasName("IX_WSMY525_1");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CuentaCorta)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.CuentaContable)
                    .HasMaxLength(28)
                    .IsFixedLength();

                entity.Property(e => e.CuentaObjeto)
                    .HasMaxLength(6)
                    .IsFixedLength();

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NombreCuenta)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Subcuenta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.HasOne(d => d.ForecastNavigation)
                    .WithMany(p => p.Wsmy525)
                    .HasForeignKey(d => d.Forecast)
                    .HasConstraintName("FK_WSMY525_WSMY524");

                entity.HasOne(d => d.MesNavigation)
                    .WithMany(p => p.Wsmy525)
                    .HasForeignKey(d => d.Mes)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY525_WSMY535");

                entity.HasOne(d => d.TipoLibroNavigation)
                    .WithMany(p => p.Wsmy525)
                    .HasForeignKey(d => d.TipoLibro)
                    .HasConstraintName("FK_WSMY525_WSMY528");
            });

            modelBuilder.Entity<Wsmy526>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.Transaccion, e.Documento, e.Fecha, e.Linea });

                entity.ToTable("WSMY526");

                entity.HasIndex(e => e.CuentaCorta)
                    .HasName("IX_WSMY526_5");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY526_4");

                entity.HasIndex(e => new { e.Compañia, e.Año, e.Mes, e.Forecast, e.CuentaContable })
                    .HasName("IX_WSMY526");

                entity.HasIndex(e => new { e.Compañia, e.Año, e.Mes, e.Forecast, e.CuentaCorta, e.Responsable })
                    .HasName("IX_WSMY526_1");

                entity.HasIndex(e => new { e.Compañia, e.Año, e.Mes, e.Forecast, e.CuentaHfm, e.Responsable })
                    .HasName("IX_WSMY526_2");

                entity.HasIndex(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.CuentaCorta })
                    .HasName("IX_WSMY526_3");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.An8).HasColumnName("AN8");

                entity.Property(e => e.CentroCosto)
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.CuentaContable)
                    .HasMaxLength(29)
                    .IsFixedLength();

                entity.Property(e => e.CuentaCorta)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CuentaObjeto)
                    .HasMaxLength(6)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion1)
                    .HasMaxLength(1000)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion2)
                    .HasMaxLength(1000)
                    .IsFixedLength();

                entity.Property(e => e.EquipoRed).HasMaxLength(50);

                entity.Property(e => e.FechaPrometida).HasColumnType("smalldatetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreResponsable).HasMaxLength(100);

                entity.Property(e => e.NombreRol).HasMaxLength(50);

                entity.Property(e => e.Origen)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('GL')");

                entity.Property(e => e.Posteado)
                    .HasMaxLength(1)
                    .IsFixedLength()
                    .HasDefaultValueSql("('P')");

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.Property(e => e.Subcuenta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioRed).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy527>(entity =>
            {
                entity.HasKey(e => e.Forecast);

                entity.ToTable("WSMY527");

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.EsReal)
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy528>(entity =>
            {
                entity.HasKey(e => e.TipoLibro);

                entity.ToTable("WSMY528");

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Forecast).HasMaxLength(1);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy529>(entity =>
            {
                entity.HasKey(e => e.CuentaCorta);

                entity.ToTable("WSMY529");

                entity.Property(e => e.CuentaCorta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.CategoriaDesc26)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.CategoriaDesc27)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.CategoriaId26)
                    .HasColumnName("CategoriaID26")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CategoriaId27)
                    .HasColumnName("CategoriaID27")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.CuentaContable)
                    .HasMaxLength(28)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.CuentaObjeto)
                    .HasMaxLength(6)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionCuenta)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionHfm)
                    .HasColumnName("DescripcionHFM")
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.FechaResponsable).HasColumnType("datetime");

                entity.Property(e => e.GerenciaDesc)
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.GerenciaId)
                    .HasColumnName("GerenciaID")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.Property(e => e.Subcuenta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.UnidadNegocio)
                    .HasMaxLength(12)
                    .IsFixedLength();

                entity.Property(e => e.UnidadNegocioDesc)
                    .HasMaxLength(40)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wsmy530>(entity =>
            {
                entity.HasKey(e => e.Estatus);

                entity.ToTable("WSMY530");

                entity.Property(e => e.Estatus).HasMaxLength(2);

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.PendienteAprobacion).HasMaxLength(1);
            });

            modelBuilder.Entity<Wsmy531>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.Responsable, e.Estatus, e.FechaRegistro });

                entity.ToTable("WSMY531");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY531");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.Property(e => e.Estatus).HasMaxLength(2);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Cerrada)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones).HasMaxLength(4000);

                entity.Property(e => e.ResponsableEstacion).HasMaxLength(40);

                entity.HasOne(d => d.EstatusNavigation)
                    .WithMany(p => p.Wsmy531)
                    .HasForeignKey(d => d.Estatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY531_WSMY530");

                entity.HasOne(d => d.ForecastNavigation)
                    .WithMany(p => p.Wsmy531)
                    .HasForeignKey(d => d.Forecast)
                    .HasConstraintName("FK_WSMY531_WSMY527");

                entity.HasOne(d => d.MesNavigation)
                    .WithMany(p => p.Wsmy531)
                    .HasForeignKey(d => d.Mes)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY531_WSMY535");

                entity.HasOne(d => d.TipoLibroNavigation)
                    .WithMany(p => p.Wsmy531)
                    .HasForeignKey(d => d.TipoLibro)
                    .HasConstraintName("FK_WSMY531_WSMY528");
            });

            modelBuilder.Entity<Wsmy532>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast });

                entity.ToTable("WSMY532");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.Act)
                    .HasColumnName("act")
                    .HasMaxLength(1);

                entity.Property(e => e.EquipoRed).HasMaxLength(50);

                entity.Property(e => e.FechaCreacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreRol).HasMaxLength(50);

                entity.Property(e => e.Nombreusuario).HasMaxLength(100);

                entity.Property(e => e.Usuario).HasMaxLength(40);

                entity.Property(e => e.UsuarioRed).HasMaxLength(50);

                entity.HasOne(d => d.ForecastNavigation)
                    .WithMany(p => p.Wsmy532)
                    .HasForeignKey(d => d.Forecast)
                    .HasConstraintName("FK_WSMY532_WSMY527");

                entity.HasOne(d => d.MesNavigation)
                    .WithMany(p => p.Wsmy532)
                    .HasForeignKey(d => d.Mes)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY532_WSMY535");

                entity.HasOne(d => d.TipoLibroNavigation)
                    .WithMany(p => p.Wsmy532)
                    .HasForeignKey(d => d.TipoLibro)
                    .HasConstraintName("FK_WSMY532_WSMY528");
            });

            modelBuilder.Entity<Wsmy533>(entity =>
            {
                entity.HasKey(e => new { e.CuentaCorta, e.Responsable, e.FechaResponsable });

                entity.ToTable("WSMY533");

                entity.Property(e => e.CuentaCorta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.Property(e => e.FechaResponsable).HasColumnType("datetime");

                entity.Property(e => e.CuentaContable)
                    .HasMaxLength(28)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionCuenta)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionHfm)
                    .HasColumnName("DescripcionHFM")
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy534>(entity =>
            {
                entity.HasKey(e => e.Ruta)
                    .HasName("PK_WSMY534_1");

                entity.ToTable("WSMY534");

                entity.Property(e => e.Ruta).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy535>(entity =>
            {
                entity.HasKey(e => e.Mes);

                entity.ToTable("WSMY535");

                entity.Property(e => e.Mes).ValueGeneratedNever();

                entity.Property(e => e.Abreviatura)
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.Descripcion).HasMaxLength(15);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy536>(entity =>
            {
                entity.HasKey(e => new { e.Ruta, e.Aprobacion })
                    .HasName("PK_WSMY536_1");

                entity.ToTable("WSMY536");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Principal).HasMaxLength(1);

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.HasOne(d => d.RutaNavigation)
                    .WithMany(p => p.Wsmy536)
                    .HasForeignKey(d => d.Ruta)
                    .HasConstraintName("FK_WSMY536_WSMY534");
            });

            modelBuilder.Entity<Wsmy537>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.CuentaCorta });

                entity.ToTable("WSMY537");

                entity.Property(e => e.CuentaCorta)
                    .HasMaxLength(8)
                    .IsFixedLength();

                entity.Property(e => e.Porcentaje).HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<Wsmy538>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes });

                entity.ToTable("WSMY538");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdPar).ValueGeneratedOnAdd();

                entity.Property(e => e.PorPar).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Usuario).HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy539>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor, e.IdProductoCuota });

                entity.ToTable("WSMY539");

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdGerente)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdPronostico)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdSupervisor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdRutaNavigation)
                    .WithMany(p => p.Wsmy539)
                    .HasForeignKey(d => d.IdRuta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY539_WSMY540");
            });

            modelBuilder.Entity<Wsmy540>(entity =>
            {
                entity.HasKey(e => e.IdRuta)
                    .HasName("PK_WSMY540_1");

                entity.ToTable("WSMY540");

                entity.Property(e => e.IdRuta).ValueGeneratedNever();

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.NobreRuta)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<Wsmy541>(entity =>
            {
                entity.HasKey(e => e.IdEstacion)
                    .HasName("PK_WSMY541_1");

                entity.ToTable("WSMY541");

                entity.Property(e => e.IdEstacion).ValueGeneratedNever();

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.NombreEstacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy542>(entity =>
            {
                entity.HasKey(e => new { e.IdRuta, e.IdEstacion, e.IdRol });

                entity.ToTable("WSMY542");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagPrimera)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy543>(entity =>
            {
                entity.HasKey(e => new { e.IdRol, e.IdEstacion })
                    .HasName("PK_WSMY544");

                entity.ToTable("WSMY543");

                entity.Property(e => e.BtnEliminar)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BtnEstacionAnterior)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BtnEstacionSiguiente)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BtnGuardar)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BtnImprimir)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy544>(entity =>
            {
                entity.HasKey(e => e.IdEstatus)
                    .HasName("PK_WSMY544_1");

                entity.ToTable("WSMY544");

                entity.Property(e => e.IdEstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlagPrimero)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreEstatus)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy545>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor, e.IdEstacion, e.IdEstatus, e.Fecha });

                entity.ToTable("WSMY545");

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdEstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.HasOne(d => d.UsuarioNavigation)
                    .WithMany(p => p.Wsmy545)
                    .HasForeignKey(d => d.Usuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY545_WITY021");
            });

            modelBuilder.Entity<Wsmy546>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor, e.IdRuta, e.IdEstacion })
                    .HasName("PK_WSMY546_1");

                entity.ToTable("WSMY546");

                entity.Property(e => e.IdVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdEstacionNavigation)
                    .WithMany(p => p.Wsmy546)
                    .HasForeignKey(d => d.IdEstacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY546_WSMY541");

                entity.HasOne(d => d.IdEstatusNavigation)
                    .WithMany(p => p.Wsmy546)
                    .HasForeignKey(d => d.IdEstatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY546_WSMY544");

                entity.HasOne(d => d.IdRutaNavigation)
                    .WithMany(p => p.Wsmy546)
                    .HasForeignKey(d => d.IdRuta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY546_WSMY540");
            });

            modelBuilder.Entity<Wsmy547>(entity =>
            {
                entity.HasKey(e => e.IdActividad);

                entity.ToTable("WSMY547");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy547_Cotizacion");

                entity.HasIndex(e => e.IdActividad)
                    .HasName("IX_WSMY547");

                entity.Property(e => e.IdActividad).ValueGeneratedNever();

                entity.Property(e => e.Contacto)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(13)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaActividad)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRevision).HasColumnType("datetime");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Prospecto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy548>(entity =>
            {
                entity.HasKey(e => new { e.IdActividad, e.IdProductoCuota });

                entity.ToTable("WSMY548");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdUsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy549>(entity =>
            {
                entity.HasKey(e => e.IdTarea);

                entity.ToTable("WSMY549");

                entity.Property(e => e.IdTarea).HasMaxLength(50);

                entity.Property(e => e.Eliminada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagAutomatica)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagCotizador)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreTarea).IsRequired();
            });

            modelBuilder.Entity<Wsmy550>(entity =>
            {
                entity.HasKey(e => e.IdSubTarea);

                entity.ToTable("WSMY550");

                entity.HasIndex(e => new { e.Eliminada, e.IdTarea })
                    .HasName("IX_WSMY550");

                entity.Property(e => e.IdSubTarea).HasMaxLength(50);

                entity.Property(e => e.Eliminada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdTarea)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NombreSubTarea).IsRequired();
            });

            modelBuilder.Entity<Wsmy551>(entity =>
            {
                entity.HasKey(e => new { e.IdSubTarea, e.IdActividad });

                entity.ToTable("WSMY551");

                entity.Property(e => e.IdSubTarea).HasMaxLength(50);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<Wsmy552>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.Vendedor, e.AñoEmbarque, e.MesEmbarque });

                entity.ToTable("wsmy552");

                entity.Property(e => e.Vendedor).HasMaxLength(4);

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy553>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.TeamLeader, e.AñoEmbarque, e.MesEmbarque })
                    .HasName("PK_WSMY554");

                entity.ToTable("WSMY553");

                entity.Property(e => e.TeamLeader).HasMaxLength(4);

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy555>(entity =>
            {
                entity.HasKey(e => new { e.Compañia, e.TipoLibro, e.Año, e.Mes, e.Forecast, e.CuentaHfm, e.Responsable, e.Archivo });

                entity.ToTable("WSMY555");

                entity.Property(e => e.Compañia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.TipoLibro)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.CuentaHfm)
                    .HasColumnName("CuentaHFM")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Responsable).HasMaxLength(40);

                entity.Property(e => e.Archivo).HasMaxLength(256);

                entity.Property(e => e.FechaAdjunto).HasColumnType("smalldatetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.RutaArchivo).HasMaxLength(4000);

                entity.Property(e => e.RutaServidor).HasMaxLength(4000);
            });

            modelBuilder.Entity<Wsmy556>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.AñoEmbarque, e.MesEmbarque });

                entity.ToTable("WSMY556");

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy557>(entity =>
            {
                entity.HasKey(e => e.TipoOrden);

                entity.ToTable("WSMY557");

                entity.Property(e => e.TipoOrden).HasMaxLength(2);

                entity.Property(e => e.Abreviado)
                    .HasMaxLength(3)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Internacional)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Nacional)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy558>(entity =>
            {
                entity.HasKey(e => new { e.Lote, e.Usuario });

                entity.ToTable("WSMY558");

                entity.Property(e => e.Lote).HasMaxLength(30);

                entity.Property(e => e.Usuario).HasMaxLength(40);

                entity.Property(e => e.Articulo).HasMaxLength(25);

                entity.Property(e => e.Descripcion).HasMaxLength(60);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.InventarioDesconocido)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InventarioInternacional)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InventarioNacional)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.InventarioTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Medida).HasMaxLength(30);

                entity.Property(e => e.TipoOrden).HasMaxLength(2);

                entity.Property(e => e.UltimaFecha).HasColumnType("datetime");
            });

            modelBuilder.Entity<Wsmy559>(entity =>
            {
                entity.ToTable("WSMY559");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).IsRequired();

                entity.Property(e => e.Dominio).IsRequired();

                entity.Property(e => e.FlagPublico)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Ip)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy560>(entity =>
            {
                entity.ToTable("WSMY560");

                entity.Property(e => e.FechaArchivo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreArchivo).IsRequired();

                entity.Property(e => e.RutaArchivo).IsRequired();

                entity.Property(e => e.RutaServidor).IsRequired();
            });

            modelBuilder.Entity<Wsmy561>(entity =>
            {
                entity.HasKey(e => e.TipoComision);

                entity.ToTable("WSMY561");

                entity.Property(e => e.TipoComision).HasMaxLength(2);

                entity.Property(e => e.ComisionManual)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PermiteCambioVendedor)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy570>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY570");

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_WSMY570_1");

                entity.HasIndex(e => e.Ficha)
                    .HasName("IX_WSMY570");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY570_3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ficha, e.Fecha })
                    .HasName("IX_WSMY570_2");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy571>(entity =>
            {
                entity.HasKey(e => e.Ficha);

                entity.ToTable("WSMY571");

                entity.HasIndex(e => e.Carnet)
                    .HasName("IX_WSMY571")
                    .IsUnique();

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY571_1")
                    .IsUnique();

                entity.Property(e => e.Ficha).ValueGeneratedNever();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy572>(entity =>
            {
                entity.HasKey(e => e.IdPrecio);

                entity.ToTable("WSMY572");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY572_3")
                    .IsUnique();

                entity.HasIndex(e => new { e.FechaDesde, e.FechaHasta })
                    .HasName("IX_WSMY572");

                entity.HasIndex(e => new { e.FechaDesde, e.FechaHasta, e.Inactivo })
                    .HasName("IX_WSMY572_2");

                entity.Property(e => e.IdPrecio).ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasMaxLength(100);

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Inactivo)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(1000)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy573>(entity =>
            {
                entity.HasKey(e => e.Idexcepcion);

                entity.ToTable("WSMY573");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY573")
                    .IsUnique();

                entity.HasIndex(e => new { e.FechaDesde, e.FechaHasta })
                    .HasName("IX_WSMY573_1");

                entity.Property(e => e.Idexcepcion)
                    .HasColumnName("IDExcepcion")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descripcion).HasMaxLength(100);

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Inactivo).HasMaxLength(1);

                entity.Property(e => e.Observaciones).HasMaxLength(1000);

                entity.Property(e => e.PorcentajeAumento).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Todos).HasMaxLength(1);
            });

            modelBuilder.Entity<Wsmy574>(entity =>
            {
                entity.HasKey(e => new { e.Idexcepcion, e.Ficha });

                entity.ToTable("WSMY574");

                entity.Property(e => e.Idexcepcion).HasColumnName("IDExcepcion");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy575>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY575");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY575")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdModulo, e.IdRegistro })
                    .HasName("IX_WSMY575_1");

                entity.Property(e => e.Descripcion).HasMaxLength(250);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Maquina).HasMaxLength(50);

                entity.Property(e => e.Usuario).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy576>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY576");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY576")
                    .IsUnique();

                entity.HasIndex(e => e.Idexcepcion)
                    .HasName("IX_WSMY576_1");

                entity.Property(e => e.Descripcion).HasMaxLength(100);

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Idexcepcion).HasColumnName("IDExcepcion");

                entity.Property(e => e.Inactivo).HasMaxLength(1);

                entity.Property(e => e.Observaciones).HasMaxLength(1000);

                entity.Property(e => e.PorcentajeAumento).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Todos).HasMaxLength(1);
            });

            modelBuilder.Entity<Wsmy577>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY577");

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_WSMY577_1");

                entity.HasIndex(e => e.Ficha)
                    .HasName("IX_WSMY577");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY577_3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ficha, e.Fecha })
                    .HasName("IX_WSMY577_2");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy578>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.AñoEmbarque, e.MesEmbarque });

                entity.ToTable("WSMY578");

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy579>(entity =>
            {
                entity.HasKey(e => e.TipoNegocio);

                entity.ToTable("WSMY579");

                entity.Property(e => e.TipoNegocio).HasMaxLength(3);

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy580>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.AñoEmbarque, e.MesEmbarque });

                entity.ToTable("WSMY580");

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy581>(entity =>
            {
                entity.HasKey(e => e.Partes);

                entity.ToTable("WSMY581");

                entity.Property(e => e.Partes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy582>(entity =>
            {
                entity.HasKey(e => new { e.Producto, e.MedidaMascara })
                    .HasName("PK_WSMY582_1");

                entity.ToTable("WSMY582");

                entity.Property(e => e.Producto).HasMaxLength(20);

                entity.Property(e => e.MedidaMascara).HasMaxLength(6);

                entity.Property(e => e.Frecuencia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MedidaFraccion)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy583>(entity =>
            {
                entity.HasKey(e => new { e.Producto, e.MedidaMascara })
                    .HasName("PK_WSMY583_1");

                entity.ToTable("WSMY583");

                entity.HasIndex(e => new { e.Producto, e.Frecuencia })
                    .HasName("IX_WSMY583");

                entity.Property(e => e.Producto).HasMaxLength(20);

                entity.Property(e => e.MedidaMascara).HasMaxLength(6);

                entity.Property(e => e.Frecuencia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MedidaFraccion)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy584>(entity =>
            {
                entity.HasKey(e => new { e.Producto, e.Parte, e.Papel });

                entity.ToTable("WSMY584");

                entity.Property(e => e.Producto).HasMaxLength(12);

                entity.Property(e => e.Papel).HasMaxLength(8);

                entity.Property(e => e.Descripcion).HasMaxLength(50);

                entity.Property(e => e.Frecuencia).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy585>(entity =>
            {
                entity.HasKey(e => e.IdTipoDocumento);

                entity.ToTable("WSMY585");

                entity.Property(e => e.IdTipoDocumento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AfectaExpediente).HasMaxLength(1);

                entity.Property(e => e.FechaCreacion).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaModificacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IdAplicacion)
                    .HasColumnName("IdAPlicacion")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NombreDocumento).HasMaxLength(500);

                entity.Property(e => e.Obligatorio).HasMaxLength(1);

                entity.Property(e => e.UsuarioCreacion).HasMaxLength(50);

                entity.Property(e => e.UsuarioModifico).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy586>(entity =>
            {
                entity.HasKey(e => new { e.IdTipoDocumento, e.ClienteLegacy, e.ClienteJde });

                entity.ToTable("WSMY586");

                entity.Property(e => e.IdTipoDocumento).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ClienteLegacy)
                    .HasColumnName("Cliente_Legacy")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ClienteJde)
                    .HasColumnName("Cliente_Jde")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ArchivoFisico).HasColumnType("image");

                entity.Property(e => e.FechaCreacion).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaModificacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombreArchivo).HasMaxLength(1000);

                entity.Property(e => e.UsuarioCreacion).HasMaxLength(50);

                entity.Property(e => e.UsuarioModifico)
                    .HasMaxLength(50)
                    .HasComment("Documentacion de Clientes");
            });

            modelBuilder.Entity<Wsmy587>(entity =>
            {
                entity.HasKey(e => new { e.ClienteLegacy, e.ClienteJde, e.Fecha });

                entity.ToTable("WSMY587");

                entity.Property(e => e.ClienteLegacy)
                    .HasColumnName("Cliente_Legacy")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ClienteJde)
                    .HasColumnName("Cliente_Jde")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fecha).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ActivoCirculante).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CapitalTrabajo).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.EfectivoCajaBanco).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Excepcion).HasMaxLength(1);

                entity.Property(e => e.FechaCreacion).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaModificacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Inventarios).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.LiquidezInmediata).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ObsevacionesExcepcion).HasMaxLength(500);

                entity.Property(e => e.PasivoCirculante).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PoseeLocalComercial).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PruebaDeAcido).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioCreacion).HasMaxLength(50);

                entity.Property(e => e.UsuarioModifico)
                    .HasMaxLength(50)
                    .HasComment("Documentacion de Clientes");
            });

            modelBuilder.Entity<Wsmy588>(entity =>
            {
                entity.HasKey(e => e.CategoriaRiesgo);

                entity.ToTable("WSMY588");

                entity.Property(e => e.CategoriaRiesgo).HasMaxLength(50);

                entity.Property(e => e.DescripcionCategoriaRiesgo).HasMaxLength(500);

                entity.Property(e => e.FechaCreacion).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaModificacion).HasColumnType("smalldatetime");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioCreacion).HasMaxLength(50);

                entity.Property(e => e.UsuarioModifico)
                    .HasMaxLength(50)
                    .HasComment("Documentacion de Clientes");

                entity.Property(e => e.ValorCategoriaRiesgo).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy593>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.FechaVigencia });

                entity.ToTable("WSMY593");

                entity.Property(e => e.IdProducto).HasMaxLength(12);

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagBajoMargen)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.PorMcVentasSc).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy594>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.CodProducto });

                entity.ToTable("WSMY594");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy594_Cotizacion");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.CodProducto)
                    .HasColumnName("Cod_Producto")
                    .HasMaxLength(50);

                entity.Property(e => e.Aprobado).HasMaxLength(2);

                entity.Property(e => e.FechaAprueba).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagEnviado)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagPendiente)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("(N'X')");

                entity.Property(e => e.PorMcVentasSc).HasColumnType("numeric(6, 2)");

                entity.Property(e => e.PrecioMinimo)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UsuarioAprueba).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy595>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY595");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY595");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy595orden");

                entity.HasIndex(e => new { e.Orden, e.CodProducto })
                    .HasName("IX_WSMY595_2");

                entity.HasIndex(e => new { e.Orden, e.JobId })
                    .HasName("IX_WSMY595_1");

                entity.Property(e => e.CodProducto)
                    .IsRequired()
                    .HasColumnName("Cod_Producto")
                    .HasMaxLength(12);

                entity.Property(e => e.EquipoInsert)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaInsert).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.JobId).HasColumnName("Job_Id");

                entity.Property(e => e.Observaciones).IsRequired();

                entity.Property(e => e.UsuarioInsert)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy596>(entity =>
            {
                entity.HasKey(e => e.CodigoJde);

                entity.ToTable("WSMY596");

                entity.HasIndex(e => e.CodigoInterno)
                    .HasName("IX_WSMY596_1")
                    .IsUnique();

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY596")
                    .IsUnique();

                entity.Property(e => e.CodigoJde)
                    .HasColumnName("CodigoJDE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodigoInterno)
                    .IsRequired()
                    .HasMaxLength(6);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.PesoKilogramos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy597>(entity =>
            {
                entity.HasKey(e => e.IdConversionMedida);

                entity.ToTable("WSMY597");

                entity.Property(e => e.IdConversionMedida).ValueGeneratedNever();

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.FlagCajas)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.MedidaCentimetros).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.MedidaPulgadas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy598>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY598");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY598")
                    .IsUnique();

                entity.HasIndex(e => new { e.FechaDesde, e.FechaHasta })
                    .HasName("IX_WSMY598_1");

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaDesde).HasColumnType("datetime");

                entity.Property(e => e.FechaHasta).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.PorcentajeMaximoPeso).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMaximoVolumen).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMinimoPeso).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeMinimoVolumen).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy599>(entity =>
            {
                entity.HasKey(e => e.IdEstatus);

                entity.ToTable("WSMY599");

                entity.HasIndex(e => e.Abreviado)
                    .HasName("IX_WSMY599_1")
                    .IsUnique();

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY599")
                    .IsUnique();

                entity.Property(e => e.IdEstatus).ValueGeneratedNever();

                entity.Property(e => e.Abreviado)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.FlagAprobado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEnviado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagPendiente)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagRechazado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy600>(entity =>
            {
                entity.HasKey(e => e.IdPrelista)
                    .HasName("PK_WSMY600_1");

                entity.ToTable("WSMY600");

                entity.HasIndex(e => e.FechaUpdate)
                    .HasName("IX_WSMY600_1");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY600")
                    .IsUnique();

                entity.HasIndex(e => e.NroLista)
                    .HasName("IX_WSMY600_2");

                entity.Property(e => e.IdPrelista).ValueGeneratedNever();

                entity.Property(e => e.CedulaTransportista)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.NroLista).HasColumnName("Nro_Lista");

                entity.Property(e => e.PlacasTransporte)
                    .IsRequired()
                    .HasMaxLength(8)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcentajePeso).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeVolumen).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy601>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY601");

                entity.HasIndex(e => e.IdPrelista)
                    .HasName("IX_WSMY601");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY601_1")
                    .IsUnique();

                entity.Property(e => e.Bultos).HasColumnName("BULTOS");

                entity.Property(e => e.BultosDesp).HasColumnName("BULTOS_DESP");

                entity.Property(e => e.BultosEdit).HasColumnName("BULTOS_EDIT");

                entity.Property(e => e.BultosTran).HasColumnName("BULTOS_TRAN");

                entity.Property(e => e.Cabecera)
                    .IsRequired()
                    .HasColumnName("CABECERA")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CapitalEstado)
                    .IsRequired()
                    .HasColumnName("CAPITAL_ESTADO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CapitalMcpo)
                    .IsRequired()
                    .HasColumnName("CAPITAL_MCPO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CartaFaltante)
                    .IsRequired()
                    .HasColumnName("CARTA_FALTANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ChoferCedula)
                    .IsRequired()
                    .HasColumnName("CHOFER_CEDULA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ChoferNombre)
                    .IsRequired()
                    .HasColumnName("CHOFER_NOMBRE")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ChoferTlf)
                    .IsRequired()
                    .HasColumnName("CHOFER_TLF")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodCliente).HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodDev)
                    .IsRequired()
                    .HasColumnName("COD_DEV")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodEstado)
                    .IsRequired()
                    .HasColumnName("COD_ESTADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodGerente)
                    .IsRequired()
                    .HasColumnName("COD_GERENTE")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodMunicipio)
                    .IsRequired()
                    .HasColumnName("COD_MUNICIPIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodProducto)
                    .IsRequired()
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodSupervisor)
                    .IsRequired()
                    .HasColumnName("COD_SUPERVISOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Codmedio)
                    .IsRequired()
                    .HasColumnName("CODMEDIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CondPago)
                    .IsRequired()
                    .HasColumnName("COND_PAGO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Copy).HasColumnName("COPY");

                entity.Property(e => e.Copyasc)
                    .IsRequired()
                    .HasColumnName("COPYASC")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CostoBulto)
                    .HasColumnName("COSTO_BULTO")
                    .HasColumnType("decimal(12, 2)");

                entity.Property(e => e.CostoFactura)
                    .HasColumnName("COSTO_FACTURA")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CostoFlete)
                    .HasColumnName("COSTO_FLETE")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.CostoImp)
                    .HasColumnName("COSTO_IMP")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.DescMunicipio)
                    .IsRequired()
                    .HasColumnName("DESC_MUNICIPIO")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DescZona)
                    .IsRequired()
                    .HasColumnName("DESC_ZONA")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Desmedio)
                    .IsRequired()
                    .HasColumnName("DESMEDIO")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DespJueves)
                    .IsRequired()
                    .HasColumnName("DESP_JUEVES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DespLunes)
                    .IsRequired()
                    .HasColumnName("DESP_LUNES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DespMartes)
                    .IsRequired()
                    .HasColumnName("DESP_MARTES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DespMiercoles)
                    .IsRequired()
                    .HasColumnName("DESP_MIERCOLES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DespViernes)
                    .IsRequired()
                    .HasColumnName("DESP_VIERNES")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Despachador)
                    .IsRequired()
                    .HasColumnName("DESPACHADOR")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEnt1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_ENT1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEnt2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_ENT2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionEnt3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_ENT3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact1)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT1")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact2)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT2")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DireccionFact3)
                    .IsRequired()
                    .HasColumnName("DIRECCION_FACT3")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Estacion)
                    .IsRequired()
                    .HasColumnName("ESTACION")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Factura).HasColumnName("FACTURA");

                entity.Property(e => e.FechaCliente)
                    .HasColumnName("FECHA_CLIENTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaDespacho)
                    .HasColumnName("FECHA_DESPACHO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaDevuelta)
                    .HasColumnName("FECHA_DEVUELTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaDocumento)
                    .HasColumnName("FECHA_DOCUMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaPrometida)
                    .HasColumnName("FECHA_PROMETIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasColumnName("FLAG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HoraDespacho)
                    .IsRequired()
                    .HasColumnName("HORA_DESPACHO")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdDirEntregar).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.ImpStock)
                    .IsRequired()
                    .HasColumnName("IMP_STOCK")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.InstrucDesp)
                    .HasColumnName("INSTRUC_DESP")
                    .HasColumnType("text");

                entity.Property(e => e.KilosBulto)
                    .HasColumnName("KILOS_BULTO")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.NombreEnt)
                    .IsRequired()
                    .HasColumnName("NOMBRE_ENT")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreEstado)
                    .IsRequired()
                    .HasColumnName("NOMBRE_ESTADO")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreFact)
                    .IsRequired()
                    .HasColumnName("NOMBRE_FACT")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreVendedor)
                    .IsRequired()
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NroLista).HasColumnName("NRO_LISTA");

                entity.Property(e => e.Nroguia).HasColumnName("NROGUIA");

                entity.Property(e => e.NumPreguia)
                    .HasColumnName("NUM_PREGUIA")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ObsDevolucion)
                    .IsRequired()
                    .HasColumnName("OBS_DEVOLUCION")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion1)
                    .IsRequired()
                    .HasColumnName("OBSERVACION1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion2)
                    .IsRequired()
                    .HasColumnName("OBSERVACION2")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Observacion3)
                    .IsRequired()
                    .HasColumnName("OBSERVACION3")
                    .HasMaxLength(79)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Oficina)
                    .IsRequired()
                    .HasColumnName("OFICINA")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PosicionRuta).HasColumnName("POSICION_RUTA");

                entity.Property(e => e.RcostoBulto)
                    .HasColumnName("RCOSTO_BULTO")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoFactura)
                    .HasColumnName("RCOSTO_FACTURA")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoFlete)
                    .HasColumnName("RCOSTO_FLETE")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoImp)
                    .HasColumnName("RCOSTO_IMP")
                    .HasColumnType("decimal(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Remision).HasColumnName("REMISION");

                entity.Property(e => e.Repartos).HasColumnName("REPARTOS");

                entity.Property(e => e.RifEmb)
                    .IsRequired()
                    .HasColumnName("RIF_EMB")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RifFact)
                    .IsRequired()
                    .HasColumnName("RIF_FACT")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("STATUS")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoDocumento)
                    .IsRequired()
                    .HasColumnName("TIPO_DOCUMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoEnt)
                    .IsRequired()
                    .HasColumnName("TIPO_ENT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoProducto).HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Tiporep)
                    .IsRequired()
                    .HasColumnName("TIPOREP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.VecesDevuelta).HasColumnName("VECES_DEVUELTA");

                entity.Property(e => e.VehicDesc)
                    .IsRequired()
                    .HasColumnName("VEHIC_DESC")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.VehicMod)
                    .IsRequired()
                    .HasColumnName("VEHIC_MOD")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.VehicPlaca)
                    .IsRequired()
                    .HasColumnName("VEHIC_PLACA")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.VehicPropid)
                    .IsRequired()
                    .HasColumnName("VEHIC_PROPID")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ZonaDespacho).HasColumnName("ZONA_DESPACHO");
            });

            modelBuilder.Entity<Wsmy602>(entity =>
            {
                entity.HasKey(e => e.IdDetalleAprobacion);

                entity.ToTable("WSMY602");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY602_2")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrelista, e.IdEstatus })
                    .HasName("IX_WSMY602_3");

                entity.HasIndex(e => new { e.IdPrelista, e.IdUsuario })
                    .HasName("IX_WSMY602_4");

                entity.Property(e => e.IdDetalleAprobacion).ValueGeneratedNever();

                entity.Property(e => e.FechaEntrada)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy603>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY603");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY603")
                    .IsUnique();

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy603orden");

                entity.HasIndex(e => new { e.Orden, e.Volumen })
                    .HasName("IX_WSMY603_1");

                entity.Property(e => e.AltoEmpaque).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.AnchoEmpaque).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.CodigoCaja)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.LargoEmpaque).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PesoCaja).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Volumen).HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<Wsmy604>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY604");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY604")
                    .IsUnique();

                entity.HasIndex(e => new { e.Orden, e.CodigoProducto, e.Copy })
                    .HasName("IX_WSMY604_1");

                entity.Property(e => e.BolivaresMc).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ClienteFacturar)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.CodigoCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.DescripcionProducto)
                    .IsRequired()
                    .HasMaxLength(65);

                entity.Property(e => e.DescripcionZona)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.DireccionEntregar)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.IdDireccionEntregar).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.PesoKilos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RifFacturar)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Volumen).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy605>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY605");

                entity.HasIndex(e => e.IdPrelista)
                    .HasName("IX_WSMY605_1");

                entity.HasIndex(e => e.IdRegistro)
                    .HasName("IX_WSMY605")
                    .IsUnique();

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy605orden");

                entity.HasIndex(e => new { e.Orden, e.CodigoProducto, e.Copy, e.Job })
                    .HasName("IX_WSMY605_2");

                entity.Property(e => e.BolivaresMc).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ClienteFacturar)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.CodigoCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.DescripcionProducto)
                    .IsRequired()
                    .HasMaxLength(65);

                entity.Property(e => e.DescripcionZona)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.DireccionEntregar)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.EquipoDelete)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaDelete).HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.FlagAgregada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEliminada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEnviadoSap)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagFacturada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdDireccionEntregar).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PesoKilos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbolivaresMc)
                    .HasColumnName("RBolivaresMc")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RifFacturar)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RtotalVenta)
                    .HasColumnName("RTotalVenta")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.UsuarioDelete)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Volumen).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy605refacturacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY605Refacturacion");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy605Refacturacionorden");

                entity.Property(e => e.BolivaresMc).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ClienteFacturar)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.CodigoCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.DescripcionProducto)
                    .IsRequired()
                    .HasMaxLength(65);

                entity.Property(e => e.DescripcionZona)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.DireccionEntregar)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.EquipoDelete)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquipoUpdate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaDelete).HasColumnType("datetime");

                entity.Property(e => e.FechaEntrega).HasColumnType("datetime");

                entity.Property(e => e.FechaUpdate).HasColumnType("datetime");

                entity.Property(e => e.FlagAgregada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagEliminada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagFacturada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdDireccionEntregar).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PesoKilos).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RbolivaresMc)
                    .HasColumnName("RBolivaresMc")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.RifFacturar)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RtotalVenta)
                    .HasColumnName("RTotalVenta")
                    .HasColumnType("decimal(16, 2)");

                entity.Property(e => e.TotalVenta).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.UsuarioDelete)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsuarioUpdate)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Volumen).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Wsmy606>(entity =>
            {
                entity.HasKey(e => e.IdRegistro);

                entity.ToTable("WSMY606");

                entity.Property(e => e.Factura).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Wsmy610>(entity =>
            {
                entity.HasKey(e => e.IdMedio)
                    .HasName("PK_WSMY595");

                entity.ToTable("WSMY610");

                entity.Property(e => e.IdMedio).ValueGeneratedNever();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagNoEliminar)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NombreMedio)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<Wsmy611>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.IdRol, e.IdEstatus });

                entity.ToTable("WSMY611");

                entity.HasIndex(e => e.IdEstatus)
                    .HasName("IX_WSMY611");

                entity.Property(e => e.IdEstatus).HasMaxLength(4);

                entity.Property(e => e.IdEstatusAprueba).HasMaxLength(4);

                entity.Property(e => e.IdEstatusRechazo).HasMaxLength(4);
            });

            modelBuilder.Entity<Wsmy612>(entity =>
            {
                entity.HasKey(e => new { e.IdRol, e.NombreBoton });

                entity.ToTable("WSMY612");

                entity.Property(e => e.NombreBoton).HasMaxLength(100);
            });

            modelBuilder.Entity<Wsmy613>(entity =>
            {
                entity.ToTable("WSMY613");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("IX_WSMY613");

                entity.HasIndex(e => new { e.Ano, e.Mes })
                    .HasName("IX_WSMY613_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ano).HasDefaultValueSql("(datepart(year,getdate()))");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4);

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.EmailCliente)
                    .HasColumnName("Email_Cliente")
                    .HasMaxLength(60);

                entity.Property(e => e.EmailContacto).HasMaxLength(250);

                entity.Property(e => e.Fecha)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagCerrado)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagConcretado)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlagWebSite).HasMaxLength(2);

                entity.Property(e => e.IdEstatus).HasMaxLength(4);

                entity.Property(e => e.IdSubCategoria).HasDefaultValueSql("((0))");

                entity.Property(e => e.Mes).HasDefaultValueSql("(datepart(month,getdate()))");

                entity.Property(e => e.NombreContacto).HasMaxLength(250);

                entity.Property(e => e.Observaciones).HasMaxLength(250);

                entity.Property(e => e.Prospecto).HasMaxLength(1);

                entity.Property(e => e.PuntoReferencia)
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("Razon_Social")
                    .HasMaxLength(80);

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.TelefonoContacto).HasMaxLength(250);

                entity.Property(e => e.Usuario).HasMaxLength(50);

                entity.Property(e => e.UsuarioActualiza).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy613log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY613Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy613log_Cotizacion");

                entity.Property(e => e.CodCliente)
                    .HasColumnName("Cod_Cliente")
                    .HasMaxLength(10);

                entity.Property(e => e.CodVendedor)
                    .HasColumnName("Cod_Vendedor")
                    .HasMaxLength(4);

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.EmailCliente)
                    .HasColumnName("Email_Cliente")
                    .HasMaxLength(60);

                entity.Property(e => e.EmailContacto).HasMaxLength(250);

                entity.Property(e => e.Fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaActualiza).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.FechaModifico).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("smalldatetime");

                entity.Property(e => e.FlagCerrado).HasMaxLength(1);

                entity.Property(e => e.FlagConcretado).HasMaxLength(1);

                entity.Property(e => e.FlagWebSite).HasMaxLength(2);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdEstatus).HasMaxLength(4);

                entity.Property(e => e.NombreContacto).HasMaxLength(250);

                entity.Property(e => e.Observaciones).HasMaxLength(250);

                entity.Property(e => e.Prospecto).HasMaxLength(1);

                entity.Property(e => e.PuntoReferencia)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.RazonSocial)
                    .HasColumnName("Razon_Social")
                    .HasMaxLength(80);

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.TelefonoContacto).HasMaxLength(250);

                entity.Property(e => e.Usuario).HasMaxLength(50);

                entity.Property(e => e.UsuarioActualiza).HasMaxLength(50);

                entity.Property(e => e.UsuarioElimino).HasMaxLength(50);

                entity.Property(e => e.UsuarioModifico).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy614>(entity =>
            {
                entity.HasKey(e => new { e.NoPrensa, e.CodProducto });

                entity.ToTable("WSMY614");

                entity.Property(e => e.NoPrensa)
                    .HasColumnName("NO_PRENSA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CodProducto)
                    .HasColumnName("COD_PRODUCTO")
                    .HasMaxLength(12);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy616>(entity =>
            {
                entity.HasKey(e => e.IdDireccion);

                entity.ToTable("WSMY616");

                entity.Property(e => e.IdDireccion).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CiudadLocalidad).HasMaxLength(250);

                entity.Property(e => e.Cliente).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodEstado).HasMaxLength(2);

                entity.Property(e => e.CodMunicipio).HasMaxLength(2);

                entity.Property(e => e.Contacto).HasMaxLength(250);

                entity.Property(e => e.DescripcionDireccion).HasMaxLength(250);

                entity.Property(e => e.Direccion).HasMaxLength(250);

                entity.Property(e => e.Direccion1).HasMaxLength(80);

                entity.Property(e => e.Direccion2).HasMaxLength(80);

                entity.Property(e => e.Direccion3).HasMaxLength(80);

                entity.Property(e => e.Estado).HasMaxLength(250);

                entity.Property(e => e.Id)
                    .HasColumnType("decimal(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy617>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY617");

                entity.Property(e => e.CantTintasDesde).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTintasHasta).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTirasDesde).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTirasHasta).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DescripcionSubCategoria).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MillaresDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MillaresHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TipoPapel).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TituloMillares).HasMaxLength(50);

                entity.Property(e => e.TituloTintas).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy618>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY618");

                entity.Property(e => e.BsMc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantTintasDesde).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTintasHasta).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DescripcionSubCategoria).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MillaresDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MillaresHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcMc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TituloMillares).HasMaxLength(50);

                entity.Property(e => e.TituloTintas).HasMaxLength(50);

                entity.Property(e => e.ValorVenta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy619>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY619");

                entity.HasIndex(e => new { e.Año, e.Mes })
                    .HasName("IX_WSMY619");

                entity.Property(e => e.BsMc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantTintasDesde).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CantTintasHasta).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DescripcionSubCategoria).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MillaresDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MillaresHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Origen).HasMaxLength(50);

                entity.Property(e => e.PorcMc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TituloMillares).HasMaxLength(50);

                entity.Property(e => e.TituloTintas).HasMaxLength(50);

                entity.Property(e => e.ValorVenta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy620>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY620");

                entity.Property(e => e.Compañia)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Responsable)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.TipoLibro)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy621>(entity =>
            {
                entity.HasKey(e => e.IdClausula);

                entity.ToTable("WSMY621");

                entity.Property(e => e.Clausula)
                    .IsRequired()
                    .HasColumnType("ntext");

                entity.Property(e => e.FechaCaduca).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaVigencia).HasColumnType("datetime");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy622>(entity =>
            {
                entity.HasKey(e => new { e.IdClausula, e.IdCliente });

                entity.ToTable("WSMY622");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy623>(entity =>
            {
                entity.HasKey(e => e.IdProducto);

                entity.ToTable("WSMY623");

                entity.Property(e => e.IdProducto).HasMaxLength(12);

                entity.Property(e => e.CantMillarMax).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy624>(entity =>
            {
                entity.HasKey(e => e.IdCausa);

                entity.ToTable("WSMY624");

                entity.Property(e => e.IdCausa).ValueGeneratedNever();

                entity.Property(e => e.FechaAgrega)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FlagInactivo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCausa)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega).HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy625>(entity =>
            {
                entity.HasKey(e => e.IdEstacion);

                entity.ToTable("WSMY625");

                entity.Property(e => e.IdEstacion).ValueGeneratedNever();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.NombreEstacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy626>(entity =>
            {
                entity.HasKey(e => e.IdProductoCuota)
                    .HasName("PK_WSMY626_1");

                entity.ToTable("WSMY626");

                entity.Property(e => e.IdProductoCuota).ValueGeneratedNever();

                entity.Property(e => e.Email).IsRequired();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy627>(entity =>
            {
                entity.HasKey(e => new { e.CodigoProducto, e.FechaCreacion });

                entity.ToTable("WSMY627");

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.NombreEquipo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PrecioMinimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy628>(entity =>
            {
                entity.ToTable("WSMY628");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy628_Cotizacion");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy629>(entity =>
            {
                entity.HasKey(e => e.RecNum);

                entity.ToTable("WSMY629");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy629_Cotizacion");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdVariable)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Wsmy630>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.MedidaBasica, e.Partes, e.CantTintasFrente, e.CantTintasRespaldo, e.TotalTintas });

                entity.ToTable("WSMY630");

                entity.Property(e => e.IdProducto).HasMaxLength(12);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy631>(entity =>
            {
                entity.HasKey(e => new { e.IdCalendarioGeneral, e.IdCalendarioDetalle, e.IdVariable, e.Valor });

                entity.ToTable("WSMY631");

                entity.Property(e => e.IdVariable).HasMaxLength(20);

                entity.Property(e => e.Valor).HasMaxLength(100);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy632>(entity =>
            {
                entity.HasKey(e => e.IdCatVoBo);

                entity.ToTable("WSMY632");

                entity.Property(e => e.IdCatVoBo).ValueGeneratedNever();

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreCategoria)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioMoficia)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy633>(entity =>
            {
                entity.HasKey(e => new { e.IdCatVoBo, e.IdSubCatVoBo })
                    .HasName("PK_WSMY633_1");

                entity.ToTable("WSMY633");

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreSubCategoria).IsRequired();

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioMoficia)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy634>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.IdSubCatVoBo });

                entity.ToTable("WSMY634");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy634orden");

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy635>(entity =>
            {
                entity.HasKey(e => e.IdCatVoBo);

                entity.ToTable("WSMY635");

                entity.Property(e => e.IdCatVoBo).ValueGeneratedNever();

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreCategoria)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioMoficia)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy636>(entity =>
            {
                entity.HasKey(e => new { e.IdCatVoBo, e.IdSubCatVoBo })
                    .HasName("PK_WSMY636_1");

                entity.ToTable("WSMY636");

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagInactivo)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreSubCategoria).IsRequired();

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioMoficia)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy637>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta, e.Orden, e.IdSubCatVoBo });

                entity.ToTable("WSMY637");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy637orden");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.FechaModifica)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy638>(entity =>
            {
                entity.HasKey(e => new { e.Año, e.Mes, e.Cliente, e.AñoEmbarque, e.MesEmbarque });

                entity.ToTable("wsmy638");

                entity.Property(e => e.DiasAcumulados).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DiasDelMes).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Embarques).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoCxC).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SaldoInicialCxC).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy639>(entity =>
            {
                entity.ToTable("WSMY639");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy639_Cotizacion");

                entity.HasIndex(e => e.FechaRegistro)
                    .HasName("IX_WSMY639_2");

                entity.HasIndex(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("IX_WSMY639_1");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Ano).HasDefaultValueSql("(datepart(year,getdate()))");

                entity.Property(e => e.BsListaCpj)
                    .HasColumnName("BsListaCPJ")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.BsListaCpjminimo)
                    .HasColumnName("BsListaCPJMinimo")
                    .HasColumnType("decimal(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(13)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Duracion).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Estado).HasMaxLength(2);

                entity.Property(e => e.FactorSdf).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.FechaPrecio).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FijarPrecioBs).HasDefaultValueSql("((0))");

                entity.Property(e => e.FijarPrecioBsAprobado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagCerrado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagEnviado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagTipoRechazo).HasMaxLength(1);

                entity.Property(e => e.FlagVolumen).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdEstatus)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdFlujo).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdTablaCpj)
                    .HasColumnName("IdTablaCPJ")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.IdUsuarioApp).HasMaxLength(40);

                entity.Property(e => e.Mes).HasDefaultValueSql("(datepart(month,getdate()))");

                entity.Property(e => e.Millares).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Municipio).HasMaxLength(2);

                entity.Property(e => e.NombreForma).HasMaxLength(65);

                entity.Property(e => e.PorMcBruto).HasColumnType("numeric(20, 2)");

                entity.Property(e => e.PorMcFinan).HasColumnType("numeric(20, 2)");

                entity.Property(e => e.PorcComRegulada)
                    .HasColumnType("numeric(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(20, 2)");

                entity.Property(e => e.PorcCpj)
                    .HasColumnName("PorcCPJ")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PorcGananciaCpjmanual)
                    .HasColumnName("PorcGananciaCPJManual")
                    .HasColumnType("decimal(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcLista).HasColumnType("numeric(20, 2)");

                entity.Property(e => e.PorcMcMinimo)
                    .HasColumnType("numeric(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcRespSocial)
                    .HasColumnType("numeric(5, 3)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcTolerancia)
                    .HasColumnType("numeric(16, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Propuesta).HasDefaultValueSql("((0))");

                entity.Property(e => e.RazonSocial)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();

                entity.Property(e => e.RecalcularMargen)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Renglon).HasDefaultValueSql("((0))");

                entity.Property(e => e.Rif).HasMaxLength(12);

                entity.Property(e => e.TotalBsListaCpj)
                    .HasColumnName("TotalBsListaCPJ")
                    .HasColumnType("numeric(20, 4)");

                entity.Property(e => e.TotalBsListaCpjminimo)
                    .HasColumnName("TotalBsListaCPJMinimo")
                    .HasColumnType("decimal(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalUsdListaCpj)
                    .HasColumnName("TotalUsdListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalUsdListaCpjminimo)
                    .HasColumnName("TotalUsdListaCPJMinimo")
                    .HasColumnType("decimal(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVenta)
                    .HasColumnType("numeric(20, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalVentaUsd)
                    .HasColumnType("numeric(20, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UsdListaCpj)
                    .HasColumnName("UsdListaCPJ")
                    .HasColumnType("numeric(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UsdListaCpjminimo)
                    .HasColumnName("UsdListaCPJMinimo")
                    .HasColumnType("decimal(20, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorVenta).HasColumnType("numeric(20, 2)");

                entity.Property(e => e.ValorVentaAprobar)
                    .HasColumnType("numeric(20, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorVentaAprobarUsd)
                    .HasColumnType("numeric(20, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorVentaUsd).HasColumnType("numeric(20, 2)");
            });

            modelBuilder.Entity<Wsmy640>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.IdParte });

                entity.ToTable("WSMY640");

                entity.Property(e => e.Carbon)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CarbonSpot)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdPapel)
                    .IsRequired()
                    .HasMaxLength(8);

                entity.Property(e => e.MedOpuesCarbon).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy641>(entity =>
            {
                entity.HasKey(e => e.IdRuta);

                entity.ToTable("WSMY641");

                entity.Property(e => e.IdRuta).ValueGeneratedNever();

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.NombreRuta)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy642>(entity =>
            {
                entity.HasKey(e => e.IdCategoriaMc);

                entity.ToTable("WSMY642");

                entity.Property(e => e.IdCategoriaMc).ValueGeneratedNever();

                entity.Property(e => e.NombreCategoriaMc)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Wsmy643>(entity =>
            {
                entity.HasKey(e => new { e.MillaresHasta, e.TintasHasta, e.IdCategoria, e.IdCategoriaMc, e.FlagTransfer });

                entity.ToTable("WSMY643");

                entity.HasIndex(e => new { e.MillaresHasta, e.TintasHasta })
                    .HasName("IX_WSMY643");

                entity.Property(e => e.MillaresHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorMcFinan).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy644>(entity =>
            {
                entity.HasKey(e => new { e.IdEstacion, e.IdUsuario });

                entity.ToTable("WSMY644");

                entity.Property(e => e.IdUsuario).HasMaxLength(40);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy645>(entity =>
            {
                entity.HasKey(e => e.IdEstatus);

                entity.ToTable("WSMY645");

                entity.Property(e => e.IdEstatus).HasMaxLength(10);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.FlagAprobado)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagEnviado)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagPendiente)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.FlagRechazado)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.NombreEstatus)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy646>(entity =>
            {
                entity.HasKey(e => new { e.IdRuta, e.IdEstacion });

                entity.ToTable("WSMY646");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy647>(entity =>
            {
                entity.HasKey(e => new { e.IdCalculo, e.IdRuta, e.IdEstacion });

                entity.ToTable("WSMY647");

                entity.HasIndex(e => e.FechaSalida)
                    .HasName("IX_WSMY647");

                entity.Property(e => e.FechaEntrada).HasColumnType("datetime");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy649>(entity =>
            {
                entity.HasKey(e => new { e.IdRuta, e.IdSubCategoria, e.IdOficina });

                entity.ToTable("WSMY649");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy649old>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY649old");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.RecNum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy650>(entity =>
            {
                entity.HasKey(e => e.IdEstacion);

                entity.ToTable("WSMY650");

                entity.Property(e => e.IdEstacion).ValueGeneratedNever();

                entity.Property(e => e.Abreviado)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.NombreEstacion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy651>(entity =>
            {
                entity.ToTable("WSMY651");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY651");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.NombreArchivo).IsRequired();

                entity.Property(e => e.Query).IsRequired();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy652>(entity =>
            {
                entity.HasKey(e => new { e.IdUsuario, e.IdCategoria });

                entity.ToTable("WSMY652");

                entity.Property(e => e.IdUsuario).HasMaxLength(40);

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.PorcentajeMin).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy653>(entity =>
            {
                entity.HasKey(e => e.Cotizacion);

                entity.ToTable("WSMY653");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("DepWsmy653_Cotizacion");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnType("image");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.NombreArchivo).IsRequired();

                entity.Property(e => e.Query).IsRequired();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy654>(entity =>
            {
                entity.HasKey(e => e.RecNum)
                    .HasName("PK_WSMY654_1");

                entity.ToTable("WSMY654");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(16, 2)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy655>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY655");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Observaciones).IsRequired();
            });

            modelBuilder.Entity<Wsmy655log>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY655Log");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Observaciones).IsRequired();
            });

            modelBuilder.Entity<Wsmy656>(entity =>
            {
                entity.HasKey(e => e.IdFlujo);

                entity.ToTable("WSMY656");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY656")
                    .IsUnique();

                entity.Property(e => e.IdFlujo).ValueGeneratedNever();

                entity.Property(e => e.NombreFlujo)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy657>(entity =>
            {
                entity.HasKey(e => new { e.IdFlujo, e.IdRuta });

                entity.ToTable("WSMY657");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY657")
                    .IsUnique();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy658>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY658");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.KilogramosMax).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.ValorVentaMax).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy659>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY659");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.KilogramosMax).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.ValorVentaMax).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy660>(entity =>
            {
                entity.HasKey(e => new { e.Cia, e.Año, e.Mes, e.IdSubCategoria, e.IdCategoria });

                entity.ToTable("WSMY660");

                entity.Property(e => e.Cia)
                    .HasMaxLength(5)
                    .IsFixedLength();

                entity.Property(e => e.DescripcionCategoria).HasMaxLength(50);

                entity.Property(e => e.DescripcionSubCategoria).HasMaxLength(50);

                entity.Property(e => e.EnviarEmail).HasMaxLength(1);

                entity.Property(e => e.EnviarSms).HasMaxLength(1);

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MontoMaximo).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcentaJeAdicional).HasColumnType("numeric(4, 2)");

                entity.Property(e => e.UltimoEmailEnviado).HasMaxLength(1);

                entity.Property(e => e.UltimoSmsEnviado).HasMaxLength(1);
            });

            modelBuilder.Entity<Wsmy661>(entity =>
            {
                entity.HasKey(e => new { e.Cotizacion, e.Renglon, e.Propuesta })
                    .HasName("PK_WSMY661_1");

                entity.ToTable("WSMY661");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy661cotizacion");

                entity.HasIndex(e => e.IdCalculoMc)
                    .HasName("IX_WSMY661_6");

                entity.HasIndex(e => e.IdCombinada)
                    .HasName("IX_WSMY661_2");

                entity.HasIndex(e => e.IdSolicitud)
                    .HasName("IX_WSMY661_5");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_WSMY661_1");

                entity.HasIndex(e => e.RecNum)
                    .HasName("IX_WSMY661_4");

                entity.Property(e => e.Cotizacion).HasMaxLength(13);

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdCalculoMc).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy661Log>(entity =>
            {
                entity.HasKey(e => e.RecNum)
                    .HasName("PK_WSMY662");

                entity.ToTable("WSMY661_Log");

                entity.HasIndex(e => e.Cotizacion)
                    .HasName("dep_wsmy661_Logcotizacion");

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdCalculoMc).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(6);

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy662>(entity =>
            {
                entity.HasKey(e => new { e.CodigoProducto, e.FechaValides })
                    .HasName("PK_WSMY662_1");

                entity.ToTable("WSMY662");

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaValides).HasColumnType("datetime");

                entity.Property(e => e.Aprobada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BsMcBruto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsMcFinanciero).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantXcaja)
                    .HasColumnName("CantXCaja")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ConsecutivoLista)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DescSubcategoria)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaPublicacion).HasColumnType("datetime");

                entity.Property(e => e.Grabacion).HasMaxLength(1);

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Mensaje).HasMaxLength(4000);

                entity.Property(e => e.PendienteAprobacion)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcDescuento)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGenerarLista)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcBruto).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PorcMcFinanciero).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PrecioDescuento)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioMinimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioXcaja)
                    .HasColumnName("PrecioXCaja")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PrecioXcajaDescuento)
                    .HasColumnName("PrecioXCajaDescuento")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioXcajaLista)
                    .HasColumnName("PrecioXCajaLista")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Publicacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RecalcularMargen)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Sdf)
                    .HasColumnName("SDF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioAprobo).HasMaxLength(20);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioPublico).HasMaxLength(20);
            });

            modelBuilder.Entity<Wsmy663>(entity =>
            {
                entity.HasKey(e => new { e.IdCalculo, e.IdRuta, e.IdEstacion });

                entity.ToTable("WSMY663");

                entity.Property(e => e.FechaEntrada).HasColumnType("datetime");

                entity.Property(e => e.FechaSalida).HasColumnType("datetime");

                entity.Property(e => e.IdEstatus)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy664>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY664");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Fecha).HasColumnType("datetime");

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.Observaciones).IsRequired();
            });

            modelBuilder.Entity<Wsmy666>(entity =>
            {
                entity.HasKey(e => new { e.IdSolicitudPrecio, e.CodigoProducto });

                entity.ToTable("WSMY666");

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Aprobada)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.BsMcBruto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsMcFinanciero).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CantXcaja)
                    .HasColumnName("CantXCaja")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Cliente).HasMaxLength(100);

                entity.Property(e => e.DescSubcategoria)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");

                entity.Property(e => e.FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.FechaPublicacion).HasColumnType("datetime");

                entity.Property(e => e.Grabacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdRegistro).ValueGeneratedOnAdd();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Mensaje).HasMaxLength(4000);

                entity.Property(e => e.PendienteAprobacion)
                    .IsRequired()
                    .HasMaxLength(1)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcComisionEspecial).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcMcBruto).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PorcMcFinanciero).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PrecioMinimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioXcaja)
                    .HasColumnName("PrecioXCaja")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Publicacion)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.RecalcularMargen)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.Sdf)
                    .HasColumnName("SDF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioAprobo).HasMaxLength(20);

                entity.Property(e => e.UsuarioCreacion)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioPublico).HasMaxLength(20);

                entity.Property(e => e.Vendedor).HasMaxLength(4);
            });

            modelBuilder.Entity<Wsmy667>(entity =>
            {
                entity.HasKey(e => new { e.IdProducto, e.Tintas, e.MedidaBasica });

                entity.ToTable("WSMY667");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_WSMY667")
                    .IsUnique();

                entity.Property(e => e.IdProducto).HasMaxLength(12);

                entity.Property(e => e.FechaAgrega).HasColumnType("datetime");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.MillarRolloMinimo).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioAgrega).HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy668>(entity =>
            {
                entity.ToTable("WSMY668");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy668orden");

                entity.HasIndex(e => new { e.Factura, e.Articulo, e.Copy, e.FechaEntrega })
                    .HasName("IX_WSMY668");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Articulo)
                    .IsRequired()
                    .HasColumnName("ARTICULO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cantidad)
                    .HasColumnName("CANTIDAD")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Copy)
                    .HasColumnName("COPY")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.FechaEntrega).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaFactura).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Remision).HasColumnName("REMISION");

                entity.Property(e => e.Rventa)
                    .HasColumnName("RVenta")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Venta).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy669>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY669");

                entity.Property(e => e.FechaCreado)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NombrePrioridad)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.PorcDesde).HasColumnType("numeric(10, 2)");

                entity.Property(e => e.PorcHasta).HasColumnType("numeric(10, 2)");
            });

            modelBuilder.Entity<Wsmy670>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY670");

                entity.HasIndex(e => new { e.IdSubCategoria, e.PorcCoberturaDesde, e.PorcCoberturaHasta })
                    .HasName("IX_WSMY670");

                entity.HasIndex(e => new { e.IdSubCategoria, e.PorcComision, e.PorcCoberturaDesde, e.PorcCoberturaHasta })
                    .HasName("IX_WSMY670_1")
                    .IsUnique();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCoberturaDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);

                entity.HasOne(d => d.IdSubCategoriaNavigation)
                    .WithMany(p => p.Wsmy670)
                    .HasForeignKey(d => d.IdSubCategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY670_WSMY437");
            });

            modelBuilder.Entity<Wsmy67002222017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY67002222017");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.PorcCoberturaDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy670Log>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY670_Log");

                entity.HasIndex(e => new { e.IdSubCategoria, e.PorcComision, e.PorcCoberturaDesde, e.PorcCoberturaHasta })
                    .HasName("IX_WSMY670_Log_1");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCoberturaDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);

                entity.HasOne(d => d.IdSubCategoriaNavigation)
                    .WithMany(p => p.Wsmy670Log)
                    .HasForeignKey(d => d.IdSubCategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY670_Log_WSMY437");
            });

            modelBuilder.Entity<Wsmy671>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY671");

                entity.HasIndex(e => new { e.DiasCobranzaDesde, e.DiasCobranzaHasta, e.IdTipoNegocio })
                    .HasName("IX_WSMY671")
                    .IsUnique();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcDeduccion).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy671Log>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY671_Log");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcDeduccion).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy672>(entity =>
            {
                entity.HasKey(e => e.IdCuota);

                entity.ToTable("WSMY672");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY672")
                    .IsUnique();

                entity.Property(e => e.IdCuota).ValueGeneratedNever();

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy67202222017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY67202222017");

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy672Log>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY672_Log");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY672_Log")
                    .IsUnique();

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaModifica).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioCrea)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.UsuarioModifica).HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy673>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor });

                entity.ToTable("WSMY673");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY673")
                    .IsUnique();

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.RbsCuota)
                    .HasColumnName("RBsCuota")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbsVenta)
                    .HasColumnName("RBsVenta")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy674>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor, e.IdCuota });

                entity.ToTable("WSMY674");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY674")
                    .IsUnique();

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.RbsCuota)
                    .HasColumnName("RBsCuota")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbsVenta)
                    .HasColumnName("RBsVenta")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy675>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY675");

                entity.HasIndex(e => e.Documento)
                    .HasName("IX_WSMY675");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy675orden");

                entity.HasIndex(e => new { e.PeriodoDesde, e.PeriodoHasta })
                    .HasName("IX_WSMY675_1");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGrte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGteProducto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FichaGteProducto).HasDefaultValueSql("('')");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Impuesto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorFactura).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RecNumPadre).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TranCancela)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy675h>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY675H");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy675Horden");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGrte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGteProducto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FichaGteProducto).HasDefaultValueSql("('')");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Impuesto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorFactura).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RbsComision)
                    .HasColumnName("RBsComision")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsComisionGrte)
                    .HasColumnName("RBsComisionGrte")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsComisionGteProducto)
                    .HasColumnName("RBsComisionGteProducto")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RecNumPadre).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rmonto)
                    .HasColumnName("RMonto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RmontoReal)
                    .HasColumnName("RMontoReal")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TranCancela)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy675h08082019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY675H08082019");

                entity.Property(e => e.BsComision).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGrte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsComisionGteProducto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DocCancela).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Documento).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FechaIngreso).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdVendedor)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.Impuesto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.PorFactura).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.RbsComision)
                    .HasColumnName("RBsComision")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbsComisionGrte)
                    .HasColumnName("RBsComisionGrte")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RbsComisionGteProducto)
                    .HasColumnName("RBsComisionGteProducto")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RecNumPadre).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rmonto)
                    .HasColumnName("RMonto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RmontoReal)
                    .HasColumnName("RMontoReal")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TranCancela)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy676>(entity =>
            {
                entity.HasKey(e => e.RecNum);

                entity.ToTable("WSMY676");

                entity.Property(e => e.RecNum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaHistorico).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PeriodoDesde).HasColumnType("datetime");

                entity.Property(e => e.PeriodoHasta).HasColumnType("datetime");

                entity.Property(e => e.TotalRegPaCxc011).HasColumnName("TotalRegPaCXC011");

                entity.Property(e => e.TotalRegPaCxc012).HasColumnName("TotalRegPaCXC012");

                entity.Property(e => e.UsuarioRegistro)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy677>(entity =>
            {
                entity.HasKey(e => e.IdExcepcion);

                entity.ToTable("WSMY677");

                entity.HasIndex(e => e.IdCliente)
                    .HasName("IX_WSMY677")
                    .IsUnique();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy677Log>(entity =>
            {
                entity.HasKey(e => e.IdExcepcion);

                entity.ToTable("WSMY677_Log");

                entity.HasIndex(e => e.IdCliente)
                    .HasName("IX_WSMY677_Log");

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdCliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy678>(entity =>
            {
                entity.HasKey(e => e.IdSysFile)
                    .HasName("PK_Wsmy678");

                entity.ToTable("WSMY678");

                entity.Property(e => e.IdSysFile).ValueGeneratedNever();

                entity.Property(e => e.FactorClienteNuevo).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FactorClienteNuevoGte).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcExcesoCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcExcesoCuotaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorExcesoCobertura).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorExcesoCoberturaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorMaxExcesoCobertura).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy67802222027>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY67802222027");

                entity.Property(e => e.FactorClienteNuevo).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FactorClienteNuevoGte).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.PorcExcesoCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcExcesoCuotaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.ValorExcesoCobertura).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorExcesoCoberturaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorMaxExcesoCobertura).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy678Log>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY678_Log");

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FactorClienteNuevo).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FactorClienteNuevoGte).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcExcesoCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PorcExcesoCuotaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ValorExcesoCobertura).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorExcesoCoberturaGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValorMaxExcesoCobertura).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy679>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY679");

                entity.HasIndex(e => new { e.IdSubCategoria, e.VentaDesde, e.VentaHasta })
                    .HasName("IX_WSMY679")
                    .IsUnique();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.FlagEliminada).HasDefaultValueSql("((1))");

                entity.Property(e => e.PorcFlat).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.VentaDesde).HasColumnType("datetime");

                entity.Property(e => e.VentaHasta).HasColumnType("datetime");

                entity.Property(e => e.VigenteHasta).HasColumnType("datetime");
            });

            modelBuilder.Entity<Wsmy680>(entity =>
            {
                entity.HasKey(e => e.IdExcepcion);

                entity.ToTable("WSMY680");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_WSMY680")
                    .IsUnique();

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy680Log>(entity =>
            {
                entity.HasKey(e => e.IdExcepcion);

                entity.ToTable("WSMY680_Log");

                entity.HasIndex(e => e.Orden)
                    .HasName("IX_WSMY680_Log");

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioAgrega)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy681>(entity =>
            {
                entity.HasKey(e => e.IdVariable);

                entity.ToTable("WSMY681");

                entity.Property(e => e.IdVariable).HasMaxLength(20);

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy682>(entity =>
            {
                entity.HasKey(e => e.IdPago);

                entity.ToTable("WSMY682");

                entity.Property(e => e.IdPago).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FechaCompensado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy682al02072018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY682al02072018");

                entity.Property(e => e.FechaCompensado).HasColumnType("datetime");

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.IdPago).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Wsmy683>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_WSMY683_1");

                entity.ToTable("WSMY683");

                entity.HasIndex(e => new { e.Transaccion, e.Documento, e.Linea, e.IdCliente, e.NroRc })
                    .HasName("IX_WSMY683")
                    .IsUnique();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Documento).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaReversado).HasColumnType("datetime");

                entity.Property(e => e.NroRc).HasColumnName("NroRC");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy684>(entity =>
            {
                entity.HasKey(e => e.IdTipoNegocio);

                entity.ToTable("WSMY684");

                entity.Property(e => e.IdTipoNegocio).ValueGeneratedNever();

                entity.Property(e => e.NombreTipoNegocio).HasMaxLength(50);
            });

            modelBuilder.Entity<Wsmy685>(entity =>
            {
                entity.HasKey(e => e.IdPago);

                entity.ToTable("WSMY685");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy685orden");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.FechaPagado).HasColumnType("datetime");

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoGteProducto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.OrdenString).HasMaxLength(20);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.Rmonto)
                    .HasColumnName("RMonto")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RmontoGte)
                    .HasColumnName("RMontoGte")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RmontoGteProducto)
                    .HasColumnName("RMontoGteProducto")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2)
                    .HasDefaultValueSql("(N'PM')");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy685Log>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY685_Log");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wsmy685_Logorden");

                entity.Property(e => e.Accion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.FechaPagado).HasColumnType("datetime");

                entity.Property(e => e.Monto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoGte).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MontoGteProducto).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.Transaccion)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy686>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY686");

                entity.Property(e => e.DescPeriodo)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.Desde).HasColumnType("datetime");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.FechaCerrado)
                    .HasColumnName("fechaCerrado")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hasta).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PeriodoCerrado).HasDefaultValueSql("((0))");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy687>(entity =>
            {
                entity.HasKey(e => new { e.IdCliente, e.IdVendedor, e.Ano, e.Mes });

                entity.ToTable("WSMY687");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy688>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdOficina });

                entity.ToTable("WSMY688");

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy689>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdOficina, e.IdCuota })
                    .HasName("PK_WSMY689_1");

                entity.ToTable("WSMY689");

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy690>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_WSMY690_1");

                entity.ToTable("WSMY690");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdGerente)
                    .IsRequired()
                    .HasMaxLength(4);

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntosDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntosHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy691>(entity =>
            {
                entity.HasKey(e => new { e.IdCliente, e.IdClientePadre });

                entity.ToTable("WSMY691");

                entity.Property(e => e.IdCliente).HasMaxLength(10);

                entity.Property(e => e.IdClientePadre).HasMaxLength(10);

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy692>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY692");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BsDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.HasOne(d => d.IdSubCategoriaNavigation)
                    .WithMany(p => p.Wsmy692)
                    .HasForeignKey(d => d.IdSubCategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY692_WSMY437");
            });

            modelBuilder.Entity<Wsmy69202222017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY69202222017");

                entity.Property(e => e.BsDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy692resp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WSMY692Resp");

                entity.Property(e => e.BsDesde).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsHasta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Porcentaje).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Recnum).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Wsmy693>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY693");

                entity.HasIndex(e => new { e.Ficha, e.IdSubCategoria })
                    .HasName("IX_WSMY693")
                    .IsUnique();

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Ficha)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<Wsmy694>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.Ficha });

                entity.ToTable("WSMY694");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY694")
                    .IsUnique();

                entity.Property(e => e.Ficha).HasMaxLength(10);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy695>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.Ficha, e.IdSubCategoria });

                entity.ToTable("WSMY695");

                entity.HasIndex(e => e.Recnum)
                    .HasName("IX_WSMY695")
                    .IsUnique();

                entity.Property(e => e.Ficha).HasMaxLength(10);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy696>(entity =>
            {
                entity.HasKey(e => e.Recnum);

                entity.ToTable("WSMY696");

                entity.HasIndex(e => new { e.Ficha, e.IdSubCategoria, e.PorcComision, e.PorcCoberturaDesde, e.PorcCoberturaHasta })
                    .HasName("IX_WSMY696_1")
                    .IsUnique();

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaActualiza).HasColumnType("datetime");

                entity.Property(e => e.Ficha)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.PorcCoberturaDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcComision).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioActualiza).HasMaxLength(40);

                entity.HasOne(d => d.IdSubCategoriaNavigation)
                    .WithMany(p => p.Wsmy696)
                    .HasForeignKey(d => d.IdSubCategoria)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_WSMY696_WSMY437");
            });

            modelBuilder.Entity<Wsmy697>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor });

                entity.ToTable("WSMY697");

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVentaNew).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaNew).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixProNew).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy698>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.IdVendedor, e.IdCuota });

                entity.ToTable("WSMY698");

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.BsCuota).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BsVentaNew).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcCobertura).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcCoberturaNew).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixPro).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PorcMixProNew).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy699>(entity =>
            {
                entity.HasKey(e => new { e.IdVendedor, e.IdCuota })
                    .HasName("PK_WSMY699_1");

                entity.ToTable("WSMY699");

                entity.Property(e => e.IdVendedor).HasMaxLength(4);

                entity.Property(e => e.BsVenta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wsmy700>(entity =>
            {
                entity.HasKey(e => new { e.Ano, e.Mes, e.Factura });

                entity.ToTable("WSMY700");

                entity.Property(e => e.FechaGeneracion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Recnum)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Saldo).HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<Wsmy701>(entity =>
            {
                entity.ToTable("WSMY701");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.FechaActualiza)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PorcentajePagar).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntosDesde).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.PuntosHasta).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.UsuarioActualiza)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Wsmy702>(entity =>
            {
                entity.ToTable("WSMY702");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.FechaAprobado).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRechazado).HasColumnType("smalldatetime");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FlagAprobado).HasDefaultValueSql("((0))");

                entity.Property(e => e.FlagRechazado).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdProducto)
                    .IsRequired()
                    .HasMaxLength(12);

                entity.Property(e => e.IdUsuario)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.MailConsultor)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.MailPlanificacion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Millares).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.NombreForma).HasMaxLength(65);

                entity.Property(e => e.RecNum).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Wtmy093>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("PK_CTMY078");

                entity.ToTable("WTMY093");

                entity.HasIndex(e => e.Orden)
                    .HasName("dep_wtmy093orden");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.BsmcFacturado)
                    .HasColumnName("BSMC_FACTURADO")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsmcPendiente)
                    .HasColumnName("BSMC_PENDIENTE")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodigoProducto)
                    .IsRequired()
                    .HasColumnName("CODIGO_PRODUCTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NombreProducto)
                    .IsRequired()
                    .HasColumnName("NOMBRE_PRODUCTO")
                    .HasMaxLength(65)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PorcMc)
                    .HasColumnName("PORC_MC")
                    .HasColumnType("numeric(8, 2)");

                entity.Property(e => e.RbsmcFacturado)
                    .HasColumnName("RBSMC_FACTURADO")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsmcPendiente)
                    .HasColumnName("RBSMC_PENDIENTE")
                    .HasColumnType("numeric(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RventaFacturado)
                    .HasColumnName("RVENTA_FACTURADO")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RventaPendiente)
                    .HasColumnName("RVENTA_PENDIENTE")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Titulo1)
                    .IsRequired()
                    .HasColumnName("TITULO1")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TituloVenta)
                    .IsRequired()
                    .HasColumnName("TITULO_VENTA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("USUARIO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VentaFacturado)
                    .HasColumnName("VENTA_FACTURADO")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.VentaPendiente)
                    .HasColumnName("VENTA_PENDIENTE")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<XlsCuotas>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AnoContable).HasColumnName("ANO_CONTABLE");

                entity.Property(e => e.CodigoOficina).HasColumnName("CODIGO_OFICINA");

                entity.Property(e => e.CodigoSupervisor)
                    .HasColumnName("CODIGO_SUPERVISOR")
                    .HasMaxLength(255);

                entity.Property(e => e.CodigoVendedor)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .HasMaxLength(255);

                entity.Property(e => e.CuotaVentas).HasColumnName("CUOTA_VENTAS");

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasColumnName("NOMBRE_OFICINA")
                    .HasMaxLength(255);

                entity.Property(e => e.NombreSupervisor)
                    .HasColumnName("NOMBRE_SUPERVISOR")
                    .HasMaxLength(255);

                entity.Property(e => e.NombreVendedor)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductoCuota)
                    .HasColumnName("PRODUCTO_CUOTA")
                    .HasMaxLength(255);

                entity.Property(e => e.ProductoMayor)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .HasMaxLength(255);

                entity.Property(e => e.TipoCuota)
                    .HasColumnName("TIPO_CUOTA")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<XmlSeniat>(entity =>
            {
                entity.HasNoKey();

                entity.HasComment("Datos XML Reportados al Seniat");

                entity.Property(e => e.BaseImponibleVenta)
                    .HasColumnName("Base_imponible_venta")
                    .HasColumnType("decimal(18, 2)")
                    .HasComment("Monto en bolivares sin iva");

                entity.Property(e => e.FechaElaboracion)
                    .HasColumnName("Fecha_elaboracion")
                    .HasColumnType("datetime")
                    .HasComment("Fecha de Produccion Orden");

                entity.Property(e => e.FinNumeroDocumento)
                    .HasMaxLength(8)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FinNumeroSecuencial)
                    .HasColumnName("Fin_numero_secuencial")
                    .HasComment("Fin de numeracion de control fiscal");

                entity.Property(e => e.IdDoc).ValueGeneratedOnAdd();

                entity.Property(e => e.Identificador)
                    .HasMaxLength(2)
                    .HasComment("Numero Prefijo o Serie del Documento");

                entity.Property(e => e.InicioNumeroDocumento).HasDefaultValueSql("((0))");

                entity.Property(e => e.InicioNumeroSecuencial)
                    .HasColumnName("Inicio_numero_secuencial")
                    .HasComment("Inicio de numeracion de control fiscal");

                entity.Property(e => e.MontoIvaVenta)
                    .HasColumnName("Monto_iva_venta")
                    .HasColumnType("decimal(18, 2)")
                    .HasComment("monto en bolivares del iva segun tasa vigente");

                entity.Property(e => e.NumeroFacturaVenta)
                    .HasColumnName("Numero_factura_venta")
                    .HasComment("Factura asociada para el periodo o fecha");

                entity.Property(e => e.RifUsuario)
                    .HasColumnName("Rif_usuario")
                    .HasMaxLength(15)
                    .HasComment("Registro de Informacion Fiscal");

                entity.Property(e => e.TipoDocumento)
                    .HasColumnName("Tipo_documento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("Identificador del Tipo de Formato Fiscal (FA-NC-ND-NE)");

                entity.Property(e => e.XmlData).HasColumnType("xml");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
